                         IIIIIIIIII   NN        NN   SSSSSSSSSS   TTTTTTTTTTTT   AAAAAAAAAA   LL            LL
                        IIIIIIIIII   NNN       NN  SSSSSSSSSSSS  TTTTTTTTTTTT  AAAAAAAAAAAA  LL            LL
                           II       NNNN      NN  SS        SS       TT       AA        AA  LL            LL
                          II       NN NN     NN  SS                 TT       AA        AA  LL            LL
                         II       NN  NN    NN  SSS                TT       AA        AA  LL            LL
                        II       NN   NN   NN   SSSSSSSSS         TT       AAAAAAAAAAAA  LL            LL
                       II       NN    NN  NN    SSSSSSSSS        TT       AAAAAAAAAAAA  LL            LL
                      II       NN     NN NN           SSS       TT       AA        AA  LL            LL
                     II       NN      NNNN            SS       TT       AA        AA  LL            LL
                    II       NN       NNN  SS        SS       TT       AA        AA  LL            LL
               IIIIIIIIII   NN        NN  SSSSSSSSSSSS       TT       AA        AA  LLLLLLLLLLLL  LLLLLLLLLLLL
              IIIIIIIIII   NN         N   SSSSSSSSSS        TT       AA        AA  LLLLLLLLLLLL  LLLLLLLLLLLL



                    JJJJJJJJJJ        444     555555555555        444     555555555555                 AAAAAAAAAA
                    JJJJJJJJJJ       4444     555555555555       4444     555555555555                AAAAAAAAAAAA
                        JJ          44 44     55                44 44     55                          AA        AA
                        JJ         44  44     55               44  44     55                          AA        AA
                        JJ        44   44     55              44   44     55                          AA        AA
                        JJ       44444444444  555555555      44444444444  555555555                   AAAAAAAAAAAA
                        JJ      444444444444  5555555555    444444444444  5555555555                  AAAAAAAAAAAA
                        JJ             44              55          44              55                 AA        AA
                  JJ    JJ             44               55         44               55                AA        AA
                  JJ    JJ             44               55         44               55                AA        AA
                  JJJJJJJJ             44     555555555555         44     555555555555                AA        AA
                   JJJJJJ              44     55555555555          44     55555555555                 AA        AA


****A  START  JOB 4545  INSTALL   PDSUTIL               ROOM        8.54.43 AM 06 APR 23  PRINTER1  SYS TK4-  JOB 4545  START  A****
****A  START  JOB 4545  INSTALL   PDSUTIL               ROOM        8.54.43 AM 06 APR 23  PRINTER1  SYS TK4-  JOB 4545  START  A****
****A  START  JOB 4545  INSTALL   PDSUTIL               ROOM        8.54.43 AM 06 APR 23  PRINTER1  SYS TK4-  JOB 4545  START  A****
****A  START  JOB 4545  INSTALL   PDSUTIL               ROOM        8.54.43 AM 06 APR 23  PRINTER1  SYS TK4-  JOB 4545  START  A****
                                                J E S 2   J O B   L O G


08.54.39 JOB 4545  IEF677I WARNING MESSAGE(S) FOR JOB INSTALL  ISSUED
08.54.39 JOB 4545  $HASP373 INSTALL  STARTED - INIT  4 - CLASS S - SYS TK4-
08.54.39 JOB 4545  IEF403I INSTALL - STARTED - TIME=08.54.39
08.54.39 JOB 4545  IEFACTRT - Stepname  Procstep  Program   Retcode
08.54.39 JOB 4545  INSTALL    S1                  IDCAMS    RC= 0000
08.54.40 JOB 4545  INSTALL    S2                  IEFBR14   RC= 0000
08.54.40 JOB 4545  INSTALL    S3        ASM       IFOX00    RC= 0000
08.54.40 JOB 4545  INSTALL    S3        LKED      IEWL      RC= 0000
08.54.40 JOB 4545  INSTALL    S4        ASM       IFOX00    RC= 0000
08.54.41 JOB 4545  INSTALL    S4        LKED      IEWL      RC= 0000
08.54.41 JOB 4545  INSTALL    S5        COB       IKFCBL00  RC= 0004
08.54.41 JOB 4545  INSTALL    S5        LKED      IEWL      RC= 0000
08.54.42 JOB 4545  INSTALL    S6        PL1L      IEMAA     RC= 0008
08.54.42 JOB 4545  INSTALL    S6        LKED      IEWL      RC= 0000
08.54.43 JOB 4545  INSTALL    S7        PL1L      IEMAA     RC= 0004
08.54.43 JOB 4545  INSTALL    S7        LKED      IEWL      RC= 0000
08.54.43 JOB 4545  IEF404I INSTALL - ENDED - TIME=08.54.43
08.54.43 JOB 4545  $HASP395 INSTALL  ENDED


------ JES2 JOB STATISTICS ------


 06 APR 23 JOB EXECUTION DATE


        62 CARDS READ


     5,308 SYSOUT PRINT RECORDS


        57 SYSOUT PUNCH RECORDS


      0.06 MINUTES EXECUTION TIME
    1     //INSTALL JOB 00,'PDSUTIL',CLASS=S,MSGCLASS=A,MSGLEVEL=(1,1),           JOB 4545
          //    USER=HERC01,PASSWORD=
          ***********************************************************************
          ***                                                                   *
          ***   THIS JCL CREATES, COMPILES THE PDS MEMBER ACCESS ROUTINES       *
          ***                                                                   *
          ***   THE DATASETS CREATE BY RECEIVE.JCL WILL BE USED TO GENERATE     *
          ***   EXECUTABLES INTO DATASET HERC01.PDSUTIL.LOADLIB ON PUB000.      *
          ***                                                                   *
          ***   YOU MAY CHANGE THE HIGH LEVEL QUALIFIER AND/OR THE VOLUME       *
          ***   THE LOADLIB WILL BE CREATED ON.  IF YOU PLAN TO MOVE/COPY       *
          ***   THE LOAD MODULES TO A DIFFERENT LOADLIB, YOU MIGHT WANT TO      *
          ***   ADJUST THE BLKSIZE IN STEP S2.                                  *
          ***                                                                   *
          ***********************************************************************
          ***
    2     //S1     EXEC PGM=IDCAMS
    3     //SYSPRINT DD SYSOUT=*
    4     //SYSIN    DD *
    5     //S2     EXEC PGM=IEFBR14
    6     //DD       DD DSN=HERC01.PDSUTIL.LOADLIB,DISP=(NEW,CATLG,DELETE),
          //         UNIT=SYSDA,VOL=SER=PUB000,SPACE=(TRK,(10,10,10)),
          //         DCB=(RECFM=U,BLKSIZE=4096,DSORG=PO)
          ***
    7     //S3     EXEC ASMFCL,
          //            MAC1='HERC01.PDSUTIL.ASM'
    8     XXASMFCL   PROC MAC='SYS1.MACLIB',MAC1='SYS1.MACLIB',                   00000100
          XX         MAC2='SYS1.MACLIB',MAC3='SYS1.MACLIB',SOUT='*'               00000200
    9     XXASM      EXEC PGM=IFOX00,PARM=OBJ,REGION=128K                         00000300
   10     XXSYSLIB   DD   DSN=&MAC,DISP=SHR                                       00000400
   11     XX         DD   DSN=&MAC1,DISP=SHR                                      00000500
   12     XX         DD   DSN=&MAC2,DISP=SHR                                      00000600
   13     XX         DD   DSN=&MAC3,DISP=SHR                                      00000700
   14     XXSYSUT1   DD   DSN=&&SYSUT1,UNIT=SYSSQ,SPACE=(1700,(600,100)),         00000800
          XX             SEP=(SYSLIB)                                             00000900
   15     XXSYSUT2   DD   DSN=&&SYSUT2,UNIT=SYSSQ,SPACE=(1700,(300,50)),          00001000
          XX             SEP=(SYSLIB,SYSUT1)                                      00001100
   16     XXSYSUT3   DD   DSN=&&SYSUT3,UNIT=SYSSQ,SPACE=(1700,(300,50))           00001200
   17     XXSYSPRINT DD   SYSOUT=&SOUT,DCB=BLKSIZE=1089                           00001300
   18     XXSYSPUNCH DD   SYSOUT=B                                                00001400
   19     XXSYSGO    DD   DSN=&&OBJSET,UNIT=SYSSQ,SPACE=(80,(200,50)),            00001500
          XX             DISP=(MOD,PASS)                                          00001600
   20     //ASM.SYSIN DD DSN=HERC01.PDSUTIL.ASM(DATECNV),DISP=SHR
   21     XXLKED     EXEC PGM=IEWL,PARM=(XREF,LET,LIST,NCAL),REGION=128K,         00001700
          XX             COND=(8,LT,ASM)                                          00001800
   22     XXSYSLIN   DD   DSN=&&OBJSET,DISP=(OLD,DELETE)                          00001900
   23     XX         DD   DDNAME=SYSIN                                            00002000
   24     //LKED.SYSLMOD DD DSN=HERC01.PDSUTIL.LOADLIB(DATECNV),DISP=SHR
          ***
          X/SYSLMOD  DD   DSN=&&GOSET(GO),UNIT=SYSDA,SPACE=(1024,(50,20,1)),      00002100
          XX             DISP=(MOD,PASS)                                          00002200
   25     XXSYSUT1   DD   DSN=&&SYSUT1,UNIT=(SYSDA,SEP=(SYSLIN,SYSLMOD)),         00002300
          XX             SPACE=(1024,(50,20))                                     00002400
   26     XXSYSPRINT DD   SYSOUT=&SOUT                                            00002500
   27     //S4     EXEC ASMFCL,
          //            MAC1='HERC01.PDSUTIL.ASM'
   28     XXASMFCL   PROC MAC='SYS1.MACLIB',MAC1='SYS1.MACLIB',                   00000100
          XX         MAC2='SYS1.MACLIB',MAC3='SYS1.MACLIB',SOUT='*'               00000200
   29     XXASM      EXEC PGM=IFOX00,PARM=OBJ,REGION=128K                         00000300
   30     XXSYSLIB   DD   DSN=&MAC,DISP=SHR                                       00000400
   31     XX         DD   DSN=&MAC1,DISP=SHR                                      00000500
   32     XX         DD   DSN=&MAC2,DISP=SHR                                      00000600
   33     XX         DD   DSN=&MAC3,DISP=SHR                                      00000700
   34     XXSYSUT1   DD   DSN=&&SYSUT1,UNIT=SYSSQ,SPACE=(1700,(600,100)),         00000800
          XX             SEP=(SYSLIB)                                             00000900
   35     XXSYSUT2   DD   DSN=&&SYSUT2,UNIT=SYSSQ,SPACE=(1700,(300,50)),          00001000
          XX             SEP=(SYSLIB,SYSUT1)                                      00001100
   36     XXSYSUT3   DD   DSN=&&SYSUT3,UNIT=SYSSQ,SPACE=(1700,(300,50))           00001200
   37     XXSYSPRINT DD   SYSOUT=&SOUT,DCB=BLKSIZE=1089                           00001300
   38     XXSYSPUNCH DD   SYSOUT=B                                                00001400
   39     XXSYSGO    DD   DSN=&&OBJSET,UNIT=SYSSQ,SPACE=(80,(200,50)),            00001500
          XX             DISP=(MOD,PASS)                                          00001600
   40     //ASM.SYSIN DD DSN=HERC01.PDSUTIL.ASM(GETPDS),DISP=SHR
   41     XXLKED     EXEC PGM=IEWL,PARM=(XREF,LET,LIST,NCAL),REGION=128K,         00001700
          XX             COND=(8,LT,ASM)                                          00001800
   42     XXSYSLIN   DD   DSN=&&OBJSET,DISP=(OLD,DELETE)                          00001900
   43     XX         DD   DDNAME=SYSIN                                            00002000
   44     //LKED.SYSLMOD DD DSN=HERC01.PDSUTIL.LOADLIB(GETPDS),DISP=SHR
          ***
          X/SYSLMOD  DD   DSN=&&GOSET(GO),UNIT=SYSDA,SPACE=(1024,(50,20,1)),      00002100
          XX             DISP=(MOD,PASS)                                          00002200
   45     XXSYSUT1   DD   DSN=&&SYSUT1,UNIT=(SYSDA,SEP=(SYSLIN,SYSLMOD)),         00002300
          XX             SPACE=(1024,(50,20))                                     00002400
   46     XXSYSPRINT DD   SYSOUT=&SOUT                                            00002500
   47     //S5     EXEC COBUCL,
          //           PARM.COB='LOAD,SUPMAP,SIZE=2048K,BUF=1024K,LIB',
          //           PARM.LKED='MAP'
   48     XXCOBUCL PROC SOUT='*'                                                  00000100
   49     XXCOB  EXEC  PGM=IKFCBL00,                                              00000200
          XX           PARM='LOAD,SUPMAP,SIZE=2048K,BUF=1024K'                    00000300
   50     XXSYSPRINT  DD SYSOUT=&SOUT                                             00000400
   51     XXSYSUT1 DD UNIT=SYSDA,SPACE=(460,(700,100))                            00000500
   52     XXSYSUT2 DD UNIT=SYSDA,SPACE=(460,(700,100))                            00000600
   53     XXSYSUT3 DD UNIT=SYSDA,SPACE=(460,(700,100))                            00000700
   54     XXSYSUT4 DD UNIT=SYSDA,SPACE=(460,(700,100))                            00000800
   55     XXSYSLIN DD DSNAME=&LOADSET,DISP=(MOD,PASS),UNIT=SYSDA,                 00000900
          XX             SPACE=(80,(500,100))                                     00001000
   56     //COB.SYSIN DD DSN=HERC01.PDSUTIL.COB(PDSUNLDC),DISP=SHR
   57     //COB.SYSLIB DD DSN=HERC01.PDSUTIL.COB,DISP=SHR
   58     //COB.SYSPUNCH DD DUMMY
   59     XXLKED EXEC PGM=IEWL,PARM='LIST,XREF,LET',COND=(5,LT,COB)               00001100
   60     XXSYSLIN  DD DSNAME=&LOADSET,DISP=(OLD,DELETE)                          00001200
   61     XX  DD  DDNAME=SYSIN                                                    00001300
   62     //LKED.SYSLIB DD
          X/SYSLIB DD   DSNAME=SYS1.COBLIB,DISP=SHR                               00001400
   63     //          DD DSN=HERC01.PDSUTIL.LOADLIB,DISP=SHR
   64     //LKED.SYSLMOD DD DSN=HERC01.PDSUTIL.LOADLIB(PDSUNLDC),DISP=SHR
          ***
          X/SYSLMOD DD DSNAME=&GODATA(RUN),DISP=(NEW,PASS),UNIT=SYSDA,            00001500
          XX             SPACE=(1024,(50,20,1))                                   00001600
   65     XXSYSUT1 DD UNIT=(SYSDA,SEP=(SYSLIN,SYSLMOD)),SPACE=(1024,(50,20))      00001700
   66     XXSYSPRINT DD SYSOUT=&SOUT                                              00001800
   67     //S6     EXEC PL1LFCL,
          //            PARM.PL1L='MACRO'
   68     XXPL1LFCL PROC SOUT='*'                                                 00000100
   69     XXPL1L   EXEC  PGM=IEMAA,PARM='LOAD,NODECK'                             00000200
   70     XXSYSPRINT DD  SYSOUT=&SOUT                                             00000300
   71     XXSYSLIN   DD  DSNAME=&&LOADSET,DISP=(MOD,PASS),UNIT=SYSSQ,            *00000400
          XX             SPACE=(80,(250,100))                                     00000500
   72     XXSYSUT3  DD  DSNAME=&&SYSUT3,UNIT=SYSDA,SPACE=(80,(250,250)),         *00000600
          XX             DCB=BLKSIZE=80                                           00000700
   73     XXSYSUT1   DD  DSNAME=&&SYSUT1,UNIT=SYSDA,SPACE=(1024,(60,60),,CONTIG),*00000800
          XX             SEP=(SYSUT3,SYSLIN),DCB=BLKSIZE=1024                     00000900
   74     //PL1L.SYSIN DD DSN=HERC01.PDSUTIL.PLI(PDSUNLDP),DISP=SHR
   75     //PL1L.SYSLIB DD DSN=HERC01.PDSUTIL.PLI,DISP=SHR
   76     XXLKED   EXEC  PGM=IEWL,PARM='XREF,LIST',COND=(9,LT,PL1L)               00001000
   77     //LKED.SYSLIB  DD
          X/SYSLIB   DD  DSNAME=SYS1.PL1LIB,DISP=SHR                              00001100
   78     //             DD DSN=HERC01.PDSUTIL.LOADLIB,DISP=SHR
   79     //LKED.SYSLMOD DD DSN=HERC01.PDSUTIL.LOADLIB(PDSUNLDP),DISP=SHR
          ***
          X/SYSLMOD  DD  DSNAME=&&GOSET(GO),DISP=(MOD,PASS),                     *00001200
          XX             UNIT=SYSDA,SPACE=(1024,(50,20,1),RLSE)                   00001300
   80     XXSYSUT1   DD  DSNAME=&&SYSUT1,UNIT=SYSDA,SPACE=(1024,(200,20)),       *00001400
          XX             SEP=(SYSLMOD,SYSLIB),DCB=BLKSIZE=1024                    00001500
   81     XXSYSPRINT DD  SYSOUT=&SOUT                                             00001600
   82     XXSYSLIN   DD  DSNAME=&&LOADSET,DISP=(OLD,DELETE)                       00001700
   83     XX         DD  DDNAME=SYSIN                                             00001800
   84     //S7     EXEC PL1LFCL,
          //            PARM.PL1L='MACRO'
   85     XXPL1LFCL PROC SOUT='*'                                                 00000100
   86     XXPL1L   EXEC  PGM=IEMAA,PARM='LOAD,NODECK'                             00000200
   87     XXSYSPRINT DD  SYSOUT=&SOUT                                             00000300
   88     XXSYSLIN   DD  DSNAME=&&LOADSET,DISP=(MOD,PASS),UNIT=SYSSQ,            *00000400
          XX             SPACE=(80,(250,100))                                     00000500
   89     XXSYSUT3  DD  DSNAME=&&SYSUT3,UNIT=SYSDA,SPACE=(80,(250,250)),         *00000600
          XX             DCB=BLKSIZE=80                                           00000700
   90     XXSYSUT1   DD  DSNAME=&&SYSUT1,UNIT=SYSDA,SPACE=(1024,(60,60),,CONTIG),*00000800
          XX             SEP=(SYSUT3,SYSLIN),DCB=BLKSIZE=1024                     00000900
   91     //PL1L.SYSIN DD DSN=HERC01.PDSUTIL.PLI(PDSCANR),DISP=SHR
   92     //PL1L.SYSLIB DD DSN=HERC01.PDSUTIL.PLI,DISP=SHR
   93     XXLKED   EXEC  PGM=IEWL,PARM='XREF,LIST',COND=(9,LT,PL1L)               00001000
   94     //LKED.SYSLIB  DD
          X/SYSLIB   DD  DSNAME=SYS1.PL1LIB,DISP=SHR                              00001100
   95     //             DD DSN=HERC01.PDSUTIL.LOADLIB,DISP=SHR
   96     //LKED.SYSLMOD DD DSN=HERC01.PDSUTIL.LOADLIB(PDSCANR),DISP=SHR
          ***
          X/SYSLMOD  DD  DSNAME=&&GOSET(GO),DISP=(MOD,PASS),                     *00001200
          XX             UNIT=SYSDA,SPACE=(1024,(50,20,1),RLSE)                   00001300
   97     XXSYSUT1   DD  DSNAME=&&SYSUT1,UNIT=SYSDA,SPACE=(1024,(200,20)),       *00001400
          XX             SEP=(SYSLMOD,SYSLIB),DCB=BLKSIZE=1024                    00001500
   98     XXSYSPRINT DD  SYSOUT=&SOUT                                             00001600
   99     XXSYSLIN   DD  DSNAME=&&LOADSET,DISP=(OLD,DELETE)                       00001700
  100     XX         DD  DDNAME=SYSIN                                             00001800
 STMT NO. MESSAGE
-
   10     IEF653I SUBSTITUTION JCL - DSN=SYS1.MACLIB,DISP=SHR
   11     IEF653I SUBSTITUTION JCL - DSN=HERC01.PDSUTIL.ASM,DISP=SHR
   12     IEF653I SUBSTITUTION JCL - DSN=SYS1.MACLIB,DISP=SHR
   13     IEF653I SUBSTITUTION JCL - DSN=SYS1.MACLIB,DISP=SHR
   17     IEF653I SUBSTITUTION JCL - SYSOUT=*,DCB=BLKSIZE=1089
   26     IEF653I SUBSTITUTION JCL - SYSOUT=*
   30     IEF653I SUBSTITUTION JCL - DSN=SYS1.MACLIB,DISP=SHR
   31     IEF653I SUBSTITUTION JCL - DSN=HERC01.PDSUTIL.ASM,DISP=SHR
   32     IEF653I SUBSTITUTION JCL - DSN=SYS1.MACLIB,DISP=SHR
   33     IEF653I SUBSTITUTION JCL - DSN=SYS1.MACLIB,DISP=SHR
   37     IEF653I SUBSTITUTION JCL - SYSOUT=*,DCB=BLKSIZE=1089
   46     IEF653I SUBSTITUTION JCL - SYSOUT=*
   50     IEF653I SUBSTITUTION JCL - SYSOUT=*
   66     IEF653I SUBSTITUTION JCL - SYSOUT=*
   70     IEF653I SUBSTITUTION JCL - SYSOUT=*
   81     IEF653I SUBSTITUTION JCL - SYSOUT=*
   87     IEF653I SUBSTITUTION JCL - SYSOUT=*
   98     IEF653I SUBSTITUTION JCL - SYSOUT=*
   27     IEF686I DDNAME REFERRED TO ON DDNAME KEYWORD IN PRIOR STEP WAS NOT RESOLVED
   47     IEF686I DDNAME REFERRED TO ON DDNAME KEYWORD IN PRIOR STEP WAS NOT RESOLVED
   67     IEF686I DDNAME REFERRED TO ON DDNAME KEYWORD IN PRIOR STEP WAS NOT RESOLVED
   84     IEF686I DDNAME REFERRED TO ON DDNAME KEYWORD IN PRIOR STEP WAS NOT RESOLVED
  100     IEF686I DDNAME REFERRED TO ON DDNAME KEYWORD IN PRIOR STEP WAS NOT RESOLVED
IEF236I ALLOC. FOR INSTALL S1
IEF237I JES2 ALLOCATED TO SYSPRINT
IEF237I JES2 ALLOCATED TO SYSIN
IEF237I 240  ALLOCATED TO SYS00002
IEF237I 240  ALLOCATED TO SYS00001
IEF285I   HERC01.PDSUTIL.LOADLIB                       KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF142I INSTALL S1 - STEP WAS EXECUTED - COND CODE 0000
IEF285I   JES2.JOB04545.SO0102                         SYSOUT
IEF285I   JES2.JOB04545.SI0101                         SYSIN
IEF285I   SYS1.UCAT.TSO                                KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF373I STEP /S1      / START 23096.0854
IEF374I STEP /S1      / STOP  23096.0854 CPU    0MIN 00.04SEC SRB    0MIN 00.01SEC VIRT   196K SYS   256K
************************************************************************************************************************************
*     1. Jobstep of job: INSTALL     Stepname: S1          Program name: IDCAMS     Executed on 06.04.23 from 08.54.39 to 08.54.39 *
*         elapsed time  00:00:00,07                      CPU-Identifier:  TK4-           Page-in:      0                           *
*             CPU time  00:00:00,05               Virtual Storage used:    196K         Page-out:      0                           *
*           corr. CPU:  00:00:00,05   CPU time has been corrected by  1 / 1,0  multiplier                                          *
*                                                                                                                                  *
*     I/O Operation                                                                                                                *
*     Number of records read via DD * or DD DATA:      2                                                                           *
*     DMY.......0 DMY.......0 240.......0                                                                                          *
*                                                                                                                                  *
*                                          Charge for step (w/o SYSOUT):          0,08                                             *
************************************************************************************************************************************
IEF236I ALLOC. FOR INSTALL S2
IEF237I 240  ALLOCATED TO DD
IEF237I 240  ALLOCATED TO SYS00012
IEF142I INSTALL S2 - STEP WAS EXECUTED - COND CODE 0000
IEF285I   HERC01.PDSUTIL.LOADLIB                       CATALOGED     *--------0
IEF285I   VOL SER NOS= PUB000.
IEF285I   SYS1.UCAT.TSO                                KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF373I STEP /S2      / START 23096.0854
IEF374I STEP /S2      / STOP  23096.0854 CPU    0MIN 00.00SEC SRB    0MIN 00.00SEC VIRT     4K SYS   220K
IEF236I ALLOC. FOR INSTALL ASM S3
IEF237I 148  ALLOCATED TO SYSLIB
IEF237I 240  ALLOCATED TO
IEF237I 148  ALLOCATED TO
IEF237I 148  ALLOCATED TO
IEF237I 240  ALLOCATED TO SYS00014
IEF237I 180  ALLOCATED TO SYSUT1
IEF237I 140  ALLOCATED TO SYSUT2
IEF237I 190  ALLOCATED TO SYSUT3
IEF237I JES2 ALLOCATED TO SYSPRINT
IEF237I JES2 ALLOCATED TO SYSPUNCH
IEF237I 170  ALLOCATED TO SYSGO
IEF237I 240  ALLOCATED TO SYSIN
IEF142I INSTALL ASM S3 - STEP WAS EXECUTED - COND CODE 0000
IEF285I   SYS1.MACLIB                                  KEPT          *--------9
IEF285I   VOL SER NOS= MVSRES.
IEF285I   HERC01.PDSUTIL.ASM                           KEPT          *-------24
IEF285I   VOL SER NOS= PUB000.
IEF285I   SYS1.MACLIB                                  KEPT          *--------0
IEF285I   VOL SER NOS= MVSRES.
IEF285I   SYS1.MACLIB                                  KEPT          *--------0
IEF285I   VOL SER NOS= MVSRES.
IEF285I   SYS1.UCAT.TSO                                KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF285I   SYS23096.T085439.RA000.INSTALL.SYSUT1        DELETED       *-------46
IEF285I   VOL SER NOS= WORK02.
IEF285I   SYS23096.T085439.RA000.INSTALL.SYSUT2        DELETED       *-------11
IEF285I   VOL SER NOS= WORK00.
IEF285I   SYS23096.T085439.RA000.INSTALL.SYSUT3        DELETED       *--------8
IEF285I   VOL SER NOS= WORK03.
IEF285I   JES2.JOB04545.SO0103                         SYSOUT
IEF285I   JES2.JOB04545.SO0104                         SYSOUT
IEF285I   SYS23096.T085439.RA000.INSTALL.OBJSET        PASSED        *-------18
IEF285I   VOL SER NOS= WORK01.
IEF285I   HERC01.PDSUTIL.ASM                           KEPT          *-------27
IEF285I   VOL SER NOS= PUB000.
IEF373I STEP /ASM     / START 23096.0854
IEF374I STEP /ASM     / STOP  23096.0854 CPU    0MIN 00.08SEC SRB    0MIN 00.01SEC VIRT   128K SYS   244K
************************************************************************************************************************************
*     3. Jobstep of job: INSTALL     Stepname: ASM         Program name: IFOX00     Executed on 06.04.23 from 08.54.40 to 08.54.40 *
*         elapsed time  00:00:00,20                      CPU-Identifier:  TK4-           Page-in:      0                           *
*             CPU time  00:00:00,09               Virtual Storage used:    128K         Page-out:      0                           *
*           corr. CPU:  00:00:00,09   CPU time has been corrected by  1 / 1,0  multiplier                                          *
*                                                                                                                                  *
*     I/O Operation                                                                                                                *
*     Number of records read via DD * or DD DATA:      0                                                                           *
*     148.......9 240......24 148.......0 148.......0 240.......0 180......46 140......11 190.......8 DMY.......0 DMY.......0      *
*     170......18 240......27                                                                                                      *
*                                                                                                                                  *
*                                          Charge for step (w/o SYSOUT):          0,15                                             *
************************************************************************************************************************************
IEF236I ALLOC. FOR INSTALL LKED S3
IEF237I 170  ALLOCATED TO SYSLIN
IEF237I DMY  ALLOCATED TO
IEF237I 240  ALLOCATED TO SYSLMOD
IEF237I 240  ALLOCATED TO SYS00016
IEF237I 140  ALLOCATED TO SYSUT1
IEF237I JES2 ALLOCATED TO SYSPRINT
IEF142I INSTALL LKED S3 - STEP WAS EXECUTED - COND CODE 0000
IEF285I   SYS23096.T085439.RA000.INSTALL.OBJSET        DELETED       *-------19
IEF285I   VOL SER NOS= WORK01.
IEF285I   HERC01.PDSUTIL.LOADLIB                       KEPT          *-------11
IEF285I   VOL SER NOS= PUB000.
IEF285I   SYS1.UCAT.TSO                                KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF285I   SYS23096.T085439.RA000.INSTALL.SYSUT1        DELETED       *--------0
IEF285I   VOL SER NOS= WORK00.
IEF285I   JES2.JOB04545.SO0105                         SYSOUT
IEF373I STEP /LKED    / START 23096.0854
IEF374I STEP /LKED    / STOP  23096.0854 CPU    0MIN 00.02SEC SRB    0MIN 00.00SEC VIRT   128K SYS   236K
************************************************************************************************************************************
*     4. Jobstep of job: INSTALL     Stepname: LKED        Program name: IEWL       Executed on 06.04.23 from 08.54.40 to 08.54.40 *
*         elapsed time  00:00:00,08                      CPU-Identifier:  TK4-           Page-in:      0                           *
*             CPU time  00:00:00,02               Virtual Storage used:    128K         Page-out:      0                           *
*           corr. CPU:  00:00:00,02   CPU time has been corrected by  1 / 1,0  multiplier                                          *
*                                                                                                                                  *
*     I/O Operation                                                                                                                *
*     Number of records read via DD * or DD DATA:      0                                                                           *
*     170......19 DMY.......0 240......11 240.......0 140.......0 DMY.......0                                                      *
*                                                                                                                                  *
*                                          Charge for step (w/o SYSOUT):          0,03                                             *
************************************************************************************************************************************
IEF236I ALLOC. FOR INSTALL ASM S4
IEF237I 148  ALLOCATED TO SYSLIB
IEF237I 240  ALLOCATED TO
IEF237I 148  ALLOCATED TO
IEF237I 148  ALLOCATED TO
IEF237I 240  ALLOCATED TO SYS00018
IEF237I 170  ALLOCATED TO SYSUT1
IEF237I 180  ALLOCATED TO SYSUT2
IEF237I 190  ALLOCATED TO SYSUT3
IEF237I JES2 ALLOCATED TO SYSPRINT
IEF237I JES2 ALLOCATED TO SYSPUNCH
IEF237I 140  ALLOCATED TO SYSGO
IEF237I 240  ALLOCATED TO SYSIN
IEF142I INSTALL ASM S4 - STEP WAS EXECUTED - COND CODE 0000
IEF285I   SYS1.MACLIB                                  KEPT          *-------79
IEF285I   VOL SER NOS= MVSRES.
IEF285I   HERC01.PDSUTIL.ASM                           KEPT          *-------48
IEF285I   VOL SER NOS= PUB000.
IEF285I   SYS1.MACLIB                                  KEPT          *--------0
IEF285I   VOL SER NOS= MVSRES.
IEF285I   SYS1.MACLIB                                  KEPT          *--------0
IEF285I   VOL SER NOS= MVSRES.
IEF285I   SYS1.UCAT.TSO                                KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF285I   SYS23096.T085439.RA000.INSTALL.SYSUT1        DELETED       *------463
IEF285I   VOL SER NOS= WORK01.
IEF285I   SYS23096.T085439.RA000.INSTALL.SYSUT2        DELETED       *-------78
IEF285I   VOL SER NOS= WORK02.
IEF285I   SYS23096.T085439.RA000.INSTALL.SYSUT3        DELETED       *-------16
IEF285I   VOL SER NOS= WORK03.
IEF285I   JES2.JOB04545.SO0106                         SYSOUT
IEF285I   JES2.JOB04545.SO0107                         SYSOUT
IEF285I   SYS23096.T085439.RA000.INSTALL.OBJSET        PASSED        *-------39
IEF285I   VOL SER NOS= WORK00.
IEF285I   HERC01.PDSUTIL.ASM                           KEPT          *-------95
IEF285I   VOL SER NOS= PUB000.
IEF373I STEP /ASM     / START 23096.0854
IEF374I STEP /ASM     / STOP  23096.0854 CPU    0MIN 00.40SEC SRB    0MIN 00.04SEC VIRT   128K SYS   244K
************************************************************************************************************************************
*     5. Jobstep of job: INSTALL     Stepname: ASM         Program name: IFOX00     Executed on 06.04.23 from 08.54.40 to 08.54.40 *
*         elapsed time  00:00:00,63                      CPU-Identifier:  TK4-           Page-in:      0                           *
*             CPU time  00:00:00,44               Virtual Storage used:    128K         Page-out:      0                           *
*           corr. CPU:  00:00:00,44   CPU time has been corrected by  1 / 1,0  multiplier                                          *
*                                                                                                                                  *
*     I/O Operation                                                                                                                *
*     Number of records read via DD * or DD DATA:      0                                                                           *
*     148......79 240......48 148.......0 148.......0 240.......0 170.....463 180......78 190......16 DMY.......0 DMY.......0      *
*     140......39 240......95                                                                                                      *
*                                                                                                                                  *
*                                          Charge for step (w/o SYSOUT):          0,73                                             *
************************************************************************************************************************************
IEF236I ALLOC. FOR INSTALL LKED S4
IEF237I 140  ALLOCATED TO SYSLIN
IEF237I DMY  ALLOCATED TO
IEF237I 240  ALLOCATED TO SYSLMOD
IEF237I 240  ALLOCATED TO SYS00020
IEF237I 190  ALLOCATED TO SYSUT1
IEF237I JES2 ALLOCATED TO SYSPRINT
IEF142I INSTALL LKED S4 - STEP WAS EXECUTED - COND CODE 0000
IEF285I   SYS23096.T085439.RA000.INSTALL.OBJSET        DELETED       *-------40
IEF285I   VOL SER NOS= WORK00.
IEF285I   HERC01.PDSUTIL.LOADLIB                       KEPT          *-------14
IEF285I   VOL SER NOS= PUB000.
IEF285I   SYS1.UCAT.TSO                                KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF285I   SYS23096.T085439.RA000.INSTALL.SYSUT1        DELETED       *--------0
IEF285I   VOL SER NOS= WORK03.
IEF285I   JES2.JOB04545.SO0108                         SYSOUT
IEF373I STEP /LKED    / START 23096.0854
IEF374I STEP /LKED    / STOP  23096.0854 CPU    0MIN 00.02SEC SRB    0MIN 00.00SEC VIRT   128K SYS   236K
************************************************************************************************************************************
*     6. Jobstep of job: INSTALL     Stepname: LKED        Program name: IEWL       Executed on 06.04.23 from 08.54.40 to 08.54.41 *
*         elapsed time  00:00:00,09                      CPU-Identifier:  TK4-           Page-in:      0                           *
*             CPU time  00:00:00,02               Virtual Storage used:    128K         Page-out:      0                           *
*           corr. CPU:  00:00:00,02   CPU time has been corrected by  1 / 1,0  multiplier                                          *
*                                                                                                                                  *
*     I/O Operation                                                                                                                *
*     Number of records read via DD * or DD DATA:      0                                                                           *
*     140......40 DMY.......0 240......14 240.......0 190.......0 DMY.......0                                                      *
*                                                                                                                                  *
*                                          Charge for step (w/o SYSOUT):          0,03                                             *
************************************************************************************************************************************
IEF236I ALLOC. FOR INSTALL COB S5
IEF237I JES2 ALLOCATED TO SYSPRINT
IEF237I 190  ALLOCATED TO SYSUT1
IEF237I 180  ALLOCATED TO SYSUT2
IEF237I 170  ALLOCATED TO SYSUT3
IEF237I 140  ALLOCATED TO SYSUT4
IEF237I 140  ALLOCATED TO SYSLIN
IEF237I 240  ALLOCATED TO SYSIN
IEF237I 240  ALLOCATED TO SYS00022
IEF237I 240  ALLOCATED TO SYSLIB
IEF237I DMY  ALLOCATED TO SYSPUNCH
IEF142I INSTALL COB S5 - STEP WAS EXECUTED - COND CODE 0004
IEF285I   JES2.JOB04545.SO0109                         SYSOUT
IEF285I   SYS23096.T085439.RA000.INSTALL.R0000001      DELETED       *--------6
IEF285I   VOL SER NOS= WORK03.
IEF285I   SYS23096.T085439.RA000.INSTALL.R0000002      DELETED       *--------6
IEF285I   VOL SER NOS= WORK02.
IEF285I   SYS23096.T085439.RA000.INSTALL.R0000003      DELETED       *-------12
IEF285I   VOL SER NOS= WORK01.
IEF285I   SYS23096.T085439.RA000.INSTALL.R0000004      DELETED       *-------10
IEF285I   VOL SER NOS= WORK00.
IEF285I   SYS23096.T085439.RA000.INSTALL.LOADSET       PASSED        *------128
IEF285I   VOL SER NOS= WORK00.
IEF285I   HERC01.PDSUTIL.COB                           KEPT          *-------59
IEF285I   VOL SER NOS= PUB000.
IEF285I   SYS1.UCAT.TSO                                KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF285I   HERC01.PDSUTIL.COB                           KEPT          *-------31
IEF285I   VOL SER NOS= PUB000.
IEF373I STEP /COB     / START 23096.0854
IEF374I STEP /COB     / STOP  23096.0854 CPU    0MIN 00.12SEC SRB    0MIN 00.04SEC VIRT  1052K SYS   248K
************************************************************************************************************************************
*     7. Jobstep of job: INSTALL     Stepname: COB         Program name: IKFCBL00   Executed on 06.04.23 from 08.54.41 to 08.54.41 *
*         elapsed time  00:00:00,37                      CPU-Identifier:  TK4-           Page-in:      0                           *
*             CPU time  00:00:00,16               Virtual Storage used:   1052K         Page-out:      0                           *
*           corr. CPU:  00:00:00,16   CPU time has been corrected by  1 / 1,0  multiplier                                          *
*                                                                                                                                  *
*     I/O Operation                                                                                                                *
*     Number of records read via DD * or DD DATA:      0                                                                           *
*     DMY.......0 190.......6 180.......6 170......12 140......10 140.....128 240......59 240.......0 240......31 DMY.......0      *
*                                                                                                                                  *
*                                          Charge for step (w/o SYSOUT):          0,26                                             *
************************************************************************************************************************************
IEF236I ALLOC. FOR INSTALL LKED S5
IEF237I 140  ALLOCATED TO SYSLIN
IEF237I DMY  ALLOCATED TO
IEF237I 148  ALLOCATED TO SYSLIB
IEF237I 240  ALLOCATED TO
IEF237I 240  ALLOCATED TO SYS00024
IEF237I 240  ALLOCATED TO SYSLMOD
IEF237I 170  ALLOCATED TO SYSUT1
IEF237I JES2 ALLOCATED TO SYSPRINT
IEF142I INSTALL LKED S5 - STEP WAS EXECUTED - COND CODE 0000
IEF285I   SYS23096.T085439.RA000.INSTALL.LOADSET       DELETED       *------129
IEF285I   VOL SER NOS= WORK00.
IEF285I   SYS1.COBLIB                                  KEPT          *-------18
IEF285I   VOL SER NOS= MVSRES.
IEF285I   HERC01.PDSUTIL.LOADLIB                       KEPT          *-------14
IEF285I   VOL SER NOS= PUB000.
IEF285I   SYS1.UCAT.TSO                                KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF285I   HERC01.PDSUTIL.LOADLIB                       KEPT          *-------18
IEF285I   VOL SER NOS= PUB000.
IEF285I   SYS23096.T085439.RA000.INSTALL.R0000005      DELETED       *--------0
IEF285I   VOL SER NOS= WORK01.
IEF285I   JES2.JOB04545.SO0110                         SYSOUT
IEF373I STEP /LKED    / START 23096.0854
IEF374I STEP /LKED    / STOP  23096.0854 CPU    0MIN 00.04SEC SRB    0MIN 00.01SEC VIRT   264K SYS   240K
************************************************************************************************************************************
*     8. Jobstep of job: INSTALL     Stepname: LKED        Program name: IEWL       Executed on 06.04.23 from 08.54.41 to 08.54.41 *
*         elapsed time  00:00:00,14                      CPU-Identifier:  TK4-           Page-in:      0                           *
*             CPU time  00:00:00,05               Virtual Storage used:    264K         Page-out:      0                           *
*           corr. CPU:  00:00:00,05   CPU time has been corrected by  1 / 1,0  multiplier                                          *
*                                                                                                                                  *
*     I/O Operation                                                                                                                *
*     Number of records read via DD * or DD DATA:      0                                                                           *
*     140.....129 DMY.......0 148......18 240......14 240.......0 240......18 170.......0 DMY.......0                              *
*                                                                                                                                  *
*                                          Charge for step (w/o SYSOUT):          0,08                                             *
************************************************************************************************************************************
IEF236I ALLOC. FOR INSTALL PL1L S6
IEF237I JES2 ALLOCATED TO SYSPRINT
IEF237I 140  ALLOCATED TO SYSLIN
IEF237I 170  ALLOCATED TO SYSUT3
IEF237I 180  ALLOCATED TO SYSUT1
IEF237I 240  ALLOCATED TO SYSIN
IEF237I 240  ALLOCATED TO SYS00026
IEF237I 240  ALLOCATED TO SYSLIB
IEF142I INSTALL PL1L S6 - STEP WAS EXECUTED - COND CODE 0008
IEF285I   JES2.JOB04545.SO0111                         SYSOUT
IEF285I   SYS23096.T085439.RA000.INSTALL.LOADSET       PASSED        *------178
IEF285I   VOL SER NOS= WORK00.
IEF285I   SYS23096.T085439.RA000.INSTALL.SYSUT3        DELETED       *------383
IEF285I   VOL SER NOS= WORK01.
IEF285I   SYS23096.T085439.RA000.INSTALL.SYSUT1        DELETED       *--------0
IEF285I   VOL SER NOS= WORK02.
IEF285I   HERC01.PDSUTIL.PLI                           KEPT          *-------47
IEF285I   VOL SER NOS= PUB000.
IEF285I   SYS1.UCAT.TSO                                KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF285I   HERC01.PDSUTIL.PLI                           KEPT          *-------35
IEF285I   VOL SER NOS= PUB000.
IEF373I STEP /PL1L    / START 23096.0854
IEF374I STEP /PL1L    / STOP  23096.0854 CPU    0MIN 00.32SEC SRB    0MIN 00.10SEC VIRT  1016K SYS   240K
************************************************************************************************************************************
*     9. Jobstep of job: INSTALL     Stepname: PL1L        Program name: IEMAA      Executed on 06.04.23 from 08.54.41 to 08.54.42 *
*         elapsed time  00:00:00,88                      CPU-Identifier:  TK4-           Page-in:      0                           *
*             CPU time  00:00:00,42               Virtual Storage used:   1016K         Page-out:      0                           *
*           corr. CPU:  00:00:00,42   CPU time has been corrected by  1 / 1,0  multiplier                                          *
*                                                                                                                                  *
*     I/O Operation                                                                                                                *
*     Number of records read via DD * or DD DATA:      0                                                                           *
*     DMY.......0 140.....178 170.....383 180.......0 240......47 240.......0 240......35                                          *
*                                                                                                                                  *
*                                          Charge for step (w/o SYSOUT):          0,70                                             *
************************************************************************************************************************************
IEF236I ALLOC. FOR INSTALL LKED S6
IEF237I 148  ALLOCATED TO SYSLIB
IEF237I 240  ALLOCATED TO
IEF237I 240  ALLOCATED TO SYS00028
IEF237I 240  ALLOCATED TO SYSLMOD
IEF237I 180  ALLOCATED TO SYSUT1
IEF237I JES2 ALLOCATED TO SYSPRINT
IEF237I 140  ALLOCATED TO SYSLIN
IEF237I DMY  ALLOCATED TO
IEF142I INSTALL LKED S6 - STEP WAS EXECUTED - COND CODE 0000
IEF285I   SYS1.PL1LIB                                  KEPT          *------193
IEF285I   VOL SER NOS= MVSRES.
IEF285I   HERC01.PDSUTIL.LOADLIB                       KEPT          *-------15
IEF285I   VOL SER NOS= PUB000.
IEF285I   SYS1.UCAT.TSO                                KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF285I   HERC01.PDSUTIL.LOADLIB                       KEPT          *-------67
IEF285I   VOL SER NOS= PUB000.
IEF285I   SYS23096.T085439.RA000.INSTALL.SYSUT1        DELETED       *--------0
IEF285I   VOL SER NOS= WORK02.
IEF285I   JES2.JOB04545.SO0112                         SYSOUT
IEF285I   SYS23096.T085439.RA000.INSTALL.LOADSET       DELETED       *------179
IEF285I   VOL SER NOS= WORK00.
IEF373I STEP /LKED    / START 23096.0854
IEF374I STEP /LKED    / STOP  23096.0854 CPU    0MIN 00.09SEC SRB    0MIN 00.02SEC VIRT   264K SYS   248K
************************************************************************************************************************************
*    10. Jobstep of job: INSTALL     Stepname: LKED        Program name: IEWL       Executed on 06.04.23 from 08.54.42 to 08.54.42 *
*         elapsed time  00:00:00,26                      CPU-Identifier:  TK4-           Page-in:      0                           *
*             CPU time  00:00:00,11               Virtual Storage used:    264K         Page-out:      0                           *
*           corr. CPU:  00:00:00,11   CPU time has been corrected by  1 / 1,0  multiplier                                          *
*                                                                                                                                  *
*     I/O Operation                                                                                                                *
*     Number of records read via DD * or DD DATA:      0                                                                           *
*     148.....193 240......15 240.......0 240......67 180.......0 DMY.......0 140.....179 DMY.......0                              *
*                                                                                                                                  *
*                                          Charge for step (w/o SYSOUT):          0,18                                             *
************************************************************************************************************************************
IEF236I ALLOC. FOR INSTALL PL1L S7
IEF237I JES2 ALLOCATED TO SYSPRINT
IEF237I 170  ALLOCATED TO SYSLIN
IEF237I 140  ALLOCATED TO SYSUT3
IEF237I 190  ALLOCATED TO SYSUT1
IEF237I 240  ALLOCATED TO SYSIN
IEF237I 240  ALLOCATED TO SYS00030
IEF237I 240  ALLOCATED TO SYSLIB
IEF142I INSTALL PL1L S7 - STEP WAS EXECUTED - COND CODE 0004
IEF285I   JES2.JOB04545.SO0113                         SYSOUT
IEF285I   SYS23096.T085439.RA000.INSTALL.LOADSET       PASSED        *------193
IEF285I   VOL SER NOS= WORK01.
IEF285I   SYS23096.T085439.RA000.INSTALL.SYSUT3        DELETED       *------395
IEF285I   VOL SER NOS= WORK00.
IEF285I   SYS23096.T085439.RA000.INSTALL.SYSUT1        DELETED       *--------0
IEF285I   VOL SER NOS= WORK03.
IEF285I   HERC01.PDSUTIL.PLI                           KEPT          *-------57
IEF285I   VOL SER NOS= PUB000.
IEF285I   SYS1.UCAT.TSO                                KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF285I   HERC01.PDSUTIL.PLI                           KEPT          *-------25
IEF285I   VOL SER NOS= PUB000.
IEF373I STEP /PL1L    / START 23096.0854
IEF374I STEP /PL1L    / STOP  23096.0854 CPU    0MIN 00.39SEC SRB    0MIN 00.13SEC VIRT  1016K SYS   244K
************************************************************************************************************************************
*    11. Jobstep of job: INSTALL     Stepname: PL1L        Program name: IEMAA      Executed on 06.04.23 from 08.54.42 to 08.54.43 *
*         elapsed time  00:00:00,93                      CPU-Identifier:  TK4-           Page-in:      0                           *
*             CPU time  00:00:00,52               Virtual Storage used:   1016K         Page-out:      0                           *
*           corr. CPU:  00:00:00,52   CPU time has been corrected by  1 / 1,0  multiplier                                          *
*                                                                                                                                  *
*     I/O Operation                                                                                                                *
*     Number of records read via DD * or DD DATA:      0                                                                           *
*     DMY.......0 170.....193 140.....395 190.......0 240......57 240.......0 240......25                                          *
*                                                                                                                                  *
*                                          Charge for step (w/o SYSOUT):          0,86                                             *
************************************************************************************************************************************
IEF236I ALLOC. FOR INSTALL LKED S7
IEF237I 148  ALLOCATED TO SYSLIB
IEF237I 240  ALLOCATED TO
IEF237I 240  ALLOCATED TO SYS00032
IEF237I 240  ALLOCATED TO SYSLMOD
IEF237I 140  ALLOCATED TO SYSUT1
IEF237I JES2 ALLOCATED TO SYSPRINT
IEF237I 170  ALLOCATED TO SYSLIN
IEF237I DMY  ALLOCATED TO
IEF142I INSTALL LKED S7 - STEP WAS EXECUTED - COND CODE 0000
IEF285I   SYS1.PL1LIB                                  KEPT          *------220
IEF285I   VOL SER NOS= MVSRES.
IEF285I   HERC01.PDSUTIL.LOADLIB                       KEPT          *--------9
IEF285I   VOL SER NOS= PUB000.
IEF285I   SYS1.UCAT.TSO                                KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF285I   HERC01.PDSUTIL.LOADLIB                       KEPT          *------150
IEF285I   VOL SER NOS= PUB000.
IEF285I   SYS23096.T085439.RA000.INSTALL.SYSUT1        DELETED       *--------6
IEF285I   VOL SER NOS= WORK00.
IEF285I   JES2.JOB04545.SO0114                         SYSOUT
IEF285I   SYS23096.T085439.RA000.INSTALL.LOADSET       DELETED       *------194
IEF285I   VOL SER NOS= WORK01.
IEF373I STEP /LKED    / START 23096.0854
IEF374I STEP /LKED    / STOP  23096.0854 CPU    0MIN 00.12SEC SRB    0MIN 00.03SEC VIRT   264K SYS   248K
************************************************************************************************************************************
*    12. Jobstep of job: INSTALL     Stepname: LKED        Program name: IEWL       Executed on 06.04.23 from 08.54.43 to 08.54.43 *
*         elapsed time  00:00:00,30                      CPU-Identifier:  TK4-           Page-in:      0                           *
*             CPU time  00:00:00,15               Virtual Storage used:    264K         Page-out:      0                           *
*           corr. CPU:  00:00:00,15   CPU time has been corrected by  1 / 1,0  multiplier                                          *
*                                                                                                                                  *
*     I/O Operation                                                                                                                *
*     Number of records read via DD * or DD DATA:      0                                                                           *
*     148.....220 240.......9 240.......0 240.....150 140.......6 DMY.......0 170.....194 DMY.......0                              *
*                                                                                                                                  *
*                                          Charge for step (w/o SYSOUT):          0,25                                             *
************************************************************************************************************************************
IEF375I  JOB /INSTALL / START 23096.0854
IEF376I  JOB /INSTALL / STOP  23096.0854 CPU    0MIN 01.64SEC SRB    0MIN 00.39SEC
IDCAMS  SYSTEM SERVICES                                           TIME: 08:54:39        04/06/23     PAGE   1


 DELETE HERC01.PDSUTIL.LOADLIB NONVSAM PURGE

IDC0550I ENTRY (A) HERC01.PDSUTIL.LOADLIB DELETED

IDC0001I FUNCTION COMPLETED, HIGHEST CONDITION CODE WAS 0


 SET MAXCC = 0


IDC0002I IDCAMS PROCESSING COMPLETE. MAXIMUM CONDITION CODE WAS 0
DATECNV                                        EXTERNAL SYMBOL DICTIONARY                                      PAGE    1


SYMBOL   TYPE  ID   ADDR  LENGTH LDID                                                            ASM 0201 08.54 04/06/23

DATECNV   SD  0001 000000 00030A
DATCNVP   LD       000008        0001
DATECNV  SUBROUTINE FOR DATE CONVERSIONS                                                                       PAGE    2


  LOC  OBJECT CODE    ADDR1 ADDR2  STMT   SOURCE STATEMENT                                       ASM 0201 08.54 04/06/23

                                      2          PUNCH ' ALIAS DATCNVP'
                                      3 ***********************************************************************
                                      4 *                                                                     *
                                      5 * DATECNV - SUBROUTINE FOR DATE CONVERSIONS                           *
                                      6 *                                                                     *
                                      7 *    THIS ROUTINE HANDLES DATE CONVERSIONS FROM ONE FORMAT TO         *
                                      8 *    ANOTHER.                                                         *
                                      9 *                                                                     *
                                     10 *    DATA IS PASSED IN A BLOCK OF 4 FIELDS                            *
                                     11 *      RETURN CODE           1 WORD                                   *
                                     12 *                                =0 CONVERSION OK                     *
                                     13 *                                =1 INVALID INPUT FORMAT              *
                                     14 *                                =2 INVALID DATE                      *
                                     15 *                                =3 INVALID OUTPUT FORMAT             *
                                     16 *                                                                     *
                                     17 *      INPUT FORMAT          8 CHARACTERS                             *
                                     18 *      INPUT DATE            10 DIGITS                                *
                                     19 *      OUTPUT FORMAT         8 CHARACTERS                             *
                                     20 *      OUTPUT DATE           10 DIGITS                                *
                                     21 *                                                                     *
                                     22 ***********************************************************************
                                     23 DATECNV  ESTART TYPE=START,DESC='DATECNV - DATE CONVERSIONS',          X
                                                       VER='1.0.0',BASE=R12,REGS=YES,PLIF=DATCNVP
000000                               24+DATECNV  START                                                          00000019
                                     25+*                                                                       00000027
000000 92D5 F012      00012          26+         MVI   18(15),C'N'            SET NO PLI ENTRY POINT            00000029
000004 47FF 000C      0000C          27+         B     12(15)                 SKIP HEADER STUFF                 00000030
                                     28+         ENTRY DATCNVP                                                  00000031
000008 92E8 F00A      0000A          29+DATCNVP  MVI   10(15),C'Y'            SET PL1 ENTRY POINT               00000032
00000C 05F0                          30+         BALR  15,0                                                     00000033
00000E 47FF 008A      0008A          31+ID10001    B     ID40001(15)            SKIP HEADER STUFF               00000034
000012                               32+ID50001    DS   C                                                       00000035
                            00004    33+IDP0001    EQU  ID50001-ID10001                                         00000036
000013 84                            34+         DC    AL1(ID30001-ID20001)                                     00000041
000014 C4C1E3C5C3D5E540              35+ID20001    DC    CL8'DATECNV'                                           00000042
00001C F14BF04BF0                    36+         DC    C'1.0.0'                                                 00000043
000021 40F0F461F0F661F2              37+         DC    C' 04/06/23 08.54 - '                                    00000044
000033 C4C1E3C5C3D5E540              38+         DC    C'DATECNV - DATE CONVERSIONS'                            00000045
000050                               39+         DS    0F                                                       00000046
                            00042    40+IDS0001    EQU   *-ID10001                                              00000047
000050                               41+         DS    18F                                                      00000048
000098                               42+ID30001    DS    0H                                                     00000049
                            00000    43+R0       EQU   0                                                        00000007
                            00001    44+R1       EQU   1                                                        00000008
                            00002    45+R2       EQU   2                                                        00000009
                            00003    46+R3       EQU   3                                                        00000010
                            00004    47+R4       EQU   4                                                        00000011
                            00005    48+R5       EQU   5                                                        00000012
                            00006    49+R6       EQU   6                                                        00000013
                            00007    50+R7       EQU   7                                                        00000014
                            00008    51+R8       EQU   8                                                        00000015
                            00009    52+R9       EQU   9                                                        00000016
                            0000A    53+R10      EQU   10                                                       00000017
                            0000B    54+R11      EQU   11                                                       00000018
                            0000C    55+R12      EQU   12                                                       00000019
DATECNV  SUBROUTINE FOR DATE CONVERSIONS                                                                       PAGE    3


  LOC  OBJECT CODE    ADDR1 ADDR2  STMT   SOURCE STATEMENT                                       ASM 0201 08.54 04/06/23

                            0000D    56+R13      EQU   13                                                       00000020
                            0000E    57+R14      EQU   14                                                       00000021
                            0000F    58+R15      EQU   15                                                       00000022
                            0008A    59+ID40001    EQU   *-ID10001                                              00000054
                                     60+*                                                                       00000055
000098 90EC D00C      0000C          61+         STM   14,12,12(13)                                             00000056
                                     62+*                                                                       00000057
00009C 185D                          63+         LR    5,13                COPY CALLER'S SAVEAREA ADDR          00000058
00009E 41DF 0042      00042          64+         LA    13,IDS0001(15)      ESTABLISH MY SAVEAREA                00000059
0000A2 5050 D004      00004          65+         ST    5,4(,13)            BACK CHAIN SAVE AREAS                00000060
0000A6 50D0 5008      00008          66+         ST    13,8(,5)            FORWARD CHAIN SAVE AREAS             00000061
0000AA 05C0                          67+         BALR  R12,0               ESTABLISH BASE REG VALUE             00000063
                            000AC    68+         USING *,R12                                                    00000064
0000AC 95E8 F004      00004          69+         CLI   IDP0001(15),C'Y'         SET CC BASED ON PLI INDICATOR   00000067
0000B0 4770 C014      000C0          70          BNE   NOTPL1
0000B4 58A0 1000      00000          71          L     R10,0(,R1)
0000B8 58A0 A000      00000          72          L     R10,0(,R10)
0000BC 47F0 C018      000C4          73          B     PL1DONE
                            000C0    74 NOTPL1   EQU   *
                            00000    75          USING PARMS,R10
0000C0 58A0 1000      00000          76          L     R10,0(,R1)
                            000C4    77 PL1DONE  EQU   *
0000C4 D203 A000 C244 00000 002F0    78          MVC   RC,=F'0'
                                     79 **
                                     80 **   DETERMINE FORMAT OF THE IN DATE AND VALIDATE IT.
                                     81 **
0000CA D507 A004 C234 00004 002E0    82          CLC   INPFMT,=C'YYYYDDD '
0000D0 4780 C032      000DE          83          BE    INPJ7                INPUT IS JULIAN 7 DIGITS
0000D4 D203 A000 C248 00000 002F4    84          MVC   RC,=F'1'             INVALID INPUT FORMAT
0000DA 47F0 C0E4      00190          85          B     EXIT                 RETURN TO CALLER
                            000DE    86 INPJ7    EQU   *                    INPUT IS JULIAN 7 DIGITS
0000DE DD06 A00C C0F2 0000C 0019E    87          TRT   INPDATE(7),NUMTBL    TEST FOR 7 DIGITS
0000E4 4770 C0DE      0018A          88          BNZ   INVDATE              INVALID DATE
                                     89 **
                                     90 **   DETERMINE FORMAT OF THE OUT DATE.
                                     91 **
0000E8 D507 A016 C23C 00016 002E8    92          CLC   OUTFMT,=C'YYYYMMDD'
0000EE 4780 C050      000FC          93          BE    OUTG8                OUTPUT IS GREG 8 DIGITS
0000F2 D203 A000 C24C 00000 002F8    94          MVC   RC,=F'3'             INVALID OUTPUT FORMAT
0000F8 47F0 C0E4      00190          95          B     EXIT
                            000FC    96 OUTG8    EQU   *                    OUTPUT IS GREG 8
                                     97 *
                                     98 *   CONVERSION ROUTINES
                                     99 *
                            000FC   100 J7G8     EQU   *           YYYYDDD -> YYYYMMDD
0000FC F223 C1FC A00C 002A8 0000C   101          PACK  JYEAR,INPDATE(4)       PACK THE YEAR
000102 F872 C1F4 C1FC 002A0 002A8   102          ZAP   DWORD,JYEAR
000108 4F20 C1F4      002A0         103          CVB   R2,DWORD                AND CONVERT TO BINARY
                                    104 *
                                    105 *  SPECIAL LEAP YEAR FOR CENTURY YEARS
                                    106 *
00010C D501 A00E C258 0000E 00304   107          CLC   INPDATE+2(2),=C'00'    CENTURY YEAR?
000112 4770 C07A      00126         108          BNE   J7NOTCEN                NO, BRANCH
000116 1B44                         109          SR    R4,R4                  DIVIDE BY 400
000118 1852                         110          LR    R5,R2                   IF THERE IS A REMAINDED
DATECNV  SUBROUTINE FOR DATE CONVERSIONS                                                                       PAGE    4


  LOC  OBJECT CODE    ADDR1 ADDR2  STMT   SOURCE STATEMENT                                       ASM 0201 08.54 04/06/23

00011A 5D40 C250      002FC         111          D     R4,=F'400'                IT IS NOT A CENTURY YEAR
00011E 5950 C244      002F0         112          C     R5,=F'0'
000122 4780 C094      00140         113          BE    J7LEAP                 CENTURY YEAR (IE 2000)
                            00126   114 J7NOTCEN EQU   *
000126 1832                         115          LR    R3,R2                  DETERMINE LEAP YEAR
000128 8A30 0002      00002         116          SRA   R3,2                   DIVIDE BY 4
00012C 8B30 0002      00002         117          SLA   R3,2                   MULTIPLY BY 4
000130 1932                         118          CR    R3,R2                  EQUAL?
000132 4780 C094      00140         119          BE    J7LEAP                  YES LEAP YEAR
000136 D201 C207 C25A 002B3 00306   120          MVC   JFEB+2(2),=PL2'28'
00013C 47F0 C09A      00146         121          B     J7NEXT
                            00140   122 J7LEAP   EQU   *
000140 D201 C207 C25C 002B3 00308   123          MVC   JFEB+2(2),=PL2'29'
                            00146   124 J7NEXT   EQU   *
000146 F212 C1FF A010 002AB 00010   125          PACK  JDAY,INPDATE+4(3)
                                    126 *
                                    127 *    SEARCH JDAYS TO DETERMINE THE MONTH
                                    128 *
00014C 4120 C201      002AD         129          LA    R2,JDAYS
000150 4130 000C      0000C         130          LA    R3,12
000154 F911 C1FF 2002 002AB 00002   131 JSEARCH  CP    JDAY,2(2,R2)
00015A 47D0 C0C4      00170         132          BNH   JFND
00015E FB11 C1FF 2002 002AB 00002   133          SP    JDAY,2(2,R2)
000164 4120 2004      00004         134          LA    R2,4(,R2)
000168 4630 C0A8      00154         135          BCT   R3,JSEARCH
00016C 47F0 C0DE      0018A         136          B     INVDATE
                            00170   137 JFND     EQU   *
000170 F321 A023 C1FF 00023 002AB   138          UNPK  OUTDATE+5(3),JDAY
000176 96F0 A025      00025         139          OI    OUTDATE+7,X'F0'
00017A D203 A01E A00C 0001E 0000C   140          MVC   OUTDATE(4),INPDATE
000180 D201 A022 2000 00022 00000   141          MVC   OUTDATE+4(2),0(R2)
000186 47F0 C0E4      00190         142          B     EXIT
                            0018A   143 INVDATE  EQU   *
00018A D203 A000 C254 00000 00300   144          MVC   RC,=F'2'             INVALID DATE
                                    145 EXIT     ERETURN RC=0
000190 58D0 D004      00004         146+EXIT     L     13,4(0,13)          RESET TO CALLERS SAVE AREA           00000004
000194 98EC D00C      0000C         147+         LM    14,12,12(13)                      RESTORE THE REGISTERS  00650000
000198 41F0 0000      00000         148+         LA    15,0(0,0)                         LOAD RETURN CODE       01750000
00019C 07FE                         149+         BR    14                                RETURN                 02000000
                                    150 *                      0 1 2 3 4 5 6 7 8 9 A B C D E F
00019E FFFFFFFFFFFFFFFF             151 NUMTBL   DC    15XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
00028E 0000000000000000             152          DC      XL16'00000000000000000000FFFFFFFFFFFF' X'F0'-X'F9'
0002A0                              153 DWORD    DS    D
0002A8                              154 JYEAR    DS    PL3
0002AB                              155 JDAY     DS    PL2
0002AD                              156 JDAYS    DS    0CL48
0002AD F0F1031C                     157          DC    CL2'01',PL2'31'
0002B1 F0F2028C                     158 JFEB     DC    CL2'02',PL2'28'
0002B5 F0F3031C                     159          DC    CL2'03',PL2'31'
0002B9 F0F4030C                     160          DC    CL2'04',PL2'30'
0002BD F0F5031C                     161          DC    CL2'05',PL2'31'
0002C1 F0F6030C                     162          DC    CL2'06',PL2'30'
0002C5 F0F7031C                     163          DC    CL2'07',PL2'31'
0002C9 F0F8031C                     164          DC    CL2'08',PL2'31'
0002CD F0F9030C                     165          DC    CL2'09',PL2'30'
DATECNV  SUBROUTINE FOR DATE CONVERSIONS                                                                       PAGE    5


  LOC  OBJECT CODE    ADDR1 ADDR2  STMT   SOURCE STATEMENT                                       ASM 0201 08.54 04/06/23

0002D1 F1F0031C                     166          DC    CL2'10',PL2'31'
0002D5 F1F1030C                     167          DC    CL2'11',PL2'30'
0002D9 F1F2031C                     168          DC    CL2'12',PL2'31'
0002E0                              169          LTORG
0002E0 E8E8E8E8C4C4C440             170                =C'YYYYDDD '
0002E8 E8E8E8E8D4D4C4C4             171                =C'YYYYMMDD'
0002F0 00000000                     172                =F'0'
0002F4 00000001                     173                =F'1'
0002F8 00000003                     174                =F'3'
0002FC 00000190                     175                =F'400'
000300 00000002                     176                =F'2'
000304 F0F0                         177                =C'00'
000306 028C                         178                =PL2'28'
000308 029C                         179                =PL2'29'
000000                              180 PARMS    DSECT
000000                              181 RC       DS    F
000004                              182 INPFMT   DS    CL8
00000C                              183 INPDATE  DS    CL10
000016                              184 OUTFMT   DS    CL8
00001E                              185 OUTDATE  DS    CL10
                                    186          END
DATECNV                                           CROSS-REFERENCE                                              PAGE    6


SYMBOL    LEN   VALUE   DEFN    REFERENCES                                                       ASM 0201 08.54 04/06/23

DATCNVP  00004 00000008 00029  00028
DWORD    00008 000002A0 00153  00102 00103
EXIT     00004 00000190 00146  00085 00095 00142
IDP0001  00001 00000004 00033  00069
IDS0001  00001 00000042 00040  00064
ID10001  00004 0000000E 00031  00033 00040 00059
ID20001  00008 00000014 00035  00034
ID30001  00002 00000098 00042  00034
ID40001  00001 0000008A 00059  00031
ID50001  00001 00000012 00032  00033
INPDATE  00010 0000000C 00183  00087 00101 00107 00125 00140
INPFMT   00008 00000004 00182  00082
INPJ7    00001 000000DE 00086  00083
INVDATE  00001 0000018A 00143  00088 00136
JDAY     00002 000002AB 00155  00125 00131 00133 00138
JDAYS    00048 000002AD 00156  00129
JFEB     00002 000002B1 00158  00120 00123
JFND     00001 00000170 00137  00132
JSEARCH  00006 00000154 00131  00135
JYEAR    00003 000002A8 00154  00101 00102
J7LEAP   00001 00000140 00122  00113 00119
J7NEXT   00001 00000146 00124  00121
J7NOTCEN 00001 00000126 00114  00108
NOTPL1   00001 000000C0 00074  00070
NUMTBL   00016 0000019E 00151  00087
OUTDATE  00010 0000001E 00185  00138 00139 00140 00141
OUTFMT   00008 00000016 00184  00092
OUTG8    00001 000000FC 00096  00093
PARMS    00001 00000000 00180  00075
PL1DONE  00001 000000C4 00077  00073
RC       00004 00000000 00181  00078 00084 00094 00144
R1       00001 00000001 00044  00071 00076
R10      00001 0000000A 00053  00071 00072 00072 00075 00076
R12      00001 0000000C 00055  00067 00068
R2       00001 00000002 00045  00103 00110 00115 00118 00129 00131 00133 00134 00134 00141
R3       00001 00000003 00046  00115 00116 00117 00118 00130 00135
R4       00001 00000004 00047  00109 00109 00111
R5       00001 00000005 00048  00110 00112
DATECNV                                           LITERAL CROSS-REFERENCE                                      PAGE    7


SYMBOL    LEN   VALUE   DEFN    REFERENCES                                                       ASM 0201 08.54 04/06/23

=C'YYYYDDD '
         00008 000002E0 00170  00082
=C'YYYYMMDD'
         00008 000002E8 00171  00092
=F'0'    00004 000002F0 00172  00078 00112
=F'1'    00004 000002F4 00173  00084
=F'3'    00004 000002F8 00174  00094
=F'400'  00004 000002FC 00175  00111
=F'2'    00004 00000300 00176  00144
=C'00'   00002 00000304 00177  00107
=PL2'28' 00002 00000306 00178  00120
=PL2'29' 00002 00000308 00179  00123
DATECNV                                           ASSEMBLER DIAGNOSTICS AND STATISTICS                         PAGE    8


                                                                                                 ASM 0201 08.54 04/06/23

NO STATEMENTS FLAGGED IN THIS ASSEMBLY
HIGHEST SEVERITY WAS    0
OPTIONS FOR THIS ASSEMBLY
  ALIGN, ALOGIC, BUFSIZE(STD), DECK, ESD, FLAG(0), LINECOUNT(55), LIST, NOMCALL, YFLAG, WORKSIZE(2097152)
  NOMLOGIC, NONUMBER, OBJECT, NORENT, RLD, NOSTMT, NOLIBMAC, NOTERMINAL, NOTEST, XREF(SHORT)
  SYSPARM()
WORK FILE BUFFER SIZE/NUMBER = 8702/ 1
TOTAL RECORDS READ FROM SYSTEM INPUT        127
TOTAL RECORDS READ FROM SYSTEM LIBRARY      756
TOTAL RECORDS PUNCHED                        18
TOTAL RECORDS PRINTED                       265

 F64-LEVEL LINKAGE EDITOR OPTIONS SPECIFIED XREF,LET,LIST,NCAL
          DEFAULT OPTION(S) USED -  SIZE=(98304,55296)
IEW0000     ALIAS DATCNVP



                                                CROSS REFERENCE TABLE


  CONTROL SECTION                       ENTRY

    NAME    ORIGIN  LENGTH                NAME   LOCATION     NAME   LOCATION     NAME   LOCATION     NAME   LOCATION
  DATECNV       00     30A
                                        DATCNVP        8

 ENTRY ADDRESS       00

 TOTAL LENGTH       310
****DATECNV   DOES NOT EXIST BUT HAS BEEN ADDED TO DATA SET
****DATCNVP   IS AN ALIAS FOR THIS MEMBER
AUTHORIZATION CODE IS         0.
GETPDS                                         EXTERNAL SYMBOL DICTIONARY                                      PAGE    1


SYMBOL   TYPE  ID   ADDR  LENGTH LDID                                                            ASM 0201 08.54 04/06/23

GETPDS    SD  0001 000000 000604
GETPDSP   LD       000008        0001
NCZ93205  LD       000000        0001
@GETDIR   SD  0002 000608 000214
GETPDS   SUBROUTINE TO READ PARTITIONED DATASET MEMBERS         - PROGRAM DOCUMENTATION                        PAGE    2


  LOC  OBJECT CODE    ADDR1 ADDR2  STMT   SOURCE STATEMENT                                       ASM 0201 08.54 04/06/23

                                      2          PUNCH ' ALIAS NCZ93205'
                                      3          PUNCH ' ALIAS GETPDSP'
                                      4 ***********************************************************************
                                      5 *                                                                     *
                                      6 * GETPDS - SUBROUTINE TO READ PDS DIRECTORIES AND MEMBERS             *
                                      7 *          FORMERLY KNOWN AS NCZ93205                                 *
                                      8 *                                                                     *
                                      9 * V1.0.0 - MODULE RENAMED FROM NCZ93205.  A ALIAS WAS ADDED FOR       *
                                     10 *          BACKWARD COMPATABILITY WITH OLDER VERSIONS.                *
                                     11 *        = TWO NEW FUNCTIONS WERE ADDED - START SEQUENTIAL DIRECTORY  *
                                     12 *          RETRIEVE AND GET NEXT MEMBER NAME.                         *
                                     13 *        - SUPPORT FOR PL/1(F) ADDED.  SINCE PL/1 DOES NOT SUPPORT    *
                                     14 *          RETURN CODE, A 4TH PARM FOR RETURN_CODE MUST BE INCLUDED.  *
                                     15 *                                                                     *
                                     16 * V1.1.0 - BUG FIX.  IF THE PDS HAD A LARGE BLKSIZE (>3200), THIS     *
                                     17 *          ROUTINE WOULD ABORT WITH A S0C4. FOUND THE EX INSTRUCTION  *
                                     18 *          WAS CONSISTANTLY MOVE 1 EXTRA BYTE OF DATA.                *
                                     19 *                                                                     *
                                     20 * V1.2.0 - BAND AID PATCH FOR BUG IN PDSDIR MACRO.  CONTROL INFO      *
                                     21 *          IS NOT INITIALIZED ON AN OPEN.  THIS RESULTS IN AN SOC4.   *
                                     22 *          APPLIED PATCH TO ZERO OUT CONTROL FIELDS.                  *
                                     23 *        - REVISED DOCUMENTATION FOR COBOL CALLERS AND ADDED          *
                                     24 *          DOCUMENTATION FOR PL/I CALLERS.                            *
                                     25 *                                                                     *
                                     26 * V1.3.0 - ADDED CODE TO RETURN THE STATS, IF PRESENT, IN THE         *
                                     27 *          FIRST 30 BYTES OF THE INPUT AREA.                      .   *
                                     28 *                                                                     *
                                     29 ***********************************************************************
                                     30 ***********************************************************************
                                     31 *                                                                     *
                                     32 * ID:          GETPDS  -  SUBROUTINE TO READ PDS MEMBERS              *
                                     33 *                                                                     *
                                     34 * NCZ93205.1 PROGRAM DESCRIPTION                                      *
                                     35 *                                                                     *
                                     36 * THIS PROGRAM CAN BE CALLED AS A SUBROUTINE FROM ASSEMBLER, COBOL OR *
                                     37 * COBOL OR PL/I TO PROVIDE READ ACCESS TO MEMBER(S) OF A PDS. THE     *
                                     38 * MEMBER NAME(S) MAY BE SPECIFIED DYNAMICALLY VIA THE PARAMETERS.     *
                                     39 * THUS THIS PROGRAM ENABLES A CALLING PROGRAM TO ACCESS MANY MEMBERS  *
                                     40 * OF A PDS WHEN THE NAMES OF THE MEMBERS ARE NOT KNOWN UNTIL EXECUTION*
                                     41 * TIME.                                                               *
                                     42 *                                                                     *
                                     43 * ONLY COMBINATIONS OF RECFM = F/B/A ARE SUPPORTED.                   *
                                     44 *                                                                     *
                                     45 *****                                                             *****
GETPDS   SUBROUTINE TO READ PARTITIONED DATASET MEMBERS         - PROGRAM DOCUMENTATION                        PAGE    3


  LOC  OBJECT CODE    ADDR1 ADDR2  STMT   SOURCE STATEMENT                                       ASM 0201 08.54 04/06/23

                                     47 *****                                                             *****
                                     48 *                                                                     *
                                     49 * NCZ93205.2 USER INSTRUCTIONS FOR COBOL                              *
                                     50 *                                                                     *
                                     51 * PARAMETERS:                                                         *
                                     52 * ----------                                                          *
                                     53 * THE PROGRAM OBSERVES A STANDARD OS LINKAGE. IT SHOULD ALWAYS BE     *
                                     54 * CALLED WITH 3 PARAMETERS WHICH ARE:                                 *
                                     55 *                                                                     *
                                     56 * P1 - REQUEST CODE      FULLWORD BINARY  COBOL PIC S9(8) COMP.       *
                                     57 *      VALUES:                                                        *
                                     58 *      0   -  OPEN DDNAME 'PDS'                                       *
                                     59 *      1   -  START SEQUENTIAL PROCESSING OF DIRECTORY                *
                                     60 *      4   -  LOCATE MEMBER (DOES NOT READ MEMBER)                    *
                                     61 *      5   -  GET NEXT MEMBER NAME (DOES NOT READ MEMBER)             *
                                     62 *      8   -  READ NEXT RECORD IN CURRENT MEMBER                      *
                                     63 *      12  -  CLOSE DDNAME 'PDS'                                      *
                                     64 *                                                                     *
                                     65 * P2 - MEMBER NAME      CHARACTER STRING COBOL PIC X(8).              *
                                     66 *      CONTAINS NAME OF MEMBER WHEN P1 = 4                            *
                                     67 *                                                                     *
                                     68 * P3 - INPUT AREA       CHARACTER STRING. IT IS THE RESPONSIBLITY OF  *
                                     69 *      WHEN P1 = 8                        THE CALLING PROGRAM TO      *
                                     70 *                                         ENSURE THAT THIS AREA WILL  *
                                     71 *                                         ACCOMMODATE THE LONGEST     *
                                     72 *                                         RECORD TO BE READ.          *
                                     73 *                                                                     *
                                     74 * RETURN CODE -                                                       *
                                     75 *      VALUES:                                                        *
                                     76 *      0   - REQUESTED FUNCTION COMPLETED WITHOUT ERROR               *
                                     77 *      4   - REQUESTED FUNCTION DID NOT COMPLETE FOR REASON:          *
                                     78 *            WHEN P1 = 0  FILE COULD NOT BE OPENED                    *
                                     79 *                      1  FILE COULD NOT BE OPENED                    *
                                     80 *                      4  MEMBER WAS NOT FOUND                        *
                                     81 *                      5  END OF DIRECTORY                            *
                                     82 *                      8  END OF FILE ON CURRENT MEMBER               *
                                     83 *      8   - SERIOUS ERROR. PROCESSING SHOULD BE TERMINATED.          *
                                     84 *                                                                     *
                                     85 * EXAMPLE CALL FROM COBOL:                                            *
                                     86 *                                                                     *
                                     87 *      CALL 'GETPDS' USING FUNC, MEMBER, INPUT-AREA.                  *
                                     88 *      IF RETURN-CODE = ZERO GO TO .....                              *
                                     89 *                                                                     *
                                     90 * THE SPECIAL REGISTER 'RETURN-CODE' SHOULD BE CLEARED TO ZERO BY     *
                                     91 * THE APPLICATION PROGRAM BEFORE PROGRAM TERMINATION OTHERWISE        *
                                     92 * IT MAY BE PROPAGATED UPWARDS TO OS WITH A NON ZERO VALUE.           *
                                     93 *                                                                     *
                                     94 *****                                                             *****
GETPDS   SUBROUTINE TO READ PARTITIONED DATASET MEMBERS         - PROGRAM DOCUMENTATION                        PAGE    4


  LOC  OBJECT CODE    ADDR1 ADDR2  STMT   SOURCE STATEMENT                                       ASM 0201 08.54 04/06/23

                                     96 *****                                                             *****
                                     97 *                                                                     *
                                     98 * NCZ93205.2 USER INSTRUCTIONS FOR PL/I                               *
                                     99 *                                                                     *
                                    100 * PARAMETERS:                                                         *
                                    101 * ----------                                                          *
                                    102 * THE PROGRAM OBSERVES A STANDARD OS LINKAGE. IT SHOULD ALWAYS BE     *
                                    103 * CALLED WITH 4 PARAMETERS WHICH ARE DECLARED STATIC.                 *
                                    104 *                                                                     *
                                    105 * P1 - REQUEST CODE      FULLWORD BINARY  FIXED BINARY(31).           *
                                    106 *      VALUES:                                                        *
                                    107 *      0   -  OPEN DDNAME 'PDS'                                       *
                                    108 *      1   -  START SEQUENTIAL PROCESSING OF DIRECTORY                *
                                    109 *      4   -  LOCATE MEMBER (DOES NOT READ MEMBER)                    *
                                    110 *      5   -  GET NEXT MEMBER NAME (DOES NOT READ MEMBER)             *
                                    111 *      8   -  READ NEXT RECORD IN CURRENT MEMBER                      *
                                    112 *      12  -  CLOSE DDNAME 'PDS'                                      *
                                    113 *                                                                     *
                                    114 * P2 - MEMBER NAME      CHARACTER STRING CHAR(8).                     *
                                    115 *      CONTAINS NAME OF MEMBER WHEN P1 = 4                            *
                                    116 *                                                                     *
                                    117 * P3 - INPUT AREA       CHARACTER STRING. IT IS THE RESPONSIBLITY OF  *
                                    118 *      WHEN P1 = 8                        THE CALLING PROGRAM TO      *
                                    119 *                                         ENSURE THAT THIS AREA WILL  *
                                    120 *                                         ACCOMMODATE THE LONGEST     *
                                    121 *                                         RECORD TO BE READ.          *
                                    122 *                                                                     *
                                    123 * P4 - RETURN CODE      FULLWORD FIXED BINARY(31).                    *
                                    124 *      WHEN P1 = 8                        PL/I (F) DOES NOT HAVE      *
                                    125 *                                         A RETURN-CODE REGISTER      *
                                    126 *                                         LIKE COBOL.                 *
                                    127 *                                                                     *
                                    128 * RETURN CODE -                                                       *
                                    129 *      VALUES:                                                        *
                                    130 *      0   - REQUESTED FUNCTION COMPLETED WITHOUT ERROR               *
                                    131 *      4   - REQUESTED FUNCTION DID NOT COMPLETE FOR REASON:          *
                                    132 *            WHEN P1 = 0  FILE COULD NOT BE OPENED                    *
                                    133 *                      1  FILE COULD NOT BE OPENED                    *
                                    134 *                      4  MEMBER WAS NOT FOUND                        *
                                    135 *                      5  END OF DIRECTORY                            *
                                    136 *                      8  END OF FILE ON CURRENT MEMBER               *
                                    137 *      8   - SERIOUS ERROR. PROCESSING SHOULD BE TERMINATED.          *
                                    138 *                                                                     *
                                    139 * EXAMPLE CALL FROM COBOL:                                            *
                                    140 *                                                                     *
                                    141 *      CALL PDSGETP(FUNC, MEMBER, INPUT-AREA, RETURN_CODE);           *
                                    142 *      IF RETURN_CODE = ZERO          ..                              *
                                    143 *                                                                     *
                                    144 *                                                                     *
                                    145 *****                                                             *****
GETPDS   SUBROUTINE TO READ PARTITIONED DATASET MEMBERS         - PROGRAM DOCUMENTATION                        PAGE    5


  LOC  OBJECT CODE    ADDR1 ADDR2  STMT   SOURCE STATEMENT                                       ASM 0201 08.54 04/06/23

                                    147 *****                                                             *****
                                    148 *                                                                     *
                                    149 * NCZ93205.3 MESSAGES                                                 *
                                    150 *                                                                     *
                                    151 * NONE.                                                               *
                                    152 *                                                                     *
                                    153 *****                                                             *****

                                    155 *****                                                             *****
                                    156 *                                                                     *
                                    157 * NCZ93205.4 ABEND CODES                                              *
                                    158 *                                                                     *
                                    159 * NONE. IT IS THE RESPOSIBILITY OF THE CALLING PROGRAM TO TERMINATE   *
                                    160 * AFTER A SERIOUS ERROR CONDITION.                                    *
                                    161 *                                                                     *
                                    162 *****                                                             *****

                                    164 *****                                                             *****
                                    165 *                                                                     *
                                    166 * NCZ93205.5 IMPLEMENTATION METHOD                                    *
                                    167 *                                                                     *
                                    168 * MOVE TO MAC1.ASM AND PASMAL.                                        *
                                    169 *                                                                     *
                                    170 *****                                                             *****

                                    172 *****                                                             *****
                                    173 *                                                                     *
                                    174 * NCZ93205.6 AMENDMENT HISTORY                                        *
                                    175 *                                                                     *
                                    176 * MAINTAIN THE RECORD BELOW.                                          *
                                    177 *                                                                     *
                                    178 * CHANGE HISTORY:                                                     *
                                    179 * DATE      INITS VERSION COMMENTS                                    *
                                    180 *                                                                     *
                                    181 * 17 NOV 82 RH    V01     CREATED                                     *
                                    182 *                                                                     *
                                    183 * SUGGESTED ENHANCEMENTS:                                             *
                                    184 *                                                                     *
                                    185 * NONE YET.                                                           *
                                    186 *                                                                     *
                                    187 * DD MMM YY WHO : COMMENTS                                            *
                                    188 *                                                                     *
                                    189 *****                                                             *****
GETPDS   SUBROUTINE TO READ PARTITIONED DATASET MEMBERS         - PROGRAM DOCUMENTATION                        PAGE    6


  LOC  OBJECT CODE    ADDR1 ADDR2  STMT   SOURCE STATEMENT                                       ASM 0201 08.54 04/06/23

                                    191 *****                                                             *****
                                    192 *                                                                     *
                                    193 * NCZ93205.7 MODULARISATION DETAILS                                   *
                                    194 *                                                                     *
                                    195 * SIMPLE LINEAR STRUCTURE.                                            *
                                    196 * USES OPEN, FIND, CLOSE, READ, CHECK (BSAM).                         *
                                    197 *                                                                     *
                                    198 *****                                                             *****

                                    200 *****                                                             *****
                                    201 *                                                                     *
                                    202 * NCZ93205.8 PROGRAM LOGIC OVERVIEW                                   *
                                    203 *                                                                     *
                                    204 * OMITTED. IT SHOULD BE NOTED THAT THIS PROGRAM HAS TO BE PRETTY      *
                                    205 * RUGGED. DO NOT ASSUME THAT ALL CALLS ARE IN LOGICAL SEQUENCE.       *
                                    206 *                                                                     *
                                    207 *****                                                             *****
GETPDS   SUBROUTINE TO READ PARTITIONED DATASET MEMBERS         - PROGRAM PROLOGUE                             PAGE    7


  LOC  OBJECT CODE    ADDR1 ADDR2  STMT   SOURCE STATEMENT                                       ASM 0201 08.54 04/06/23

                                    209 *****                                                             *****
                                    210 *                                                                     *
                                    211 * ID:          GETPDS   - SUBROUTINE TO READ PDS MEMBERS              *
                                    212 *                         FORMERLY KNOWN AS NCZ93205                  *
                                    213 *                                                                     *
                                    214 * ENTRY INTFCE: STANDARD OS - SEE ABOVE.                              *
                                    215 *                                                                     *
                                    216 * EXIT  INTFCE: STANDARD OS - SEE ABOVE.                              *
                                    217 *                                                                     *
                                    218 * RETURN CODES:RC = 0       - OK                                      *
                                    219 *                                                                     *
                                    220 *              RC = 4       - REQUESTED FUNCTION DID NOT COMPLETE     *
                                    221 *                                                                     *
                                    222 *              RC = 8       - SERIOUS ERROR - TERMINATION ADVISED     *
                                    223 *                                                                     *
                                    224 * REG USAGE:   R0 -                                                   *
                                    225 *              R1 -                                                   *
                                    226 *              R2 -      -> P1  (FUNCTION)                            *
                                    227 *              R3 -      -> P2  (MEMBER)                              *
                                    228 *              R4 -      -> P3  (INPUT AREA)                          *
                                    229 *              R5 -      WORK: -> BUFFER                              *
                                    230 *              R6 -      WORK: -> RECORD                              *
                                    231 *              R7 -      -> P4 (RETURN CODE PL/1 ONLY)                *
                                    232 *              R8 -                                                   *
                                    233 *              R9                                                     *
                                    234 *              R10 -                                                  *
                                    235 *              R11 -     BASE REGISTER                                *
                                    236 *              R12 -     -> DCB                                       *
                                    237 *              R13 -     SAVE AREA                                    *
                                    238 *              R14 -                                                  *
                                    239 *              R15 -                                                  *
                                    240 *                                                                     *
                                    241 *****                                                             *****
GETPDS   SUBROUTINE TO READ PARTITIONED DATASET MEMBERS         - PROGRAM CODE                                 PAGE    8


  LOC  OBJECT CODE    ADDR1 ADDR2  STMT   SOURCE STATEMENT                                       ASM 0201 08.54 04/06/23

                                    243 GETPDS   ESTART TYPE=START,DESC='GETPDS - ACCESS PDS MEMBERS',         X
                                                       VER='1.3.0',BASE=R11,REGS=YES,PLIF=GETPDSP
000000                              244+GETPDS   START                                                          00000019
                                    245+*                                                                       00000027
000000 92D5 F012      00012         246+         MVI   18(15),C'N'            SET NO PLI ENTRY POINT            00000029
000004 47FF 000C      0000C         247+         B     12(15)                 SKIP HEADER STUFF                 00000030
                                    248+         ENTRY GETPDSP                                                  00000031
000008 92E8 F00A      0000A         249+GETPDSP  MVI   10(15),C'Y'            SET PL1 ENTRY POINT               00000032
00000C 05F0                         250+         BALR  15,0                                                     00000033
00000E 47FF 008A      0008A         251+ID10001    B     ID40001(15)            SKIP HEADER STUFF               00000034
000012                              252+ID50001    DS   C                                                       00000035
                            00004   253+IDP0001    EQU  ID50001-ID10001                                         00000036
000013 84                           254+         DC    AL1(ID30001-ID20001)                                     00000041
000014 C7C5E3D7C4E24040             255+ID20001    DC    CL8'GETPDS'                                            00000042
00001C F14BF34BF0                   256+         DC    C'1.3.0'                                                 00000043
000021 40F0F461F0F661F2             257+         DC    C' 04/06/23 08.54 - '                                    00000044
000033 C7C5E3D7C4E24060             258+         DC    C'GETPDS - ACCESS PDS MEMBERS'                           00000045
000050                              259+         DS    0F                                                       00000046
                            00042   260+IDS0001    EQU   *-ID10001                                              00000047
000050                              261+         DS    18F                                                      00000048
000098                              262+ID30001    DS    0H                                                     00000049
                            00000   263+R0       EQU   0                                                        00000007
                            00001   264+R1       EQU   1                                                        00000008
                            00002   265+R2       EQU   2                                                        00000009
                            00003   266+R3       EQU   3                                                        00000010
                            00004   267+R4       EQU   4                                                        00000011
                            00005   268+R5       EQU   5                                                        00000012
                            00006   269+R6       EQU   6                                                        00000013
                            00007   270+R7       EQU   7                                                        00000014
                            00008   271+R8       EQU   8                                                        00000015
                            00009   272+R9       EQU   9                                                        00000016
                            0000A   273+R10      EQU   10                                                       00000017
                            0000B   274+R11      EQU   11                                                       00000018
                            0000C   275+R12      EQU   12                                                       00000019
                            0000D   276+R13      EQU   13                                                       00000020
                            0000E   277+R14      EQU   14                                                       00000021
                            0000F   278+R15      EQU   15                                                       00000022
                            0008A   279+ID40001    EQU   *-ID10001                                              00000054
                                    280+*                                                                       00000055
000098 90EC D00C      0000C         281+         STM   14,12,12(13)                                             00000056
                                    282+*                                                                       00000057
00009C 185D                         283+         LR    5,13                COPY CALLER'S SAVEAREA ADDR          00000058
00009E 41DF 0042      00042         284+         LA    13,IDS0001(15)      ESTABLISH MY SAVEAREA                00000059
0000A2 5050 D004      00004         285+         ST    5,4(,13)            BACK CHAIN SAVE AREAS                00000060
0000A6 50D0 5008      00008         286+         ST    13,8(,5)            FORWARD CHAIN SAVE AREAS             00000061
0000AA 05B0                         287+         BALR  R11,0               ESTABLISH BASE REG VALUE             00000063
                            000AC   288+         USING *,R11                                                    00000064
0000AC 95E8 F004      00004         289+         CLI   IDP0001(15),C'Y'         SET CC BASED ON PLI INDICATOR   00000067
                                    290          ENTRY NCZ93205
                            00000   291 NCZ93205 EQU   GETPDS
0000B0 4770 B020      000CC         292          BNE   NOTPLI
0000B4 9825 1000      00000         293          LM    R2,R5,0(R1)         GET PLI PARMLIST OF DDB
0000B8 5820 2000      00000         294          L     R2,0(0,R2)          GET DATA ADDRS
0000BC 5830 3000      00000         295          L     R3,0(0,R3)
0000C0 5840 4000      00000         296          L     R4,0(0,R4)
GETPDS   SUBROUTINE TO READ PARTITIONED DATASET MEMBERS         - PROGRAM CODE                                 PAGE    9


  LOC  OBJECT CODE    ADDR1 ADDR2  STMT   SOURCE STATEMENT                                       ASM 0201 08.54 04/06/23

0000C4 5870 5000      00000         297          L     R7,0(0,R5)              PL1 ONLY
0000C8 47F0 B028      000D4         298          B     COMM
                            000CC   299 NOTPLI   EQU   *
0000CC 9824 1000      00000         300          LM    R2,R4,0(R1)
0000D0 4170 B314      003C0         301          LA    R7,PLIRC                PL1 ONLY
                            000D4   302 COMM     EQU   *
0000D4 41C0 B2B4      00360         303          LA    R12,PDS
                            00000   304          USING IHADCB,R12
                                    305 ******** LM    R2,R4,0(R1)

0000D8 58F2 0000      00000         307          L     R15,0(R2)               GET FUNCTION CODE
0000DC 49F0 B54C      005F8         308          CH    R15,=H'0'               Q - OPEN ?
0000E0 4780 B064      00110         309          BE    P01                     Y
0000E4 49F0 B54E      005FA         310          CH    R15,=H'4'               Q - FIND ?
0000E8 4780 B0D0      0017C         311          BE    P02                     Y
0000EC 49F0 B550      005FC         312          CH    R15,=H'8'               Q - READ ?
0000F0 4780 B0F2      0019E         313          BE    P03                     Y
0000F4 49F0 B552      005FE         314          CH    R15,=H'12'              Q - CLOSE ?
0000F8 4780 B196      00242         315          BE    P04                     Y
0000FC 49F0 B554      00600         316          CH    R15,=H'1'               Q - START SEQ DIR ?
000100 4780 B1BA      00266         317          BE    P05                     Y
000104 49F0 B556      00602         318          CH    R15,=H'5'               Q - NEXT SEQ DIR ?
000108 4780 B1CC      00278         319          BE    P06                     Y
00010C 47F0 B2A0      0034C         320          B     P99                     BAD FUNCTION CODE
                                    321 *********************************************************************
                                    322 *        OPEN DATASET
000110                              323 P01      DS    0H
000110 9110 C030      00030         324          TM    DCBOFLGS,DCBOFOPN        Q - DATASET OPEN ?
000114 4710 B2A0      0034C         325          BO    P99                      Y BOMB OUT
                                    326 *********************************** START FIX V1.2.0 ****************
000118 5880 B534      005E0         327          L     R8,=A(@GETDR1)
00011C 9200 8000      00000         328          MVI   0(R8),X'00'
000120 D2FF 8001 8000 00001 00000   329          MVC   1(256,R8),0(R8)          CLEAR OUT WORKING STORAGE
                                    330 **************************************END FIX V1.2.0 ****************
000126 D507 3000 B52C 00000 005D8   331          CLC   0(8,R3),=CL8' '          DDNAME SPECIFIED?
00012C 4780 B08A      00136         332          BE    P01GO                    NO, DEFAULT=PDS
000130 D207 B2DC 3000 00388 00000   333          MVC   PDSDDNAM(8),0(R3)        MOVE DDNAME TO DCB
                            00136   334 P01GO    EQU   *
                                    335          OPEN  (PDS,INPUT)              OPEN IT
000136 0700                         336+         CNOP  0,4                               ALIGN LIST TO FULLWORD 01740001
000138 4510 B094      00140         337+         BAL   1,*+8                             LOAD REG1 W/LIST ADDR. 01780000
00013C 80                           338+         DC    AL1(128)                          OPTION BYTE            01900000
00013D 000360                       339+         DC    AL3(PDS)                          DCB ADDRESS            01920000
000140 0A13                         340+         SVC   19                                ISSUE OPEN SVC         04000000
000142 9110 C030      00030         341          TM    DCBOFLGS,DCBOFOPN        Q - OK ?
000146 4780 B28C      00338         342          BZ    P98                      N EXIT RC=4
00014A 9502 C01A      0001A         343          CLI   DCBDSORG,DCBDSGPO        Q - IS THIS A PDS ?
00014E 4770 B0AE      0015A         344          BNE   P0105                    N GO CLOSE
000152 916B C024      00024         345          TM    DCBRECFM,X'FF'-(DCBRECF+DCBRECBR+DCBRECCA) Q - RECFM ?
000156 4780 B0BE      0016A         346          BZ    P0110                    OK

                            0015A   348 P0105    EQU   *
                                    349          CLOSE PDS
00015A 0700                         350+         CNOP  0,4                               ALIGN LIST TO FULLWORD 02420002
00015C 4510 B0B8      00164         351+         BAL   1,*+8                             LOAD REG1 W/LIST ADDR  02460002
GETPDS   SUBROUTINE TO READ PARTITIONED DATASET MEMBERS         - PROGRAM CODE                                 PAGE   10


  LOC  OBJECT CODE    ADDR1 ADDR2  STMT   SOURCE STATEMENT                                       ASM 0201 08.54 04/06/23

000160 80                           352+         DC    AL1(128)                          OPTION BYTE            02580000
000161 000360                       353+         DC    AL3(PDS)                          DCB ADDRESS            02600000
000164 0A14                         354+         SVC   20                                ISSUE CLOSE SVC        01640000
000166 47F0 B2A0      0034C         355          B     P99
00016A 4800 C03E      0003E         356 P0110    LH    R0,DCBBLKSI
                                    357          GETMAIN R,LV=(0)               GET A BUFFER
                                    358+*      OS/VS2 RELEASE 4 VERSION -- 10/21/75                             00004804
00016E 4510 B0C6      00172         359+         BAL   1,*+4                             INDICATE GETMAIN       00682402
000172 0A0A                         360+         SVC   10                                ISSUE GETMAIN SVC      00820002
000174 5010 B318      003C4         361          ST    R1,BUFA
000178 47F0 B278      00324         362          B     P97                      EXIT OK
                                    363 **********************************************************************

                                    365 *        FIND MEMBER
00017C                              366 P02      DS    0H
00017C 9110 C030      00030         367          TM    DCBOFLGS,DCBOFOPN        Q - DATASET OPEN ?
000180 4780 B2A0      0034C         368          BZ    P99                      N BOMB OUT
                                    369          FIND  (12),(3),D               LOCATE MEMBER
000184 181C                         370+         LR    1,12                              LOAD PARAMETER REG 1   02050002
000186 1803                         371+         LR    0,3                               LOAD PARAMETER REG 0   03850002
000188 1311                         372+         LCR   1,1                               INDICATE TYPE D        00160000
00018A 0A12                         373+         SVC   18                                ISSUE FIND SVC         00180000
00018C 12FF                         374          LTR   R15,R15                  Q - OK ?
00018E 4770 B28C      00338         375          BNZ   P98                      N EXIT RC=4
000192 947F B30C      003B8         376          NI    FLAGS,X'FF'-EOM          Y CLEAR END OF MEMBER FLAG
000196 9640 B30C      003B8         377          OI    FLAGS,DOREAD             SET FLAG TO DO READ
00019A 47F0 B278      00324         378          B     P97                      EXIT RC=0
GETPDS   SUBROUTINE TO READ PARTITIONED DATASET MEMBERS         - PROGRAM CODE                                 PAGE   11


  LOC  OBJECT CODE    ADDR1 ADDR2  STMT   SOURCE STATEMENT                                       ASM 0201 08.54 04/06/23

                                    380 **********************************************************************
                                    381 *        GET NEXT RECORD FOR THIS MEMBER
00019E                              382 P03      DS    0H
00019E 9110 C030      00030         383          TM    DCBOFLGS,DCBOFOPN        Q - DATASET OPEN ?
0001A2 4780 B2A0      0034C         384          BZ    P99                      N - BOMB OUT

0001A6 9180 B30C      003B8         386          TM    FLAGS,EOM                Q - EOM ALREADY ?
0001AA 4710 B2A0      0034C         387          BO    P99                      Y BOMB OUT

0001AE 5850 B318      003C4         389 P0305    L     R5,BUFA                  R5 -> INPUT BUFFER
0001B2 5860 B31C      003C8         390          L     R6,RECA                  R6 -> NEXT RECORD IN BUFFER
0001B6 9140 B30C      003B8         391          TM    FLAGS,DOREAD             Q - SHOULD WE READ NEXT BLOCK ?
0001BA 4780 B168      00214         392          BZ    P0310                    N

                                    394          READ  DECB1,                   READ A BLOCK OF RECORDS        *
                                                       SF,                                                     *
                                                       (12),                                                   *
                                                       (5),                                                    *
                                                       'S'
0001BE 0700                         395+         CNOP  0,4                                                      02179019
0001C0 4510 B12C      001D8         396+         BAL   1,*+24                   LOAD DECB ADDRESS               02187003
0001C4 00000000                     397+DECB1    DC    F'0'                              EVENT CONTROL BLOCK    02200000
0001C8 80                           398+         DC    X'80'                             TYPE FIELD             02260000
0001C9 80                           399+         DC    X'80'                             TYPE FIELD             00840000
0001CA 0000                         400+         DC    AL2(0)                            LENGTH                 02480000
0001CC 00000000                     401+         DC    A(0)                              DCB ADDRESS            02580000
0001D0 00000000                     402+         DC    A(0)                              AREA ADDRESS           02700000
0001D4 00000000                     403+         DC    A(0)                              RECORD POINTER WORD    02720000
0001D8 50C1 0008      00008         404+         ST    12,8(1,0)                         STORE DCB ADDRESS      02786803
0001DC 5051 000C      0000C         405+         ST    5,12(1,0)                         STORE AREA ADDRESS     02820000
0001E0 58F1 0008      00008         406+         L     15,8(1,0)           LOAD DCB ADDRESS                     02091503
0001E4 58F0 F030      00030         407+         L     15,48(0,15)                       LOAD RDWR ROUTINE ADDR 02097203
0001E8 05EF                         408+         BALR  14,15                             LINK TO RDWR ROUTINE   02102903
                                    409          CHECK DECB1                    WAIT FOR IO TO COMPLETE
0001EA 4110 B118      001C4         410+         LA    1,DECB1                           LOAD PARAMETER REG 1   01900002
0001EE 58E0 1008      00008         411+         L     14,8(0,1)                PICK UP DCB ADDR                00700000
0001F2 58F0 E034      00034         412+         L     15,52(0,14)              LOAD CHECK ROUTINE ADDR         00750000
0001F6 05EF                         413+         BALR  14,15                    LINK TO CHECK ROUTINE           00800000

0001F8 48A0 C03E      0003E         415          LH    R10,DCBBLKSI             # OF BYTES WE COULD HAVE READ
0001FC 5810 C044      00044         416          L     R1,DCBIOBA
000200 4BA1 0016      00016         417          SH    R10,22(R1)               LESS # OF BYTES WE DID'NT READ
000204 4780 B18E      0023A         418          BZ    P03EOM                   NOTHING READ - MUST BE EOM
000208 1AA5                         419          AR    R10,R5
00020A 50A0 B320      003CC         420          ST    R10,BLOCKEND             SAVE ADDRESS END OF THIS BLOCK
00020E 94BF B30C      003B8         421          NI    FLAGS,X'FF'-DOREAD       SET FLAG OFF - WE DID A READ
000212 1865                         422          LR    R6,R5                    R6 -> FIRST RECORD IN BLOCK

000214 48F0 C052      00052         424 P0310    LH    R15,DCBLRECL             GET RECORD LENGTH
                                    425 *******  EX    R15,EXMVC                MOVE RECORD TO INPUT AREA
                                    426 *******  AR    R6,R15                   R6 -> NEXT RECORD IN BUFFER
                                    427 ********************************* START FIX V1.1.0     ***************
000218 06F0                         428          BCTR  R15,0
00021A 44F0 B30E      003BA         429          EX    R15,EXMVC                MOVE RECORD TO INPUT AREA
00021E 416F 6001      00001         430          LA    R6,1(R15,R6)             R6 -> NEXT RECORD IN BUFFER
GETPDS   SUBROUTINE TO READ PARTITIONED DATASET MEMBERS         - PROGRAM CODE                                 PAGE   12


  LOC  OBJECT CODE    ADDR1 ADDR2  STMT   SOURCE STATEMENT                                       ASM 0201 08.54 04/06/23

                                    431 *********************************  END  FIX V1.1.0     ***************
000222 5960 B320      003CC         432          C     R6,BLOCKEND              Q - END OF THIS BLOCK ?
000226 47B0 B186      00232         433          BNL   P0320                    Y GO SET FLAG TO DO READ

00022A 5060 B31C      003C8         435          ST    R6,RECA                  SAVE CURRENT RECORD POINTER
00022E 47F0 B278      00324         436          B     P97                      EXIT RC=0

000232 9640 B30C      003B8         438 P0320    OI    FLAGS,DOREAD             DO READ FOR NEXT RECORD
000236 47F0 B278      00324         439          B     P97                      EXIT RC=0

00023A                              441 P03EOM   DS    0H
00023A 9680 B30C      003B8         442          OI    FLAGS,EOM                INDICATE END OF MEMBER
00023E 47F0 B28C      00338         443          B     P98                      EXIT RC = 4
GETPDS   SUBROUTINE TO READ PARTITIONED DATASET MEMBERS         - PROGRAM CODE                                 PAGE   13


  LOC  OBJECT CODE    ADDR1 ADDR2  STMT   SOURCE STATEMENT                                       ASM 0201 08.54 04/06/23

                                    445 **********************************************************************
                                    446 *        CLOSE PDS
000242                              447 P04      DS    0H
000242 9110 C030      00030         448          TM    DCBOFLGS,DCBOFOPN        Q - DATASET OPEN ?
000246 4780 B2A0      0034C         449          BZ    P99                      N BOMB OUT
00024A 4800 C03E      0003E         450          LH    R0,DCBBLKSI              FREE MEMBER BLOCK
00024E 5850 B318      003C4         451          L     R5,BUFA
                                    452          FREEMAIN R,LV=(0),A=(5)
                                    453+*      OS/VS2 RELEASE 3 VERSION  -- 10/25/74                            00001603
000252 4110 5000      00000         454+         LA    1,0(0,5)                          LOAD AREA ADDRESS      00164002
000256 0A0A                         455+         SVC   10                                ISSUE FREEMAIN SVC     00311202
                                    456          CLOSE PDS
000258                              457+         CNOP  0,4                               ALIGN LIST TO FULLWORD 02420002
000258 4510 B1B4      00260         458+         BAL   1,*+8                             LOAD REG1 W/LIST ADDR  02460002
00025C 80                           459+         DC    AL1(128)                          OPTION BYTE            02580000
00025D 000360                       460+         DC    AL3(PDS)                          DCB ADDRESS            02600000
000260 0A14                         461+         SVC   20                                ISSUE CLOSE SVC        01640000
000262 47F0 B278      00324         462          B     P97
                                    463 **********************************************************************
                                    464 *        START SEQUENTIAL DIR PROCESS
000266                              465 P05      DS    0H
000266 9110 C030      00030         466          TM    DCBOFLGS,DCBOFOPN        Q - DATASET OPEN ?
00026A 4780 B2A0      0034C         467          BZ    P99                      N BOMB OUT
00026E D203 B2B4 B538 00360 005E4   468          MVC   PDSRELAD(4),=4X'00'      RESET DIRECTORY TO START
000274 47F0 B278      00324         469          B     P97

                                    471 **********************************************************************
                                    472 *        GET NEXT MEMBER NAME
000278                              473 P06      DS    0H
000278 9110 C030      00030         474          TM    DCBOFLGS,DCBOFOPN        Q - DATASET OPEN ?
00027C 4780 B2A0      0034C         475          BZ    P99                      N BOMB OUT
                                    476 GETD     GETDIR PDS,EODAD=P06EOF
                                    477+**********************************************************************  00000003
                                    478+*                                                                       00000004
                                    479+*    THE "GETDIR" MACRO ALLOWS YOU TO READ A PDS DIRECTORY              00000005
                                    480+*    SEQUENTIALLY, AS FOLLOWS:                                          00000006
                                    481+*                                                                       00000007
                                    482+*        IT WORKS IN "LOCATE" MODE; AFTER EACH INVOKATION, THE          00000008
                                    483+*        ADDRESS OF A DIRECTORY ENTRY (MEMBER NAME, TTR, ETC) IS        00000009
                                    484+*        RETURNED IN R1.                                                00000010
                                    485+*                                                                       00000011
                                    486+*        IT USES A BPAM DCB (DSORG=PO,MACRF=R), NOT A QSAM DCB          00000012
                                    487+*        (WHICH WOULD HAVE DSORG=PS).  THIS ALLOWS YOU TO READ THE      00000013
                                    488+*        DIRECTORY AND THE MEMBERS WITH THE SAME DCB.                   00000014
                                    489+*                                                                       00000015
                                    490+*        R1 IS SET TO ZERO WHEN THE END OF THE DIRECTORY IS REACHED.    00000016
                                    491+*        THE "EODAD" KEY-WORD OF THE "GETDIR" MACRO MAY BE USED TO      00000017
                                    492+*        SPECIFY THE ADDRESS OF THE END-OF-DIRECTORY ROUTINE.           00000018
                                    493+*        THE EODAD KEY-WORD OF THE DCB IS ONLY USED AT END-OF-MEMBER.   00000019
                                    494+*                                                                       00000020
                                    495+*        THE "GETDIR" MACRO ONLY PROCESSES THE FIRST PDS IN A           00000021
                                    496+*        CONCATENATION, AND WILL NOT WORK WITH A PDSE.                  00000022
                                    497+*                                                                       00000023
                                    498+**********************************************************************  00000024
                                    499+*                                                                       00000025
GETPDS   SUBROUTINE TO READ PARTITIONED DATASET MEMBERS         - PROGRAM CODE                                 PAGE   14


  LOC  OBJECT CODE    ADDR1 ADDR2  STMT   SOURCE STATEMENT                                       ASM 0201 08.54 04/06/23

                                    500+*   THE ORIGINAL SOURCE WAS OBTAINED FROM CBT THAT COME WITH TURNKEY    00000026
                                    501+*           PDS : CBT429.FILE183(GETDIR)                                00000027
                                    502+*                                                                       00000028
                                    503+*   V1        ORIGINAL SOURCE                                           00000029
                                    504+*   V2   03/16/2010  ED LISS, CEDAR LAKE EMPORIUM LLC.                  00000030
                                    505+*        CLEANED UP AND SOME DOCUMENTATION ADDED.                       00000031
                                    506+*                                                                       00000032
                                    507+**********************************************************************  00000033
000280 4110 B2B4      00360         508+GETD     LA    1,PDS                             LOAD PARAMETER REG 1   01900002
000284 58F0 B53C      005E8         509+         L     R15,=A(@GETDIR)         ADDR OF "GETDIR" RTNE            00000036
000288 05EF                         510+         BALR  R14,R15                 GET A DIRECTORY ENTRY            00000037
00028A 1211                         511+         LTR   R1,R1                   END OF DIRECTORY?                00000039
00028C 4780 B274      00320         512+         BZ    P06EOF                  YES, GO AWAY                     00000040
000608                              513+@GETDIR  CSECT                                                          00000049
000608 47F0 F012      00012         514+         B     18(0,15)                          BRANCH AROUND ID       00450000
00060C 0D                           515+         DC    AL1(13)                           LENGTH OF IDENTIFIER   00550000
00060D C7C5E3C4C9D940F8             516+         DC    CL8'GETDIR 8'                     IDENTIFIER             00950000
000615 F4F0F5F1F0                   517+         DC    CL5'40510'                        IDENTIFIER             00750000
00061A 90EC D00C      0000C         518+         STM   14,12,12(13)                      SAVE REGISTERS         02950000
00061E 0520                         519+         BALR  R2,0                                                     00000051
                            00620   520+         USING *,R2                                                     00000052
000620 1831                         521+         LR    R3,R1                   ADRESSE DU DCB                   00000053
000622 50D0 20B8      006D8         522+         ST    R13,@GETDSAV+4                                           00000054
000626 41D0 20B4      006D4         523+         LA    R13,@GETDSAV                                             00000055
00062A 4150 0100      00100         524+         LA    R5,X'000100'            TT=00, R=1, N=0                  00000056
00062E BF1F 20AC      006CC         525+         ICM   R1,B'1111',@GETDR1      CURRENT POS IN BUFFER            00000057
000632 4780 2034      00654         526+         BZ    @GETD22                 PICK UP PARM LIST OFFSET         00000058
000636 41E0 001F      0001F         527+         LA    R14,X'1F'               MASQUE POUR "AND"                00000059
00063A 4300 100B      0000B         528+         IC    R0,11(,R1)              "C" BYTE                         00000060
00063E 14E0                         529+         NR    R14,R0                  NOMBRE DE HALFWORDS              00000061
000640 41EE E00C      0000C         530+         LA    R14,12(R14,R14)         LONGUEUR DU POSTE DANS R14       00000062
000644 48F0 20FC      0071C         531+         LH    R15,@GETDBUF            LONGUEUR UTILISEE                00000063
000648 41FF 20FB      0071B         532+         LA    R15,@GETDBUF-1(R15)     ADRESSE DERNIER OCTET UTILISE    00000064
00064C 871E 2090      006B0         533+         BXLE  R1,R14,@GETD24                                           00000065
000650 5E50 20B0      006D0         534+         AL    R5,@GETDR5              INCREMENTER LE NUMERO D'ENREG    00000066
000654 5050 20B0      006D0         535+@GETD22  ST    R5,@GETDR5              TTRN DU BLOC SUIVANT             00000067
000658 1813                         536+         LR    1,R3                              LOAD PARAMETER REG 1   02050002
00065A 4100 20B0      006D0         537+         LA    0,@GETDR5                         LOAD PARAMETER REG 0   02500002
00065E 58F0 1054      00054         538+         L     15,84(0,1)               LOAD POINT RTN ADDR             00550000
000662 45EF 0004      00004         539+         BAL   14,4(15,0)               LINK TO POINT ROUTINE           00600000
000666 4840 303E      0003E         540+         LH    R4,62(,R3)              SAUVER DCBBLKSI                  00000069
00066A 9201 303E      0003E         541+         MVI   62(R3),1                BLKSIZE=256                      00000070
00066E 9200 303F      0003F         542+         MVI   63(R3),0                BLKSIZE=256                      00000071
000672 0700                         543+         CNOP  0,4                                                      02179019
000674 4510 206C      0068C         544+         BAL   1,*+24                   LOAD DECB ADDRESS               02187003
000678 00000000                     545+@GETDECB DC    F'0'                              EVENT CONTROL BLOCK    02200000
00067C 80                           546+         DC    X'80'                             TYPE FIELD             02260000
00067D 80                           547+         DC    X'80'                             TYPE FIELD             00840000
00067E 0000                         548+         DC    AL2(0)                            LENGTH                 02480000
000680 00000000                     549+         DC    A(0)                              DCB ADDRESS            02580000
000684 0000071C                     550+         DC    A(@GETDBUF)                       AREA ADDRESS           02660000
000688 00000000                     551+         DC    A(0)                              RECORD POINTER WORD    02720000
00068C 5031 0008      00008         552+         ST    R3,8(1,0)                         STORE DCB ADDRESS      02786803
000690 58F1 0008      00008         553+         L     15,8(1,0)           LOAD DCB ADDRESS                     02091503
000694 58F0 F030      00030         554+         L     15,48(0,15)                       LOAD RDWR ROUTINE ADDR 02097203
GETPDS   SUBROUTINE TO READ PARTITIONED DATASET MEMBERS         - PROGRAM CODE                                 PAGE   15


  LOC  OBJECT CODE    ADDR1 ADDR2  STMT   SOURCE STATEMENT                                       ASM 0201 08.54 04/06/23

000698 05EF                         555+         BALR  14,15                             LINK TO RDWR ROUTINE   02102903
00069A 4040 303E      0003E         556+         STH   R4,62(,R3)              RESTAURER DCBBLKSI               00000073
00069E 4110 2058      00678         557+         LA    1,@GETDECB                        LOAD PARAMETER REG 1   01900002
0006A2 58E0 1008      00008         558+         L     14,8(0,1)                PICK UP DCB ADDR                00700000
0006A6 58F0 E034      00034         559+         L     15,52(0,14)              LOAD CHECK ROUTINE ADDR         00750000
0006AA 05EF                         560+         BALR  14,15                    LINK TO CHECK ROUTINE           00800000
0006AC 4110 20FE      0071E         561+         LA    R1,@GETDBUF+2           1ER POSTE                        00000075
0006B0 95FF 1000      00000         562+@GETD24  CLI   0(R1),X'FF'             FIN DE BLOC?                     00000076
0006B4 4770 209A      006BA         563+         BNE   @GETD29                 NON, RENDRE L'ADRESSE            00000077
0006B8 1F11                         564+         SLR   R1,R1                   FIN-DE-REPERTOIRE                00000078
0006BA 5010 20AC      006CC         565+@GETD29  ST    R1,@GETDR1              GARDER L'ADRESSE                 00000079
0006BE 58D0 D004      00004         566+         L     R13,4(,R13)                                              00000080
0006C2 58E0 D00C      0000C         567+         L     R14,12(,R13)            ADRESSE DE RETOUR                00000081
0006C6 982C D01C      0001C         568+         LM    R2,R12,28(R13)          R2-R3                            00000082
0006CA 07FE                         569+         BR    R14                                                      00000083
0006CC                              570+@GETDR1  DS    A(@GETDBUF+2)           POINTEUR COURANT DANS LE BUFFER  00000084
0006D0                              571+@GETDR5  DS    F                       TTRN DU BLOC COURANT             00000085
0006D4                              572+@GETDSAV DS    18F                                                      00000086
00071C                              573+@GETDBUF DS    H,254X                                                   00000087
000290                              574+GETPDS   CSECT                                                          00000088
000290 D207 3000 1000 00000 00000   575          MVC   0(8,R3),0(R1)            SAVE MEMBER NAME AND TTR
                            00000   576          USING PDSSTATS,R10
000296 41A0 100B      0000B         577          LA    R10,11(,R1)              SKIP MEM NAME AND TTR
00029A 9240 4000      00000         578          MVI   0(R4),C' '               CLEAR 30 BYTES OF
00029E D21F 4001 4000 00001 00000   579          MVC   1(PDSSTATL-1,R4),0(R4)      DATA AREA
0002A4 950F A000      00000         580          CLI   PDSC,X'0F'               15 HALFWORDS?
0002A8 4770 B278      00324         581          BNE   P97                      NO STATS
                                    582 *
                                    583 *   COULD BE STATS.  CONTINUE TESTING
                                    584 *
0002AC 5020 B324      003D0         585          ST    R2,R2SAVE                TRT COULD CLOBER R2
0002B0 DD02 A005 B328 00005 003D4   586          TRT   PDSDATEC(3),NUMTBL
0002B6 4770 B26C      00318         587          BNZ   NOTSTAT
0002BA DD00 A008 B428 00008 004D4   588          TRT   PDSDATEC+3(1),SIGNTBL
0002C0 4770 B26C      00318         589          BNZ   NOTSTAT
0002C4 DD02 A009 B328 00009 003D4   590          TRT   PDSDATEU(3),NUMTBL
0002CA 4770 B26C      00318         591          BNZ   NOTSTAT
0002CE DD00 A00C B428 0000C 004D4   592          TRT   PDSDATEU+3(1),SIGNTBL
0002D4 4770 B26C      00318         593          BNZ   NOTSTAT
0002D8 D220 4000 A000 00000 00000   594          MVC   0(PDSSTATL,R4),PDSSTATS
0002DE 18A4                         595          LR    R10,R4                    STATS IN INPUT AREA
0002E0 9501 A005      00005         596          CLI   PDSDATEC,X'01'
0002E4 4780 B24C      002F8         597          BE    CENT20C
0002E8 9500 A005      00005         598          CLI   PDSDATEC,X'00'
0002EC 4770 B26C      00318         599          BNE   NOTSTAT
0002F0 9219 A005      00005         600          MVI   PDSDATEC,X'19'
0002F4 47F0 B250      002FC         601          B     CHECKU
0002F8 9220 A005      00005         602 CENT20C  MVI   PDSDATEC,X'20'
                            002FC   603 CHECKU   EQU   *
0002FC 9501 A009      00009         604          CLI   PDSDATEU,X'01'
000300 4780 B268      00314         605          BE    CENT20U
000304 9500 A009      00009         606          CLI   PDSDATEU,X'00'
000308 4770 B26C      00318         607          BNE   NOTSTAT
00030C 9219 A009      00009         608          MVI   PDSDATEU,X'19'
000310 47F0 B26C      00318         609          B     NOTSTAT
GETPDS   SUBROUTINE TO READ PARTITIONED DATASET MEMBERS         - PROGRAM CODE                                 PAGE   16


  LOC  OBJECT CODE    ADDR1 ADDR2  STMT   SOURCE STATEMENT                                       ASM 0201 08.54 04/06/23

000314 9220 A009      00009         610 CENT20U  MVI   PDSDATEU,X'20'
000318 5820 B324      003D0         611 NOTSTAT  L     R2,R2SAVE                 RESTORE R2
00031C 47F0 B278      00324         612          B     P97
                            00320   613 P06EOF   EQU   *
000320 47F0 B28C      00338         614          B     P98
                                    615 *

000324 D203 7000 B540 00000 005EC   617 P97      MVC   0(4,R7),=F'0'
                                    618          ERETURN RC=0
00032A 58D0 D004      00004         619+         L     13,4(0,13)          RESET TO CALLERS SAVE AREA           00000004
00032E 98EC D00C      0000C         620+         LM    14,12,12(13)                      RESTORE THE REGISTERS  00650000
000332 41F0 0000      00000         621+         LA    15,0(0,0)                         LOAD RETURN CODE       01750000
000336 07FE                         622+         BR    14                                RETURN                 02000000
000338 D203 7000 B544 00000 005F0   623 P98      MVC   0(4,R7),=F'4'
                                    624          ERETURN RC=4
00033E 58D0 D004      00004         625+         L     13,4(0,13)          RESET TO CALLERS SAVE AREA           00000004
000342 98EC D00C      0000C         626+         LM    14,12,12(13)                      RESTORE THE REGISTERS  00650000
000346 41F0 0004      00004         627+         LA    15,4(0,0)                         LOAD RETURN CODE       01750000
00034A 07FE                         628+         BR    14                                RETURN                 02000000
00034C D203 7000 B548 00000 005F4   629 P99      MVC   0(4,R7),=F'8'
                                    630          ERETURN RC=8
000352 58D0 D004      00004         631+         L     13,4(0,13)          RESET TO CALLERS SAVE AREA           00000004
000356 98EC D00C      0000C         632+         LM    14,12,12(13)                      RESTORE THE REGISTERS  00650000
00035A 41F0 0008      00008         633+         LA    15,8(0,0)                         LOAD RETURN CODE       01750000
00035E 07FE                         634+         BR    14                                RETURN                 02000000

                                    636 PDS      DCB   DDNAME=PDS,DSORG=PO,MACRF=(R),EODAD=P03EOM


                                    638+*                       DATA CONTROL BLOCK                              22770000
                                    639+*                                                                       22860000
000360                              640+PDS      DC    0F'0'                   ORIGIN ON WORD BOUNDARY          22914000

                                    642+*                       DIRECT ACCESS DEVICE INTERFACE                  27360000

000360 0000000000000000             644+         DC    BL16'0'                  FDAD,DVTBL                      27540000
000370 00000000                     645+         DC    A(0)                     KEYLE,DEVT,TRBAL                27720000

                                    647+*                       COMMON ACCESS METHOD INTERFACE                  48690000

000374 00                           649+         DC    AL1(0)                  BUFNO                            49050000
000375 000001                       650+         DC    AL3(1)                  BUFCB                            54720000
000378 0000                         651+         DC    AL2(0)             BUFL                                  55170000
00037A 0200                         652+         DC    BL2'0000001000000000'                                   *55800000
                                       +                                                 DSORG                  55890000
00037C 00000001                     653+         DC    A(1)                     IOBAD                           56340000

                                    655+*                       FOUNDATION EXTENSION                            56610000

000380 00                           657+         DC    BL1'00000000'                  BFTEK,BFLN,HIARCHY        59850000
000381 00023A                       658+         DC    AL3(P03EOM)             EODAD                            65970000
000384 00                           659+         DC    BL1'00000000'                                           *66150000
                                       +                                       RECFM                            66240000
000385 000000                       660+         DC    AL3(0)                  EXLST                            66330000
GETPDS   SUBROUTINE TO READ PARTITIONED DATASET MEMBERS         - PROGRAM CODE                                 PAGE   17


  LOC  OBJECT CODE    ADDR1 ADDR2  STMT   SOURCE STATEMENT                                       ASM 0201 08.54 04/06/23

                                    662+*                       FOUNDATION BLOCK                                66690000

000388 D7C4E24040404040             664+         DC    CL8'PDS'                DDNAME                           66870000
000390 02                           665+         DC    BL1'00000010'           OFLGS                            68220000
000391 00                           666+         DC    BL1'00000000'                          IFLG              68310000
000392 2400                         667+         DC    BL2'0010010000000000'                                   *68400000
                                       +                                                                       *68490000
                                       +                                       MACR                             68580000

                                    669+*                       BSAM-BPAM-QSAM INTERFACE                        74430000

000394 00                           671+         DC    BL1'00000000'                                           *74610000
                                       +                                                                   RER1 74700000
000395 000001                       672+         DC    AL3(1)                  CHECK, GERR, PERR                74790000
000398 00000001                     673+         DC    A(1)                    SYNAD                            74880000
00039C 0000                         674+         DC    H'0'                    CIND1, CIND2                     74970000
00039E 0000                         675+         DC    AL2(0)                  BLKSIZE                          75240000
0003A0 00000000                     676+         DC    F'0'                    WCPO, WCPL, OFFSR, OFFSW         75870000
0003A4 00000001                     677+         DC    A(1)                    IOBA                             75960000
0003A8 00                           678+         DC    AL1(0)                  NCP                              76050000
0003A9 000001                       679+         DC    AL3(1)                  EOBR, EOBAD                      76140000

                                    681+*                         BSAM-BPAM INTERFACE                           76410000

0003AC 00000001                     683+         DC    A(1)                    EOBW                             76590000
0003B0 0000                         684+         DC    H'0'                    DIRCT                            78210000
0003B2 0000                         685+         DC    AL2(0)         LRECL                                     80730000
0003B4 00000001                     686+         DC    A(1)                    CNTRL, NOTE, POINT               78480000
                            00360   687 PDSRELAD EQU   PDS                      CURRENT TTRN
                            00388   688 PDSDDNAM EQU   PDS+40                                            *JLM*
0003B8 00                           689 FLAGS    DC    X'00'
                            00080   690 EOM      EQU   X'80'                    REACHED END OF CURRENT MEMBER
                            00040   691 DOREAD   EQU   X'40'                    INDICATES CURRENT BLOCK IS     *
                                                                                EXHAUSTED
0003B9 00
0003BA D200 4000 6000 00000 00000   692 EXMVC    MVC   0(0,R4),0(R6)            MOVE RECORD TO INPUT AREA
0003C0                              693 PLIRC    DS    F                        USED FOR PLI INTERFACE ONLY
0003C4                              694 BUFA     DS    F                        -> BUFFER
0003C8                              695 RECA     DS    F                        -> CURRENT RECORD IN BUFFER
0003CC                              696 BLOCKEND DS    F                        -> END OF CURRENT BLOCK
                                    697 *
                                    698 *   NUMERIC VALIDATION TABLES
                                    699 *                      0 1 2 3 4 5 6 7 8 9 A B C D E F
0003D0                              700 R2SAVE   DS    F
0003D4 0000000000000000             701 NUMTBL   DC    10XL16'00000000000000000000FFFFFFFFFFFF' X'0?'-X'9?'
000474 FFFFFFFFFFFFFFFF             702          DC     6XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' X'A?'-X'F?'
0004D4 FFFFFFFFFFFFFFFF             703 SIGNTBL  DC    10XL16'FFFFFFFFFFFFFFFFFFFFFFFF00FFFF00' X'0?'-X'9?'
000574 FFFFFFFFFFFFFFFF             704          DC     6XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' X'A?'-X'F?'
0005D8                              705          LTORG
0005D8 4040404040404040             706                =CL8' '
0005E0 000006CC                     707                =A(@GETDR1)
0005E4 00000000                     708                =4X'00'
0005E8 00000608                     709                =A(@GETDIR)
0005EC 00000000                     710                =F'0'
0005F0 00000004                     711                =F'4'
GETPDS   SUBROUTINE TO READ PARTITIONED DATASET MEMBERS         - PROGRAM CODE                                 PAGE   18


  LOC  OBJECT CODE    ADDR1 ADDR2  STMT   SOURCE STATEMENT                                       ASM 0201 08.54 04/06/23

0005F4 00000008                     712                =F'8'
0005F8 0000                         713                =H'0'
0005FA 0004                         714                =H'4'
0005FC 0008                         715                =H'8'
0005FE 000C                         716                =H'12'
000600 0001                         717                =H'1'
000602 0005                         718                =H'5'
                                    719          DCBD  DSORG=BS,DEVD=DA


                                    721+*                       DCB SYMBOLIC DEFINITION FOR                     07700000
                                    722+*                       BSAM-BPAM                                       08150000


000000                              724+IHADCB   DSECT , -            DCBPTR                           @ZA05613 09851000


                                    726+*********************************************************************** 09853000
                                    727+*  OS/VS2 RELEASE 02, 02/14/73                                        * 09854000
                                    728+*  OS/VS2 RELEASE 03, 10/23/74                                        * 09855000
                                    729+*  OS/VS2 RELEASE 3.7, 3/15/78                                        * 09856000
                                    730+*C80400037                                                     @ZA33630 09886000
                                    731+*                                                                     * 09902100
                                    732+*  OS/VS2 RELEASE 3.8, 5/15/80    FMID=FDM1133                        * 09909000
                                    733+*                                                                     * 09915900
                                    734+*C(116500),A(116638-116914),D(117000),A(117052-117466)         @ZA46311 09922800
                                    735+*D(117500),A(117604-117880),D(118000),A(118018-118432)         @ZA46311 09929700
                                    736+*D(118500-118510),A(118570-118846)                             @ZA46311 09936600
                                    737+*$F01=UZ59799,FDM1133:DCBDEVT DEFINITION FOR D/T3375 AND D/T3380  @F01A 09940000
                                    738+*                                                                     * 09943500
                                    739+*********************************************************************** 09950700

                            00080   741+DCBBIT0  EQU   128                                             @ZA05613 09951000
                            00040   742+DCBBIT1  EQU   64                                              @ZA05613 09951100
                            00020   743+DCBBIT2  EQU   32                                              @ZA05613 09951200
                            00010   744+DCBBIT3  EQU   16                                              @ZA05613 09951300
                            00008   745+DCBBIT4  EQU   8                                               @ZA05613 09951400
                            00004   746+DCBBIT5  EQU   4                                               @ZA05613 09951500
                            00002   747+DCBBIT6  EQU   2                                               @ZA05613 09951600
                            00001   748+DCBBIT7  EQU   1                                               @ZA05613 09951700

                                    750+*********************************************************************** 09951900


                                    752+*********************************************************************** 10301000
                                    753+*                       DEVICE INTERFACES                               10350000
                                    754+*********************************************************************** 10351000

                                    756+*********************************************************************** 10451000
                                    757+*                       DIRECT ACCESS DEVICES                           10500000
                                    758+*********************************************************************** 10501000

000000                              760+DCBRELAD DS    CL4 -          PARTITIONED ORGANIZATION DATA SET -       10600000
                                    761+*                             ADDRESS (IN THE FORM TTRN) OF MEMBER      10650000
                                    762+*                             CURRENTLY USED.  ---                      10700000
GETPDS   SUBROUTINE TO READ PARTITIONED DATASET MEMBERS         - PROGRAM CODE                                 PAGE   19


  LOC  OBJECT CODE    ADDR1 ADDR2  STMT   SOURCE STATEMENT                                       ASM 0201 08.54 04/06/23

                                    763+*                             SYS1.LOGREC DATA SET - IF CCH OPTION HAS  10750000
                                    764+*                             BEEN SPECIFIED IN SYSGEN PROCESS, ADDRESS 10800000
                                    765+*                             OF A 12-BYTE PARAMETER IN THE EXPANSION   10850000
                                    766+*                             OF MACRO INSTRUCTION IGFCATAP             10900000
000004                              767+DCBKEYCN DS    FL1 -          KEYED BLOCK OVERHEAD CONSTANT             10950000
000005                              768+DCBFDAD  DS    CL8 -          FULL DISK ADDRESS IN THE FORM OF MBBCCHHR 11000000
                                    769+*                             OF RECORD THAT WAS JUST READ OR WRITTEN   11050000

00000D                      0000C   771+         ORG   DCBFDAD+7                                                11150000
00000C                              772+DCBDVTBL DS    0A -           SAME AS DCBDVTBA BELOW                    11200000
00000C                              773+         DS    X -            LAST BYTE OF DCBFDAD                      11250000
00000D                              774+DCBDVTBA DS    AL3 -          ADDRESS OF ENTRY IN I/O DEVICE            11300000
                                    775+*                             CHARACTERISTICS TABLE FOR DEVICE BEING    11350000
                                    776+*                             USED                                      11400000
000010                              777+         DS    FL1 -          DCBKEYLE - KEY LENGTH OF DATA SET         11450000
000011                              778+         DS    C -            DCBDEVT - DEVICE TYPE                     11500000
                                    779+*   FOR MASKS FOR ISAM DIRECT ACCESS, SEE DCBOVDEV IN ISAM SECTION      11550000
                            00021   780+DCBDV311 EQU   X'21' -        2311 DISK STORAGE                @ZA46311 11650000
                            00022   781+DCBDV301 EQU   X'22' -        2301 PARALLEL DRUM                        11663800
                            00023   782+DCBDV303 EQU   X'23' -        2303 SERIAL DRUM                          11677600
                            00024   783+DCBDV302 EQU   X'24' -        2302 DISK STORAGE                         11691400
                            00025   784+DCBDV321 EQU   X'25' -        2321 DATA CELL STORAGE           @ZA46311 11705200
                            00026   785+DCBD1305 EQU   X'26' -        2305 DRUM MODEL-1                @ZA46311 11719000
                            00027   786+DCBDV305 EQU   X'27' -        2305 DRUM MODEL-2                @ZA46311 11732800
                            00028   787+DCBDV314 EQU   X'28' -        2314/2319 DISK STORAGE FACILITY  @ZA46311 11746600
                            00029   788+DCBDV330 EQU   X'29' -        3330 DISK STORAGE FACILITY       @ZA46311 11760400
                                    789+*                             3330 MODEL-1                     @ZA46311 11774200
                                    790+*                             3330 MODEL-2                     @ZA46311 11788000
                                    791+*                             3333 MODEL-1                     @ZA46311 11801800
                            0002A   792+DCBDV340 EQU   X'2A' -        3340/3344 DISK STORAGE FACILITY  @ZA46311 11815600
                            0002B   793+DCBDV350 EQU   X'2B' -        3350 DISK STORAGE FACILITY       @ZA46311 11829400
                                    794+*                             MODELS A2, B2, AND C2            @ZA46311 11843200
                            0002C   795+DCBDV375 EQU   X'2C' -        3375 DISK STORAGE FACILITY          @F01A 11850100
                            0002D   796+DCBDV331 EQU   X'2D' -        3330 MODEL-11 OR 3333 MODEL-11   @ZA46311 11857000
                                    797+*                             DISK STORAGE FACILITY            @ZA46311 11870800
                            0002E   798+DCBDV380 EQU   X'2E' -        3380 DISK STORAGE FACILITY          @F01A 11877700

000012                              800+DCBTRBAL DS    H -            TRACK BALANCE.  NUMBER OF BYTES REMAINING 11900000
                                    801+*                             ON CURRENT TRACK AFTER A WRITE OPERATION  11950000
                                    802+*                             (THIS QUANTITY MAY BE NEGATIVE IF THERE   12000000
                                    803+*                             ARE NO BYTES REMAINING ON TRACK).         12050000

                                    805+*********************************************************************** 24551000
                                    806+*                       ACCESS METHOD COMMON INTERFACE                  24600000
                                    807+*********************************************************************** 24601000

000014                      00010   809+         ORG   IHADCB+16                                                24700000
000010                              810+DCBRELB  DS    0F -           SAME AS DCBREL BELOW                      24750000
000010                              811+DCBKEYLE DS    FL1 -          KEY LENGTH OF DATA SET                    24800000
000011                              812+DCBDEVT  DS    0C -           DEVICE TYPE                               24850000
                            0004F   813+DCBDVTRM EQU   X'4F' -        TERMINAL.  (DD CONTAINS TERM=TS)          24900000
000011                              814+DCBREL   DS    FL3 -          NUMBER OF RELATIVE TRACKS OR BLOCKS IN    24950000
                                    815+*                             THIS DATA SET (BDAM)                      25000000
000014                              816+DCBBUFCB DS    0A -           ADDRESS OF BUFFER POOL CONTROL BLOCK      25050000
000014                              817+DCBBUFNO DS    FL1 -          NUMBER OF BUFFERS REQUIRED FOR THIS DATA  25100000
GETPDS   SUBROUTINE TO READ PARTITIONED DATASET MEMBERS         - PROGRAM CODE                                 PAGE   20


  LOC  OBJECT CODE    ADDR1 ADDR2  STMT   SOURCE STATEMENT                                       ASM 0201 08.54 04/06/23

                                    818+*                             SET.  MAY RANGE FROM 0 TO 255.  IF        25150000
                                    819+*                             UNBLOCKED SPANNED RECORDS ARE USED,       25200000
                                    820+*                             NUMBER OF SEGMENT WORK AREAS REQUIRED     25250000
                                    821+*                             FOR THIS DATA SET.                        25300000
000015                              822+DCBBUFCA DS    AL3 -          ADDRESS OF BUFFER POOL CONTROL BLOCK      25350000
000018                              823+DCBBUFL  DS    H -            LENGTH OF BUFFER.  MAY RANGE FROM 0 TO    25400000
                                    824+*                             32,767.                                   25450000
00001A                              825+DCBDSORG DS    0BL2 -         DATA SET ORGANIZATION BEING USED          25500000
00001A                              826+DCBDSRG1 DS    BL1 -          FIRST BYTE OF DCBDSORG                    25550000
                            00080   827+DCBDSGIS EQU   DCBBIT0 -      IS - INDEXED SEQUENTIAL ORGANIZATION      25600000
                            00040   828+DCBDSGPS EQU   DCBBIT1 -      PS - PHYSICAL SEQUENTIAL ORGANIZATION     25650000
                            00020   829+DCBDSGDA EQU   DCBBIT2 -      DA - DIRECT ORGANIZATION                  25700000
                            00010   830+DCBDSGCX EQU   DCBBIT3 -      CX - BTAM OR QTAM LINE GROUP              25750000
                            00002   831+DCBDSGPO EQU   DCBBIT6 -      PO - PARTITIONED ORGANIZATION             25900000
                            00001   832+DCBDSGU  EQU   DCBBIT7 -      U  - UNMOVABLE, THE DATA CONTAINS         25950000
                                    833+*                                  LOCATION DEPENDENT INFORMATION       26000000
00001B                              834+DCBDSRG2 DS    BL1 -          SECOND BYTE OF DCBDSORG                   26050000
                            00080   835+DCBDSGGS EQU   DCBBIT0 -      GS - GRAPHICS ORGANIZATION                26100000
                            00040   836+DCBDSGTX EQU   DCBBIT1 -      TX - TCAM LINE GROUP                      26150000
                            00020   837+DCBDSGTQ EQU   DCBBIT2 -      TQ - TCAM MESSAGE QUEUE                   26200000
                            00008   838+DCBACBM  EQU   DCBBIT4 -      ACCESS METHOD CONTROL BLOCK               26250000
                            00004   839+DCBDSGTR EQU   DCBBIT5 -      TR - TCAM 3705                            26260000
00001C                              840+DCBIOBAD DS    0A -           ADDRESS OF IOB WHEN CHAINED SCHEDULING IS 26300000
                                    841+*                             USED OR FOR 1419/1275                     26350000
00001C                              842+DCBODEB  DS    0A -           ADDRESS OF OLD DEB                        26400000
00001C                              843+DCBLNP   DS    0FL1 -         3525 PRINTER LINE POSITION COUNTER        26450000
00001C                              844+DCBQSLM  DS    BL1 -          QSAM LOCATE MODE LOGICAL RECORD INTERFACE 26500000
                                    845+*                             INDICATOR BYTE FOR UPDAT PROCESSING OF    26550000
                                    846+*                             SPANNED RECORDS                           26600000
                            00080   847+DCB1DVDS EQU   DCBBIT0 -      ONLY ONE DEVICE IS ALLOCATED TO THIS      26650000
                                    848+*                             DATA SET                                  26700000
                            00040   849+DCBUPDCM EQU   DCBBIT1 -      UPDATE COMPLETE, FREE OLD DEB             26750000
                            00030   850+DCBUPDBT EQU   DCBBIT2+DCBBIT3 - UPDATE BITS                            26800000
                            00020   851+DCBUPDT  EQU   DCBBIT2 -      UPDATE TO TAKE PLACE                      26850000
                            00030   852+DCBNUPD  EQU   DCBBIT2+DCBBIT3 - NO UPDATE TO TAKE PLACE                26900000
                            00010   853+DCBSVDEB EQU   DCBBIT3 -      OLD DEB ADDRESS MUST BE SAVED             26950000
00001D                              854+DCBIOBAA DS    0AL3 -         SAME AS DCBIOBAD ABOVE                    27000000
00001D                              855+DCBODEBA DS    AL3 -          ADDRESS OF OLD DEB                        27050000
000020                      0001C   856+         ORG   IHADCB+28                                                27100000
00001C                              857+DCBSVCXL DS    0A -           SAME AS DCBSVCXA BELOW                    27150000
00001C                              858+         DS    X -            RESERVED                                  27200000
00001D                              859+DCBSVCXA DS    AL3 -          POINTER TO EXIT LIST OF JES               27250000
                                    860+*                             C.I. INTERFACE CONTROL SVC                27300000

                                    862+*********************************************************************** 27351000
                                    863+*                       FOUNDATION EXTENSION                            27400000
                                    864+*********************************************************************** 27401000

000020                              866+DCBEODAD DS    0A -           SAME AS DCBEODA BELOW                     27500000
000020                              867+DCBHIARC DS    0BL1 -         HIERARCHY BITS                            27550000
000020                              868+DCBBFTEK DS    0BL1 -         BUFFERING TECHNIQUE BITS                  27600000
000020                              869+DCBBFALN DS    BL1 -          BUFFER ALIGNMENT BITS                     27650000
                            00080   870+DCBH1    EQU   DCBBIT0 -      HIERARCHY 1 MAIN STORAGE - BIT 5 IS ZERO  27700000
                            00070   871+DCBBFT   EQU   DCBBIT1+DCBBIT2+DCBBIT3 BUFFERING TECHNIQUE              27750000
                            00060   872+DCBBFTA  EQU   DCBBIT1+DCBBIT2 - QSAM LOCATE MODE PROCESSING OF SPANNED 27800000
GETPDS   SUBROUTINE TO READ PARTITIONED DATASET MEMBERS         - PROGRAM CODE                                 PAGE   21


  LOC  OBJECT CODE    ADDR1 ADDR2  STMT   SOURCE STATEMENT                                       ASM 0201 08.54 04/06/23

                                    873+*                             RECORDS - OPEN IS TO CONSTRUCT A RECORD   27850000
                                    874+*                             AREA IF IT AUTOMATICALLY CONSTRUCTS       27900000
                                    875+*                             BUFFERS                                   27950000
                            00020   876+DCBBFTR  EQU   DCBBIT2 -      FOR BSAM CREATE BDAM PROCESSING OF        28000000
                                    877+*                             UNBLOCKED SPANNED RECORDS - SOFTWARE      28050000
                                    878+*                             TRACK OVERFLOW.  FOR BSAM INPUT           28100000
                                    879+*                             PROCESSING OF UNBLOCKED SPANNED RECORDS   28150000
                                    880+*                             WITH KEYS - RECORD OFFSET PROCESSING.     28200000
                            00040   881+DCBBFTS  EQU   DCBBIT1 -      SIMPLE BUFFERING - BIT 3 IS ZERO          28250000
                            00020   882+DCBBFTKR EQU   DCBBIT2 -      UNBLOCKED SPANNED RECORDS - SOFTWARE      28300000
                                    883+*                             TRACK OVERFLOW (BDAM)                     28350000
                            00010   884+DCBBFTE  EQU   DCBBIT3 -      EXCHANGE BUFFERING - BIT 1 IS ZERO        28400000
                            00008   885+DCBBFTKD EQU   DCBBIT4 -      DYNAMIC BUFFERING (BTAM)                  28450000
                            00004   886+DCBH0    EQU   DCBBIT5 -      HIERARCHY 0 MAIN STORAGE - BIT 0 IS ZERO  28500000
                            00003   887+DCBBFA   EQU   DCBBIT6+DCBBIT7 - BUFFER ALIGNMENT                       28550000
                            00002   888+DCBBFAD  EQU   DCBBIT6 -      DOUBLEWORD BOUNDARY                       28600000
                            00001   889+DCBBFAF1 EQU   DCBBIT7 -      FULLWORD NOT A DOUBLEWORD BOUNDARY,       28650000
                                    890+*                             CODED IN DCB MACRO INSTRUCTION            28700000
                            00003   891+DCBBFAF2 EQU   DCBBIT6+DCBBIT7 - FULLWORD NOT A DOUBLEWORD BOUNDARY,    28750000
                                    892+*                             CODED IN DCB MACRO INSTRUCTION            28800000
000021                              893+DCBEODA  DS    AL3 -          ADDRESS OF A USER-PROVIDED ROUTINE TO     28850000
                                    894+*                             HANDLE END-OF-DATA CONDITIONS             28900000
000024                              895+DCBEXLST DS    0A -           ADDRESS OF USER-PROVIDED LIST OF EXITS    28950000
000024                              896+DCBRECFM DS    BL1 -          RECORD FORMAT                             29000000
                            000E0   897+DCBRECLA EQU   DCBBIT0+DCBBIT1+DCBBIT2 RECORD LENGTH INDICATOR - ASCII  29050000
                            00020   898+DCBRECD  EQU   DCBBIT2 -      ASCII VARIABLE RECORD LENGTH              29100000
                            000C0   899+DCBRECL  EQU   DCBBIT0+DCBBIT1 - RECORD LENGTH INDICATOR                29150000
                            00080   900+DCBRECF  EQU   DCBBIT0 -      FIXED RECORD LENGTH                       29200000
                            00040   901+DCBRECV  EQU   DCBBIT1 -      VARIABLE RECORD LENGTH                    29250000
                            000C0   902+DCBRECU  EQU   DCBBIT0+DCBBIT1 - UNDEFINED RECORD LENGTH                29300000
                            00020   903+DCBRECTO EQU   DCBBIT2 -      TRACK OVERFLOW                            29350000
                            00010   904+DCBRECBR EQU   DCBBIT3 -      BLOCKED RECORDS                           29400000
                            00008   905+DCBRECSB EQU   DCBBIT4 -      FOR FIXED LENGTH RECORD FORMAT - STANDARD 29450000
                                    906+*                             BLOCKS.  FOR VARIABLE LENGTH RECORD       29500000
                                    907+*                             FORMAT - SPANNED RECORDS                  29550000
                            00006   908+DCBRECCC EQU   DCBBIT5+DCBBIT6 - CONTROL CHARACTER INDICATOR            29600000
                            00004   909+DCBRECCA EQU   DCBBIT5 -      ASA CONTROL CHARACTER                     29650000
                            00002   910+DCBRECCM EQU   DCBBIT6 -      MACHINE CONTROL CHARACTER                 29700000
                            00000   911+DCBRECC  EQU   X'00' -        NO CONTROL CHARACTER                      29750000
                            00001   912+DCBRECKL EQU   DCBBIT7 -      KEY LENGTH (KEYLEN) WAS SPECIFIED IN DCB  29800000
                                    913+*                             MACRO INSTRUCTION                         29850000
000025                              914+DCBEXLSA DS    AL3 -          ADDRESS OF USER-PROVIDED LIST OF EXITS    29900000


                                    917+*********************************************************************** 47139200
                                    918+*                       FOUNDATION BEFORE OPEN                          47150000
                                    919+*********************************************************************** 47151000

000028                      00028   921+         ORG   IHADCB+40                                                47250000
000028                              922+DCBDDNAM DS    CL8 -          NAME ON THE DD STATEMENT WHICH DEFINES    47300000
                                    923+*                             THE DATA SET ASSOCIATED WITH THIS DCB     47350000
000030                              924+DCBOFLGS DS    BL1 -          FLAGS USED BY OPEN ROUTINE                47400000
                            00080   925+DCBOFLWR EQU   DCBBIT0 -      IF ZERO, LAST I/O OPERATION WAS READ OR   47450000
                                    926+*                             POINT.  IF ONE, LAST I/O OPERATION WAS    47500000
                                    927+*                             WRITE.                                    47550000
GETPDS   SUBROUTINE TO READ PARTITIONED DATASET MEMBERS         - PROGRAM CODE                                 PAGE   22


  LOC  OBJECT CODE    ADDR1 ADDR2  STMT   SOURCE STATEMENT                                       ASM 0201 08.54 04/06/23

                            00080   928+DCBOFIOD EQU   DCBBIT0 -      DATA SET IS BEING OPENED FOR INPUT OR     47600000
                                    929+*                             OUTPUT (BDAM)                             47650000
                            00040   930+DCBOFLRB EQU   DCBBIT1 -      LAST I/O OPERATION WAS IN READ BACKWARD   47700000
                                    931+*                             MODE                                      47750000
                            00020   932+DCBOFEOV EQU   DCBBIT2 -      SET TO 1 BY EOV WHEN IT CALLS CLOSE       47800000
                                    933+*                             ROUTINE FOR CONCATENATION OF DATA SETS    47850000
                                    934+*                             WITH UNLIKE ATTRIBUTES                    47900000
                            00010   935+DCBOFOPN EQU   DCBBIT3 -      AN OPEN HAS BEEN SUCCESSFULLY COMPLETED   47950000
                            00008   936+DCBOFPPC EQU   DCBBIT4 -      SET TO 1 BY PROBLEM PROGRAM TO INDICATE A 48000000
                                    937+*                             CONCATENATION OF UNLIKE ATTRIBUTES        48050000
                            00004   938+DCBOFTM  EQU   DCBBIT5 -      TAPE MARK HAS BEEN READ                   48100000
                            00002   939+DCBOFUEX EQU   DCBBIT6 -      SET TO 0 BY AN I/O SUPPORT FUNCTION WHEN  48150000
                                    940+*                             THAT FUNCTION TAKES A USER EXIT. SET TO 1 48200000
                                    941+*                             ON RETURN FROM USER EXIT TO THE I/O       48250000
                                    942+*                             SUPPORT FUNCTION WHICH TOOK THE EXIT.     48300000
                            00001   943+DCBOFIOF EQU   DCBBIT7 -      SET TO 1 BY AN I/O SUPPORT FUNCTION IF    48350000
                                    944+*                             DCB IS TO BE PROCESSED BY THAT FUNCTION   48400000
000031                              945+DCBIFLG  DS    BL1 -          FLAGS USED BY IOS IN COMMUNICATING ERROR  48450000
                                    946+*                             CONDITIONS AND IN DETERMINING CORRECTIVE  48500000
                                    947+*                             PROCEDURES                                48550000
                            000C0   948+DCBIBEC  EQU   DCBBIT0+DCBBIT1 - ERROR CORRECTION INDICATOR             48600000
                            00000   949+DCBIFNEP EQU   X'00' -        NOT IN ERROR PROCEDURE                    48650000
                            00040   950+DCBEX    EQU   DCBBIT1 -      ERROR CORRECTION OR IOS PAGE FIX IN       48700000
                                    951+*                             PROCESS                                   48750000
                            000C0   952+DCBIFPEC EQU   DCBBIT0+DCBBIT1 - PERMANENT ERROR CORRECTION             48800000
                            00030   953+DCBIBPCT EQU   DCBBIT2+DCBBIT3 - PRINTER CARRIAGE TAPE PUNCH INDICATOR  48850000
                            00020   954+DCBIFC9  EQU   DCBBIT2 -      CHANNEL 9 PRINTER CARRIAGE TAPE PUNCH     48900000
                                    955+*                             SENSED                                    48950000
                            00010   956+DCBIFC12 EQU   DCBBIT3 -      CHANNEL 12 PRINTER CARRIAGE TAPE PUNCH    49000000
                                    957+*                             SENSED                                    49050000
                            0000C   958+DCBIBIOE EQU   DCBBIT4+DCBBIT5 - IOS ERROR ROUTINE USE INDICATOR        49100000
                            00000   959+DCBIFER  EQU   X'00' -        ALWAYS USE I/O SUPERVISOR ERROR ROUTINE   49150000
                            00004   960+DCBIFNE1 EQU   DCBBIT5 -      NEVER USE I/O SUPERVISOR ERROR ROUTINE    49200000
                            00004   961+DCBIFTIM EQU   DCBBIT5 -      TEST IOS MASK (IMSK) FOR ERROR PROCEDURE  49250000
                                    962+*                             (BTAM)                                    49300000
                            00008   963+DCBIFNE2 EQU   DCBBIT4 -      NEVER USE I/O SUPERVISOR ERROR ROUTINE    49350000
                            0000C   964+DCBIFNE3 EQU   DCBBIT4+DCBBIT5 - NEVER USE I/O SUPERVISOR ERROR ROUTINE 49400000
000032                              965+DCBMACR  DS    0BL2 -         MACRO INSTRUCTION REFERENCE               49450000
000032                              966+DCBMACR1 DS    BL1 -          FIRST BYTE OF DCBMACR                     49500000
                            00080   967+DCBMRECP EQU   DCBBIT0 -      EXECUTE CHANNEL PROGRAM (EXCP) ---        49550000
                                    968+*                             ALWAYS ZERO (BSAM, QSAM, BPAM, BISAM,     49600000
                                    969+*                             QISAM, BDAM) --- RESERVED (QTAM, BTAM)    49650000
                            00040   970+DCBMRFE  EQU   DCBBIT1 -      FOUNDATION EXTENSION IS PRESENT (EXCP)    49700000
                            00040   971+DCBMRGET EQU   DCBBIT1 -      GET (QSAM, QISAM, TCAM)                   49750000
                            00040   972+DCBMRPTQ EQU   DCBBIT1 -      PUT FOR MESSAGE GROUP (QTAM) ---          49800000
                                    973+*                             ALWAYS ZERO (BSAM, BPAM, BISAM, BDAM) --- 49850000
                                    974+*                             RESERVED (BTAM)                           49900000
                            00020   975+DCBMRAPG EQU   DCBBIT2 -      APPENDAGES ARE REQUIRED (EXCP)            49950000
                            00020   976+DCBMRRD  EQU   DCBBIT2 -      READ (BSAM, BPAM, BISAM, BDAM, BTAM)      50000000
                            00020   977+DCBMRWRQ EQU   DCBBIT2 -      WRITE FOR LINE GROUP (QTAM) ---           50050000
                                    978+*                             ALWAYS ZERO (QSAM, QISAM)                 50100000
                            00010   979+DCBMRCI  EQU   DCBBIT3 -      COMMON INTERFACE (EXCP)                   50150000
                            00010   980+DCBMRMVG EQU   DCBBIT3 -      MOVE MODE OF GET (QSAM, QISAM)            50200000
                            00010   981+DCBMRRDK EQU   DCBBIT3 -      KEY SEGMENT WITH READ (BDAM) ---          50250000
                                    982+*                             ALWAYS ZERO (BISAM) ---                   50300000
GETPDS   SUBROUTINE TO READ PARTITIONED DATASET MEMBERS         - PROGRAM CODE                                 PAGE   23


  LOC  OBJECT CODE    ADDR1 ADDR2  STMT   SOURCE STATEMENT                                       ASM 0201 08.54 04/06/23

                                    983+*                             RESERVED (BSAM, BPAM, QTAM, BTAM)         50350000
                            00008   984+DCBMRLCG EQU   DCBBIT4 -      LOCATE MODE OF GET (QSAM, QISAM)          50400000
                            00008   985+DCBMRRDI EQU   DCBBIT4 -      ID ARGUMENT WITH READ (BDAM) ---          50450000
                                    986+*                             ALWAYS ZERO (BISAM) ---                   50500000
                                    987+*                             RESERVED (EXCP, BSAM, BPAM, QTAM, BTAM)   50550000
                            00004   988+DCBMRABC EQU   DCBBIT5 -      USER'S PROGRAM MAINTAINS ACCURATE BLOCK   50600000
                                    989+*                             COUNT (EXCP)                              50650000
                            00004   990+DCBMRPT1 EQU   DCBBIT5 -      POINT (WHICH IMPLIES NOTE) (BSAM, BPAM)   50700000
                            00004   991+DCBMRSBG EQU   DCBBIT5 -      SUBSTITUTE MODE OF GET (QSAM)             50750000
                            00004   992+DCBMRDBF EQU   DCBBIT5 -      DYNAMIC BUFFERING (BISAM, BDAM) ---       50800000
                                    993+*                             ALWAYS ZERO (QISAM) ---                   50850000
                                    994+*                             RESERVED (QTAM, BTAM)                     50900000
                            00002   995+DCBPGFXA EQU   DCBBIT6 -      PAGE FIX APPENDAGE IS SPECIFIED (EXCP)    50950000
                            00002   996+DCBMRCRL EQU   DCBBIT6 -      CNTRL (BSAM, QSAM)                        51000000
                            00002   997+DCBMRCHK EQU   DCBBIT6 -      CHECK (BISAM)                             51050000
                            00002   998+DCBMRRDX EQU   DCBBIT6 -      READ EXCLUSIVE (BDAM) ---                 51100000
                                    999+*                             RESERVED (BPAM, QISAM, QTAM, BTAM)        51150000
                            00001  1000+DCBMRDMG EQU   DCBBIT7 -      DATA MODE OF GET (QSAM)                   51200000
                            00001  1001+DCBMRCK  EQU   DCBBIT7 -      CHECK (BDAM) --- RESERVED (EXCP, BSAM,    51250000
                                   1002+*                             BPAM, BISAM, QISAM, QTAM, BTAM)           51300000
000033                             1003+DCBMACR2 DS    BL1 -          SECOND BYTE OF DCBMACR                    51350000
                            00080  1004+DCBMRSTL EQU   DCBBIT0 -      SETL (QISAM) --- ALWAYS ZERO (BSAM, QSAM, 51400000
                                   1005+*                             BPAM, BISAM, BDAM) ---                    51450000
                                   1006+*                             RESERVED (EXCP, QTAM, BTAM)               51500000
                            00040  1007+DCBMRPUT EQU   DCBBIT1 -      PUT (QSAM, TCAM) - PUT OR PUTX (QISAM)    51550000
                            00040  1008+DCBMRGTQ EQU   DCBBIT1 -      GET FOR MESSAGE GROUP (QTAM) ---          51600000
                                   1009+*                             ALWAYS ZERO (BSAM, BPAM, BISAM, BDAM) --- 51650000
                                   1010+*                             RESERVED (EXCP, BTAM)                     51700000
                            00020  1011+DCBMRWRT EQU   DCBBIT2 -      WRITE (BSAM, BPAM, BISAM, BDAM, BTAM)     51750000
                            00020  1012+DCBMRRDQ EQU   DCBBIT2 -      READ FOR LINE GROUP (QTAM) ---            51800000
                                   1013+*                             ALWAYS ZERO (QSAM, QISAM) ---             51850000
                                   1014+*                             RESERVED (EXCP)                           51900000
                            00010  1015+DCBMRMVP EQU   DCBBIT3 -      MOVE MODE OF PUT (QSAM, QISAM)            51950000
                            00010  1016+DCBMRWRK EQU   DCBBIT3 -      KEY SEGMENT WITH WRITE (BDAM) ---         52000000
                                   1017+*                             ALWAYS ZERO (BISAM) ---                   52050000
                                   1018+*                             RESERVED (EXCP, BSAM, BPAM, QTAM, BTAM)   52100000
                            00008  1019+DCBMR5WD EQU   DCBBIT4 -      FIVE-WORD DEVICE INTERFACE (EXCP)         52150000
                            00008  1020+DCBMRLDM EQU   DCBBIT4 -      LOAD MODE BSAM (CREATE BDAM DATA SET)     52200000
                                   1021+*                             (BSAM)                                    52250000
                            00008  1022+DCBMRLCP EQU   DCBBIT4 -      LOCATE MODE OF PUT (QSAM, QISAM)          52300000
                            00008  1023+DCBMRIDW EQU   DCBBIT4 -      ID ARGUMENT WITH WRITE (BDAM) ---         52350000
                                   1024+*                             ALWAYS ZERO (BISAM) ---                   52400000
                                   1025+*                             RESERVED (BPAM, QTAM, BTAM)               52450000
                            00004  1026+DCBMR4WD EQU   DCBBIT5 -      FOUR-WORD DEVICE INTERFACE (EXCP)         52500000
                            00004  1027+DCBMRPT2 EQU   DCBBIT5 -      POINT (WHICH IMPLIES NOTE) (BSAM, BPAM)   52550000
                            00004  1028+DCBMRTMD EQU   DCBBIT5 -      SUBSTITUTE MODE (QSAM)                    52600000
                            00004  1029+DCBMRUIP EQU   DCBBIT5 -      UPDATE IN PLACE (PUTX) (QISAM) ---        52650000
                                   1030+*                             ALWAYS ZERO (BISAM) ---                   52700000
                                   1031+*                             RESERVED (BDAM, QTAM, BTAM)               52750000
                            00002  1032+DCBMR3WD EQU   DCBBIT6 -      THREE-WORD DEVICE INTERFACE (EXCP)        52800000
                            00002  1033+DCBMRCTL EQU   DCBBIT6 -      CNTRL (BSAM, QSAM)                        52850000
                            00002  1034+DCBMRSTK EQU   DCBBIT6 -      SETL BY KEY (QISAM)                       52900000
                            00002  1035+DCBMRAWR EQU   DCBBIT6 -      ADD TYPE OF WRITE (BDAM) ---              52950000
                                   1036+*                             ALWAYS ZERO (BISAM) ---                   53000000
                                   1037+*                             RESERVED (BPAM, QTAM, BTAM)               53050000
GETPDS   SUBROUTINE TO READ PARTITIONED DATASET MEMBERS         - PROGRAM CODE                                 PAGE   24


  LOC  OBJECT CODE    ADDR1 ADDR2  STMT   SOURCE STATEMENT                                       ASM 0201 08.54 04/06/23

                            00001  1038+DCBMR1WD EQU   DCBBIT7 -      ONE-WORD DEVICE INTERFACE (EXCP)          53100000
                            00001  1039+DCBMRSWA EQU   DCBBIT7 -      USER'S PROGRAM HAS PROVIDED A SEGMENT     53150000
                                   1040+*                             WORK AREA POOL (BSAM CREATE BDAM, BDAM)   53200000
                            00001  1041+DCBMRDMD EQU   DCBBIT7 -      DATA MODE (QSAM)                          53250000
                            00001  1042+DCBMRSTI EQU   DCBBIT7 -      SETL BY ID (QISAM) ---                    53300000
                                   1043+*                             ALWAYS ZERO (BISAM) ---                   53350000
                                   1044+*                             RESERVED (BPAM, QTAM, BTAM)               53400000

                                   1046+*********************************************************************** 53451000
                                   1047+*                       FOUNDATION AFTER OPEN                           53500000
                                   1048+*********************************************************************** 53501000

000034                      00028  1050+         ORG   IHADCB+40                                                53600000
000028                             1051+DCBTIOT  DS    H -            OFFSET FROM TIOT ORIGIN TO TIOELNGH FIELD 53650000
                                   1052+*                             IN TIOT ENTRY FOR DD STATEMENT ASSOCIATED 53700000
                                   1053+*                             WITH THIS DCB                             53750000
00002A                             1054+DCBMACRF DS    0BL2 -         SAME AS DCBMACR BEFORE OPEN               53800000
00002A                             1055+DCBMACF1 DS    BL1 -          FIRST BYTE OF DCBMACRF                    53850000
00002B                             1056+DCBMACF2 DS    BL1 -          SECOND BYTE OF DCBMACRF                   53900000
00002C                             1057+DCBDEBAD DS    0A -           ADDRESS OF ASSOCIATED DEB                 53950000
00002C                             1058+DCBIFLGS DS    BL1 -          SAME AS DCBIFLG BEFORE OPEN               54000000
                            000C0  1059+DCBIFEC  EQU   DCBBIT0+DCBBIT1 - ERROR CORRECTION INDICATOR             54050000
                            00030  1060+DCBIFPCT EQU   DCBBIT2+DCBBIT3 - PRINTER CARRIAGE TAPE PUNCH INDICATOR  54100000
                            0000C  1061+DCBIFIOE EQU   DCBBIT4+DCBBIT5 - IOS ERROR ROUTINE USE INDICATOR        54150000
                            00002  1062+DCBIFLDT EQU   DCBBIT6 -      3800 PRINTER LOST DATA INDICATOR @G38ESMH 54175000
00002D                             1063+DCBDEBA  DS    AL3 -          ADDRESS OF ASSOCIATED DEB                 54200000

000030                      00030  1065+         ORG   IHADCB+48                                                54350000
000030                             1066+DCBREAD  DS    0A -           ADDRESS OF READ MODULE                    54400000
000030                             1067+DCBWRITE DS    0A -           ADDRESS OF WRITE MODULE          @ZA11086 54450000
000030                             1068+DCBOFLG  DS    BL1            SAME AS DCBOFLGS BEFORE OPEN     @ZA11086 54460000
000031                             1069+DCBREADA DS    0AL3           ADDRESS OF READ MODULE           @ZA11086 54470000
000031                             1070+DCBWRITA DS    AL3            ADDRESS OF WRITE MODULE          @ZA11086 54480000



                                   1074+*********************************************************************** 77701000
                                   1075+*                       QSAM-BSAM-BPAM COMMON INTERFACE                 77750000
                                   1076+*********************************************************************** 77751000

000034                      00034  1078+         ORG   IHADCB+52                                                77850000
000034                             1079+DCBGERR  DS    0A -           ADDRESS OF SYNCHRONIZING ROUTINE FOR GET  77950000
000034                             1080+DCBPERR  DS    0A -           ADDRESS OF SYNCHRONIZING ROUTINE FOR PUT  78000000
000034                             1081+DCBCHECK DS    0A -           ADDRESS OF CHECK MODULE                   78050000
000034                             1082+DCBOPTCD DS    BL1 -          OPTION CODES                              78150000
                            00080  1083+DCBOPTW  EQU   DCBBIT0 -      WRITE VALIDITY CHECK (DASD)               78500000
                                   1084+*                             (BSAM, BPAM, QSAM, ISAM, BDAM)            78550000
                            00040  1085+DCBOPTU  EQU   DCBBIT1 -      ALLOW DATA CHECK CAUSED BY INVALID        78600000
                                   1086+*                             CHARACTER (1403 PRINTER WITH UCS FEATURE) 78650000
                                   1087+*                             (BSAM, BPAM, QSAM)                        78700000
                                   1088+*                             MSS WINDOW PROCESSING REQUESTED  @ZA37313 78710000
                                   1089+*                             (BSAM, QSAM)                     @ZA37313 78720000
                            00020  1090+DCBOPTC  EQU   DCBBIT2 -      CHAINED SCHEDULING USING PCI              78750000
                                   1091+*                             (BSAM, BPAM, QSAM)                        78800000
                            00010  1092+DCBOPTH  EQU   DCBBIT3 -      1287/1288 OPTICAL READER - HOPPER EMPTY   78850000
GETPDS   SUBROUTINE TO READ PARTITIONED DATASET MEMBERS         - PROGRAM CODE                                 PAGE   25


  LOC  OBJECT CODE    ADDR1 ADDR2  STMT   SOURCE STATEMENT                                       ASM 0201 08.54 04/06/23

                                   1093+*                             EXIT (BSAM, BPAM)                         78900000
                                   1094+*                             PDS STAGING ON MSS REQUEST(BPAM) @ZA36508 78920000
                            00010  1095+DCBOPTO  EQU   DCBBIT3 -      1285/1287 OPTICAL READER - ON-LINE        78950000
                                   1096+*                             CORRECTION (QSAM)                         79000000
                            00010  1097+DCBBCKPT EQU   DCBBIT3 -      CHANNEL-END APPENDAGE IS TO BYPASS DOS    79050000
                                   1098+*                             EMBEDDED CHECKPOINT RECORDS ON TAPE       79100000
                                   1099+*                             (BSAM, QSAM)                              79150000
                            00008  1100+DCBOPTQ  EQU   DCBBIT4 -      TRANSLATION TO OR FROM ASCII              79200000
                                   1101+*                             (BSAM, BPAM, QSAM)                        79250000
                            00004  1102+DCBOPTZ  EQU   DCBBIT5 -      MAGNETIC TAPE DEVICES - USE REDUCED ERROR 79300000
                                   1103+*                             RECOVERY PROCEDURE (EXCP, BSAM, BPAM,     79350000
                                   1104+*                             QSAM)                                     79400000
                            00004  1105+DCBSRCHD EQU   DCBBIT5 -      USE SEARCH DIRECT, INSTEAD OF SEARCH      79450000
                                   1106+*                             PREVIOUS, ON RECORD POSITION SENSING      79500000
                                   1107+*                             DEVICE  (EXCP, BSAM, BPAM, QSAM)          79550000
                            00002  1108+DCBOPTT  EQU   DCBBIT6 -      USER TOTALING (BSAM, QSAM)                79600000
                                   1109+*                                                                       79610000
                                   1110+*                                                                       79620000
                            00001  1111+DCBOPTJ  EQU   DCBBIT7        3800 PRINTER, OPTCD=J; (DYNAMIC  @Z40MSRZ 79630000
                                   1112+*                             SELECT OF TRANSLATE TABLES)      @Z40MSRZ 79640000
000035                             1113+DCBGERRA DS    0AL3 -         ADDRESS OF SYNCHRONIZING ROUTINE FOR GET  79700000
000035                             1114+DCBPERRA DS    0AL3 -         ADDRESS OF SYNCHRONIZING ROUTINE FOR PUT  79750000
000035                             1115+DCBCHCKA DS    AL3 -          ADDRESS OF CHECK MODULE                   79800000
000038                             1116+DCBSYNAD DS    0A -           ADDRESS OF USER-PROVIDED SYNAD ROUTINE    80050000
000038                             1117+DCBIOBL  DS    FL1 -          IOB LENGTH IN DOUBLE WORDS                80100000
000039                             1118+DCBSYNA  DS    AL3 -          ADDRESS OF USER-PROVIDED SYNAD ROUTINE    80150000
00003C                             1119+DCBFLAG1 DS    0BL1 -         TCAM APPLICATION PROGRAM FLAGS            80460000
                                   1120+*                             (BSAM, BPAM, QSAM)                        80470000
00003C                             1121+DCBCIND1 DS    BL1 -          CONDITION INDICATORS                      80500000
                            00080  1122+DCBCNTOV EQU   DCBBIT0 -      DIRECT ACCESS - TRACK OVERFLOW IN USE     80550000
                                   1123+*                             (BSAM, BPAM, QSAM)                        80600000
                                   1124+*                             2540 CARD PUNCH - DATA SET WAS OPENED BUT 80650000
                                   1125+*                             NO DATA WAS WRITTEN (QSAM)                80700000
                            00080  1126+DCBSTQCK EQU   DCBBIT0 -      STOP EQUAL QUICK WAS SPECIFIED FOR        80710000
                                   1127+*                             APPLICATION PROG. DCBS (TCAM)             80720000
                            00040  1128+DCBSTFLS EQU   DCBBIT1 -      STOP EQUAL FLUSH WAS SPECIFIED FOR        80730000
                                   1129+*                             APPLICATION PROG. DCBS (TCAM)             80740000
                            00040  1130+DCBCNSRD EQU   DCBBIT1 -      SEARCH DIRECT (BSAM, BPAM, QSAM)          80750000
                            00020  1131+DCBCNEVB EQU   DCBBIT2 -      END OF VOLUME - USED BY EOB ROUTINES      80800000
                                   1132+*                             (BSAM, BPAM, QSAM)                        80850000
                            00010  1133+DCBCNEVA EQU   DCBBIT3 -      END OF VOLUME - USED BY CHANNEL-END       80900000
                                   1134+*                             APPENDAGE ROUTINES (BSAM, BPAM, QSAM)     80950000
                            00004  1135+DCBCNBRM EQU   DCBBIT5 -      BLOCKED RECORD BIT MODIFIED (BSAM,BPAM,   81000000
                                   1136+*                             QSAM)                                     81050000
                            00001  1137+DCBCNEXB EQU   DCBBIT7 -      EXCHANGE BUFFERING SUPPORTED (QSAM)       81100000
00003D                             1138+DCBCIND2 DS    BL1 -          CONDITION INDICATORS                      81150000
                            00080  1139+DCBCNSTO EQU   DCBBIT0 -      PARTITIONED DATA SET - STOW HAS BEEN      81200000
                                   1140+*                             PERFORMED (BSAM, BPAM, QSAM)              81250000
                                   1141+*                             SEQUENTIAL DATA SET - UPDATE (BSAM, BPAM) 81300000
                            00040  1142+DCBCNWR0 EQU   DCBBIT1 -      DIRECT ORGANIZATION DATA SET - LAST I/O   81350000
                                   1143+*                             WAS A WRITE RECORD ZERO                   81400000
                                   1144+*                             (BSAM, BPAM, QSAM)                        81450000
                                   1145+*                             SEQUENTIAL DATA SET - UPDATE EOF IS       81500000
                                   1146+*                             INDICATED (BSAM, BPAM)                    81550000
                            00020  1147+DCBCNCLO EQU   DCBBIT2 -      CLOSE IN PROCESS (QSAM)                   81600000
GETPDS   SUBROUTINE TO READ PARTITIONED DATASET MEMBERS         - PROGRAM CODE                                 PAGE   26


  LOC  OBJECT CODE    ADDR1 ADDR2  STMT   SOURCE STATEMENT                                       ASM 0201 08.54 04/06/23

                            00010  1148+DCBCNIOE EQU   DCBBIT3 -      PERMANENT I/O ERROR (BSAM, BPAM, QSAM)    81650000
                            00008  1149+DCBCNBFP EQU   DCBBIT4 -      OPEN ACQUIRED BUFFER POOL                 81700000
                                   1150+*                             (BSAM, BPAM, QSAM)                        81750000
                            00004  1151+DCBCNCHS EQU   DCBBIT5 -      CHAINED SCHEDULING BEING SUPPORTED        81800000
                                   1152+*                             (BSAM, BPAM, QSAM)                        81850000
                            00002  1153+DCBCNFEO EQU   DCBBIT6 -      FEOV BIT (BSAM, BPAM, QSAM)               81900000
                            00001  1154+DCBCNQSM EQU   DCBBIT7 -      ALWAYS ZERO (BSAM, BPAM)                  81950000
                                   1155+*                             THIS IS A QSAM DCB (QSAM)                 82000000
00003E                             1156+DCBBLKSI DS    H -            MAXIMUM BLOCK SIZE                        82100000
000040                             1157+DCBWCPO  DS    AL1 -          OFFSET OF WRITE CHANNEL PROGRAM FROM THE  82350000
                                   1158+*                             START OF IOB                              82400000
000041                             1159+DCBWCPL  DS    FL1 -          LENGTH OF WRITE CHANNEL PROGRAM           82450000
000042                             1160+DCBOFFSR DS    AL1 -          OFFSET OF READ CCW FROM BSAM/BPAM PREFIX  82500000
                                   1161+*                             OF IOB                                    82550000
000043                             1162+DCBOFFSW DS    AL1 -          OFFSET OF WRITE CCW FROM BSAM/BPAM PREFIX 82600000
                                   1163+*                             OF IOB                                    82650000
000044                             1164+DCBIOBA  DS    A -            FOR NORMAL SCHEDULING, ADDRESS OF QSAM OR 82700000
                                   1165+*                             BSAM/BPAM PREFIX OF IOB.  FOR CHAINED     82750000
                                   1166+*                             SCHEDULING, ADDRESS OF ICB.  FOR          82800000
                                   1167+*                             1419/1275, ADDRESS OF MAGNETIC INTERRUPT  82850000
                                   1168+*                             CONTROL BLOCK (MICB) CURRENTLY BEING      82900000
                                   1169+*                             PROCESSED BY READ ROUTINE.  FOR TSO       82950000
                                   1170+*                             TERMINAL DATA SET OPENED FOR INPUT AND    83000000
                                   1171+*                             FORMAT U, SIMULATED LOW-ORDER FOUR BYTES  83050000
                                   1172+*                             OF IOBCSW                                 83100000

000048                      00044  1174+         ORG   IHADCB+68                                                83160000
000044                             1175+DCBCICB  DS    0A -           SAME AS DCBCICBA BELOW                    83200000
000044                             1176+         DS    X -            DCBNCP  (BSAM,BPAM)                       83250000
000045                             1177+DCBCICBA DS    AL3 -          POINTER TO JES C.I.                       83300000
                                   1178+*                             CONTROL BLOCK (CICB)                      83350000

000048                      00050  1180+         ORG   IHADCB+80                                                83450000
000050                             1181+DCBDIRCT DS    0H -           NUMBER OF BYTES USED IN LAST DIRECTORY    83500000
                                   1182+*                             BLOCK (RANGE 0-254)  (BSAM, BPAM)         83550000
000050                             1183+DCBQSWS  DS    0BL1 -         FLAG BYTE                                 83600000
                            00004  1184+DCBPOPEN EQU   DCBBIT5 -      QSAM PARALLEL INPUT PROCESSING            83601000
000050                             1185+DCBUSASI DS    B -            FLAG BYTE FOR ASCII TAPES                 83650000
                            00040  1186+DCBBLBP  EQU   DCBBIT1 -      BLOCK PREFIX IS FOUR BYTE FIELD           83700000
                                   1187+*                             CONTAINING BLOCK LENGTH IN UNPACKED       83750000
                                   1188+*                             DECIMAL (SPECIFIED BY BUFFER=L).          83800000
                            00038  1189+DCBQADFS EQU   DCBBIT2+DCBBIT3+DCBBIT4 USED TO PERFORM SEQUENCE         83850000
                                   1190+*                             CHECKING WITH MULTIPLE FUNCTION SUPPORT   83900000
                                   1191+*                             FOR 3525 (BSAM, QSAM)                     83950000
                            00020  1192+DCBQADF1 EQU   DCBBIT2 -      FIRST BIT OF DCBQADFS                     84000000
                            00010  1193+DCBQADF2 EQU   DCBBIT3 -      SECOND BIT OF DCBQADFS                    84050000
                            00008  1194+DCBQADF3 EQU   DCBBIT4 -      THIRD BIT OF DCBQADFS                     84100000
                            00002  1195+DCB3525A EQU   DCBBIT6 -      DCB IS 3525 - ASSOCIATED DATA             84110000
                                   1196+*                             SETS EXIST                                84120000
                            00001  1197+DCBQSTRU EQU   DCBBIT7 -      TRUNC ENTRY POINT ENTERED (QSAM)          84150000
000051                             1198+DCBBUFOF DS    0FL1 -         BLOCK PREFIX LENGTH (0-99), SPECIFIED BY  84200000
                                   1199+*                             BUFOFF=N OR BUFOFF=L                      84250000
000051                             1200+DCBDIRCQ DS    FL1 -          NUMBER OF BYTES USED IN LAST DIRECTORY    84300000
                                   1201+*                             BLOCK (RANGE 0-254)  (QSAM)               84350000
GETPDS   SUBROUTINE TO READ PARTITIONED DATASET MEMBERS         - PROGRAM CODE                                 PAGE   27


  LOC  OBJECT CODE    ADDR1 ADDR2  STMT   SOURCE STATEMENT                                       ASM 0201 08.54 04/06/23

                                   1203+*********************************************************************** 84451000
                                   1204+*                       BSAM-BPAM INTERFACE                             84500000
                                   1205+*********************************************************************** 84501000

000052                      00048  1207+         ORG   IHADCB+72                                                84600000
000048                             1208+DCBEOBR  DS    0A -           ADDRESS OF END-OF-BLOCK MODULE FOR READ   84650000
000048                             1209+DCBNCP   DS    FL1 -          NUMBER OF CHANNEL PROGRAMS.               84750000
                                   1210+*                             NUMBER OF READ OR WRITE REQUESTS WHICH    85000000
                                   1211+*                             MAY BE ISSUED PRIOR TO A CHECK, NUMBER    85050000
                                   1212+*                             OF IOB'S GENERATED.  (99 MAXIMUM)         85100000
000049                             1213+DCBEOBRA DS    AL3 -          ADDRESS OF END-OF-BLOCK MODULE FOR READ   85150000
00004C                             1214+DCBEOBW  DS    A -            ADDRESS OF END-OF-BLOCK MODULE FOR WRITE. 85200000
                                   1215+*                             FOR BSAM CREATE BDAM PROCESSING OF        85250000
                                   1216+*                             UNBLOCKED SPANNED RECORDS WITH BKTEK=R    85300000
                                   1217+*                             SPECIFIED, ADDRESS OF SEGMENT WORK AREA   85350000
                                   1218+*                             CONTROL BLOCK                             85400000
000050                             1219+         DS    H -            DCBDIRCT - NUMBER OF BYTES USED IN LAST   85450000
                                   1220+*                             DIRECTORY BLOCK  (RANGE 0-254)            85500000
000052                             1221+DCBLRECL DS    H -            LOGICAL RECORD LENGTH                     85600000
000054                             1222+DCBCNTRL DS    0A -           ADDRESS OF CNTRL MODULE                   85850000
000054                             1223+DCBNOTE  DS    0A -           ADDRESS OF NOTE/POINT MODULE              85900000
000054                             1224+DCBPOINT DS    A -            ADDRESS OF NOTE/POINT MODULE              85950000

                                   1226 ***#INCLUDE PDSTATS.ASM
                                   1227          COPY PDSTATS
000000                             1228 PDSSTATS DSECT  ,                      MEMBER WITH ISPF USER DATA
                                   1229 *                                      OR THE RPF USER DATA
000000                             1230 PDSC     DS    C                       CONTROL DATA
000001                             1231 PDSVERS  DS    X                       ISPF/RPF VERSION
000002                             1232 PDSMOD   DS    X                           MOFIFICATION NUMBER
000003                             1233 PDSNULL  DS    2X                          NULLS (RECOGNIZE ISPF)
000005                             1234 PDSDATEC DS    PL4                         DATE CREATED
000009                             1235 PDSDATEU DS    PL4                         DATE UPDATED
00000D                             1236 PDSTIME  DS    XL2                         TIME LAST UPDATE
00000F                             1237 PDSRECU  DS    XL2                         CURRENT NUMBER OF LINES
000011                             1238 PDSRECI  DS    XL2                         INITIAL NUMBER OF LINES
000013                             1239 PDSRECM  DS    XL2                         RECORDS MODIFIED
000015                             1240 PDSUSER  DS    XL10                        USERID + 2 BLANKS
00001F                             1241          DS    CL2
                            00021  1242 PDSSTATL EQU   *-PDSSTATS
                                   1243          END
GETPDS                                            RELOCATION DICTIONARY                                        PAGE   28


POS.ID   REL.ID   FLAGS   ADDRESS                                                                ASM 0201 08.54 04/06/23

 0001     0001      08     00013D
 0001     0001      08     000161
 0001     0001      08     00025D
 0001     0001      08     000381
 0001     0002      0C     0005E0
 0001     0002      0C     0005E8
 0002     0002      0C     000684
GETPDS                                            CROSS-REFERENCE                                              PAGE   29


SYMBOL    LEN   VALUE   DEFN    REFERENCES                                                       ASM 0201 08.54 04/06/23

@GETDBUF 00002 0000071C 00573  00531 00532 00550 00561 00570
@GETDECB 00004 00000678 00545  00557
@GETDIR  00001 00000608 00513  00709
@GETDR1  00004 000006CC 00570  00525 00565 00707
@GETDR5  00004 000006D0 00571  00534 00535 00537
@GETDSAV 00004 000006D4 00572  00522 00523
@GETD22  00004 00000654 00535  00526
@GETD24  00004 000006B0 00562  00533
@GETD29  00004 000006BA 00565  00563
BLOCKEND 00004 000003CC 00696  00420 00432
BUFA     00004 000003C4 00694  00361 00389 00451
CENT20C  00004 000002F8 00602  00597
CENT20U  00004 00000314 00610  00605
CHECKU   00001 000002FC 00603  00601
COMM     00001 000000D4 00302  00298
DCBBIT0  00001 00000080 00741  00827 00835 00847 00870 00897 00899 00900 00902 00925 00928 00948 00952 00967 01004 01059
                               01083 01122 01126 01139
DCBBIT1  00001 00000040 00742  00828 00836 00849 00871 00872 00881 00897 00899 00901 00902 00930 00948 00950 00952 00970
                               00971 00972 01007 01008 01059 01085 01128 01130 01142 01186
DCBBIT2  00001 00000020 00743  00829 00837 00850 00851 00852 00871 00872 00876 00882 00897 00898 00903 00932 00953 00954
                               00975 00976 00977 01011 01012 01060 01090 01131 01147 01189 01192
DCBBIT3  00001 00000010 00744  00830 00850 00852 00853 00871 00884 00904 00935 00953 00956 00979 00980 00981 01015 01016
                               01060 01092 01095 01097 01133 01148 01189 01193
DCBBIT4  00001 00000008 00745  00838 00885 00905 00936 00958 00963 00964 00984 00985 01019 01020 01022 01023 01061 01100
                               01149 01189 01194
DCBBIT5  00001 00000004 00746  00839 00886 00908 00909 00938 00958 00960 00961 00964 00988 00990 00991 00992 01026 01027
                               01028 01029 01061 01102 01105 01135 01151 01184
DCBBIT6  00001 00000002 00747  00831 00887 00888 00891 00908 00910 00939 00995 00996 00997 00998 01032 01033 01034 01035
                               01062 01108 01153 01195
DCBBIT7  00001 00000001 00748  00832 00887 00889 00891 00912 00943 01000 01001 01038 01039 01041 01042 01111 01137 01154
                               01197
DCBBLKSI 00002 0000003E 01156  00356 00415 00450
DCBDSGPO 00001 00000002 00831  00343
DCBDSORG 00002 0000001A 00825  00343
DCBFDAD  00008 00000005 00768  00771
DCBIOBA  00004 00000044 01164  00416
DCBLRECL 00002 00000052 01221  00424
DCBOFLGS 00001 00000030 00924  00324 00341 00367 00383 00448 00466 00474
DCBOFOPN 00001 00000010 00935  00324 00341 00367 00383 00448 00466 00474
DCBRECBR 00001 00000010 00904  00345
DCBRECCA 00001 00000004 00909  00345
DCBRECF  00001 00000080 00900  00345
DCBRECFM 00001 00000024 00896  00345
DECB1    00004 000001C4 00397  00410
DOREAD   00001 00000040 00691  00377 00391 00421 00438
EOM      00001 00000080 00690  00376 00386 00442
EXMVC    00006 000003BA 00692  00429
FLAGS    00001 000003B8 00689  00376 00377 00386 00391 00421 00438 00442
GETPDS   00001 00000000 00244  00291 00574
GETPDSP  00004 00000008 00249  00248
IDP0001  00001 00000004 00253  00289
IDS0001  00001 00000042 00260  00284
ID10001  00004 0000000E 00251  00253 00260 00279
ID20001  00008 00000014 00255  00254
ID30001  00002 00000098 00262  00254
GETPDS                                            CROSS-REFERENCE                                              PAGE   30


SYMBOL    LEN   VALUE   DEFN    REFERENCES                                                       ASM 0201 08.54 04/06/23

ID40001  00001 0000008A 00279  00251
ID50001  00001 00000012 00252  00253
IHADCB   00001 00000000 00724  00304 00809 00856 00921 01050 01065 01078 01174 01180 01207
NCZ93205 00001 00000000 00291  00290
NOTPLI   00001 000000CC 00299  00292
NOTSTAT  00004 00000318 00611  00587 00589 00591 00593 00599 00607 00609
NUMTBL   00016 000003D4 00701  00586 00590
PDS      00004 00000360 00640  00303 00339 00353 00460 00508 00687 00688
PDSC     00001 00000000 01230  00580
PDSDATEC 00004 00000005 01234  00586 00588 00596 00598 00600 00602
PDSDATEU 00004 00000009 01235  00590 00592 00604 00606 00608 00610
PDSDDNAM 00004 00000388 00688  00333
PDSRELAD 00004 00000360 00687  00468
PDSSTATL 00001 00000021 01242  00579 00594
PDSSTATS 00001 00000000 01228  00576 00594 01242
PLIRC    00004 000003C0 00693  00301
P01      00002 00000110 00323  00309
P01GO    00001 00000136 00334  00332
P0105    00001 0000015A 00348  00344
P0110    00004 0000016A 00356  00346
P02      00002 0000017C 00366  00311
P03      00002 0000019E 00382  00313
P03EOM   00002 0000023A 00441  00418 00658
P0310    00004 00000214 00424  00392
P0320    00004 00000232 00438  00433
P04      00002 00000242 00447  00315
P05      00002 00000266 00465  00317
P06      00002 00000278 00473  00319
P06EOF   00001 00000320 00613  00512
P97      00006 00000324 00617  00362 00378 00436 00439 00462 00469 00581 00612
P98      00006 00000338 00623  00342 00375 00443 00614
P99      00006 0000034C 00629  00320 00325 00355 00368 00384 00387 00449 00467 00475
RECA     00004 000003C8 00695  00390 00435
R0       00001 00000000 00263  00356 00450 00528 00529
R1       00001 00000001 00264  00293 00300 00361 00416 00417 00511 00511 00521 00525 00528 00533 00561 00562 00564 00564
                               00565 00575 00577
R10      00001 0000000A 00273  00415 00417 00419 00420 00576 00577 00595
R11      00001 0000000B 00274  00287 00288
R12      00001 0000000C 00275  00303 00304 00568
R13      00001 0000000D 00276  00522 00523 00566 00566 00567 00568
R14      00001 0000000E 00277  00510 00527 00529 00530 00530 00530 00533 00567 00569
R15      00001 0000000F 00278  00307 00308 00310 00312 00314 00316 00318 00374 00374 00424 00428 00429 00430 00509 00510
                               00531 00532 00532
R2       00001 00000002 00265  00293 00294 00294 00300 00307 00519 00520 00568 00585 00611
R2SAVE   00004 000003D0 00700  00585 00611
R3       00001 00000003 00266  00295 00295 00331 00333 00521 00536 00540 00541 00542 00552 00556 00575
R4       00001 00000004 00267  00296 00296 00300 00540 00556 00578 00579 00579 00594 00595 00692
R5       00001 00000005 00268  00293 00297 00389 00419 00422 00451 00524 00534 00535
R6       00001 00000006 00269  00390 00422 00430 00430 00432 00435 00692
R7       00001 00000007 00270  00297 00301 00617 00623 00629
R8       00001 00000008 00271  00327 00328 00329 00329
SIGNTBL  00016 000004D4 00703  00588 00592
GETPDS                                            LITERAL CROSS-REFERENCE                                      PAGE   31


SYMBOL    LEN   VALUE   DEFN    REFERENCES                                                       ASM 0201 08.54 04/06/23

=CL8' '  00008 000005D8 00706  00331
=A(@GETDR1)
         00004 000005E0 00707  00327
=4X'00'  00001 000005E4 00708  00468
=A(@GETDIR)
         00004 000005E8 00709  00509
=F'0'    00004 000005EC 00710  00617
=F'4'    00004 000005F0 00711  00623
=F'8'    00004 000005F4 00712  00629
=H'0'    00002 000005F8 00713  00308
=H'4'    00002 000005FA 00714  00310
=H'8'    00002 000005FC 00715  00312
=H'12'   00002 000005FE 00716  00314
=H'1'    00002 00000600 00717  00316
=H'5'    00002 00000602 00718  00318
GETPDS                                            ASSEMBLER DIAGNOSTICS AND STATISTICS                         PAGE   32


                                                                                                 ASM 0201 08.54 04/06/23

NO STATEMENTS FLAGGED IN THIS ASSEMBLY
HIGHEST SEVERITY WAS    0
OPTIONS FOR THIS ASSEMBLY
  ALIGN, ALOGIC, BUFSIZE(STD), DECK, ESD, FLAG(0), LINECOUNT(55), LIST, NOMCALL, YFLAG, WORKSIZE(2097152)
  NOMLOGIC, NONUMBER, OBJECT, NORENT, RLD, NOSTMT, NOLIBMAC, NOTERMINAL, NOTEST, XREF(SHORT)
  SYSPARM()
WORK FILE BUFFER SIZE/NUMBER = 8702/ 1
TOTAL RECORDS READ FROM SYSTEM INPUT        469
TOTAL RECORDS READ FROM SYSTEM LIBRARY     9516
TOTAL RECORDS PUNCHED                        39
TOTAL RECORDS PRINTED                      1455

 F64-LEVEL LINKAGE EDITOR OPTIONS SPECIFIED XREF,LET,LIST,NCAL
          DEFAULT OPTION(S) USED -  SIZE=(98304,55296)
IEW0000     ALIAS NCZ93205
IEW0000     ALIAS GETPDSP



                                                CROSS REFERENCE TABLE


  CONTROL SECTION                       ENTRY

    NAME    ORIGIN  LENGTH                NAME   LOCATION     NAME   LOCATION     NAME   LOCATION     NAME   LOCATION
  GETPDS        00     604
                                        NCZ93205      00    GETPDSP        8
  @GETDIR      608     214




  LOCATION  REFERS TO SYMBOL  IN CONTROL SECTION             LOCATION  REFERS TO SYMBOL  IN CONTROL SECTION
      5E0            @GETDIR         @GETDIR                      5E8            @GETDIR         @GETDIR

 ENTRY ADDRESS       00

 TOTAL LENGTH       820
****GETPDS    DOES NOT EXIST BUT HAS BEEN ADDED TO DATA SET
****GETPDSP   IS AN ALIAS FOR THIS MEMBER
****NCZ93205  IS AN ALIAS FOR THIS MEMBER
AUTHORIZATION CODE IS         0.
  CB545 V2 LVL78 01MAY72                 IBM OS AMERICAN NATIONAL STANDARD COBOL                       DATE APR  6,2023


   1


00001          IDENTIFICATION DIVISION.
00002          PROGRAM-ID. PDSUNLDC.
00003          AUTHOR. ED LISS.
00004          DATE-WRITTEN. MARCH, 2010.
00005          DATE-COMPILED. APR  6,2023.
00006          REMARKS. THIS PROGRAM READS A PDS AND WRITES EACH MEMBER WITH
00007               AN ./ ADD SUITABLE FOR RELOADING USING IEBUPDTX OR
00008               IEBUPDTE.  THE './ ADD NAME=XXXXXXXX' IS GENERATED FOR
00009               EACH MEMBER.  IF A EXEC_CARD PARM IS PASSED, THE PARM
00010               IS APPENDED I.E.  './ ADD NAME=XXXXXXXX,PARM'.  USING
00011               THE PARM ENABLES UTILITY CONTROL STATEMENTS FOR
00012               IEBUPDTE OR IEBUPDTX TO BE GENERATED.
00013
00014               VERSION     DATE     COMMENTS
00015               -------   ---------  ---------------------------------
00016                1.0.0      03/2010  ORIGINAL VERSION
00017                1.1.0    06/17/2010 CHANGED SO ONLY NAME PARM
00018                                    IS GENERATED.  IF AN EXEC PARM
00019                                    IS PASSED, IT WILL BE ADDED TO
00020                                    THE ./ ADD NAME=,PARM
00021                1.2.0    03/21/2021 CLEANED UP CODE AND ADDED
00022                                    ISPF/RPF STATS TO REPORT.
00023
00024          ENVIRONMENT DIVISION.
00025          CONFIGURATION SECTION.
00026          SOURCE-COMPUTER. IBM-370.
00027          OBJECT-COMPUTER. IBM-370.
00028
00029          INPUT-OUTPUT SECTION.
00030          FILE-CONTROL.
00031              SELECT CARD-FILE   ASSIGN TO UT-S-CARDOUT.
00032              SELECT PRINT-FILE  ASSIGN TO UT-S-PRINTER.
00033
00034          DATA DIVISION.
00035          FILE SECTION.
00036          FD  CARD-FILE
00037              LABEL RECORDS ARE STANDARD
00038              RECORDING MODE IS F
00039              BLOCK CONTAINS 0 RECORDS.
00040          01  WS-CARD-OUT                 PIC X(80).
00041
00042          FD  PRINT-FILE
00043              LABEL RECORDS ARE STANDARD
00044              RECORDING MODE IS F
00045              BLOCK CONTAINS 0 RECORDS.
00046          01  PF-PRINT-LINE               PIC X(133).
00047
00048          WORKING-STORAGE SECTION.
00049
00050          77  WS-MEMBER-COUNT             PIC 9(9)            VALUE +0.
00051          77  WS-CHAR-INDEX               PIC S9(4) COMP SYNC.
00052          77  WS-PARM-INDEX               PIC S9(4) COMP SYNC.
00053          77  WS-LINE-CNT                 PIC S9(4) COMP SYNC VALUE +57.
00054          77  WS-LINE-MAX                 PIC S9(4) COMP SYNC VALUE +56.
   2


00055
00056          01  WS-ADD-REC.
00057              05  FILLER                  PIC X(8)    VALUE './  ADD '.
00058              05  FILLER                  PIC X(5)    VALUE 'NAME='.
00059              05  WS-PARM-AREA            PIC X(67)   VALUE SPACES.
00060              05  FILLER            REDEFINES WS-PARM-AREA.
00061                 10  WS-MEMBER-CHAR       PIC X OCCURS 67 TIMES.
00062
00063          01  PH-PAGE-HEADING.
00064              05  FILLER                  PIC X(100) VALUE
00065                  '1PDSUNLDC V1.2.0'.
00066          01  PH-LINE-2.
00067              05  FILLER                   PIC X(49)  VALUE
00068                  '0MEMBER    USERID    CREATED    UPDATED      TIME'.
00069              05  FILLER                   PIC X(11)  VALUE
00070                  '   COMMENTS'.
00071          01  DL-DETAIL-LINE.
00072              05  CC                       PIC X.
00073              05  DL-MEMBER                PIC X(8).
00074              05  FILLER                   PIC XX.
00075              05  DL-USERID                PIC X(8).
00076              05  FILLER                   PIC XX.
00077              05  DL-CREATED               PIC 9999B99B99.
00078              05  FILLER                   PIC X.
00079              05  DL-UPDATED               PIC 9999B99B99.
00080              05  FILLER                   PIC XX.
00081              05  DL-TIME-H                PIC 99.
00082              05  DL-TIME-SEP              PIC X.
00083              05  DL-TIME-M                PIC 99.
00084              05  FILLER                   PIC XX.
00085              05  DL-COMMENTS              PIC X(50).
00086
00087          01  WS-DATE-EDIT-01.
00088              05  WS-DATE-EDIT-X           PIC X(8).
00089              05  FILLER         REDEFINES WS-DATE-EDIT-X.
00090                  10  WS-DATE-EDIT         PIC 9(8).
   3


00091          01  DATECNV-PARM COPY DATECNVC.
00092 C       ******************* DATECNVC V1.0.0 *****************************
00093 C       *****************************************************************
00094 C       *                                                               *
00095 C       * NAME: DATECNVC - PARM LIST DEFINITIONS FOR DATECNV            *
00096 C       *                                                               *
00097 C       * NOTE: THERE IS A PL/1 VERSION OF THIS.  THEY SHOULD BE KEPT   *
00098 C       *       IN SYNC.                                                *
00099 C       *                                                               *
00100 C       *****************************************************************
00101 C       *                                                               *
00102 C       *  (C) COPYRIGHT 2023 EDWARD G LISS   ALL RIGHTS RESERVED       *
00103 C       *                                                               *
00104 C       *  THIS SOURCE CODE AS WELL AS ANY OBJECT CODE RESULTING FROM   *
00105 C       *  THIS SOURCE CODE MAY BE DISTRIBUTED FREELY PROVIDED NO FEE   *
00106 C       *  IS CHARGED AND FOR NON-COMERCIAL PURPOSES.                   *
00107 C       *                                                               *
00108 C       *  FOR COMMERCIAL DISTRIBUTION RIGHTS, CONTACT THE COPYRIGHT    *
00109 C       *  OWNER.                                                       *
00110 C       *                                                               *
00111 C       *****************************************************************
00112 C       *                                                               *
00113 C       * REVISION HISTORY                                              *
00114 C       * ------  ----------------------------------------------------- *
00115 C       * V1.1.0  INITIAL VERSION.                                      *
00116 C       *                                                               *
00117 C       *****************************************************************
00118 C
00119 C        01  DATECNV-PARM.
00120 C            05  DC-RETURN-CODE          PIC S9(8) COMP.
00121 C            05  DC-INPUT-FORMAT         PIC X(8).
00122 C            05  DC-INPUT-DATE           PIC X(10).
00123 C            05  DC-OUTPUT-FORMAT        PIC X(8).
00124 C            05  DC-OUTPUT-DATE          PIC X(10).
00125 C       ******************* DATECNVC V1.0.0  END ************************
00126         ***#INCLUDE DATECNVC.COB
   4


00127          01  PDSGET-PARAMETERS COPY GETPDSPA.
00128 C       ******************* GETPDSPA V1.2.0 *****************************
00129 C       *****************************************************************
00130 C       *                                                               *
00131 C       * NAME: GETPDSPA - PARM LIST DEFINITIONS FOR GETPDS V1.3.0      *
00132 C       *                                                               *
00133 C       * NOTE: THERE IS A PL/1 VERSION OF THIS.  THEY SHOULD BE KEPT   *
00134 C       *       IN SYNC.                                                *
00135 C       *                                                               *
00136 C       *****************************************************************
00137 C       *                                                               *
00138 C       *  (C) COPYRIGHT 2017 EDWARD G LISS   ALL RIGHTS RESERVED       *
00139 C       *  (C) COPYRIGHT 2023 EDWARD G LISS   ALL RIGHTS RESERVED       *
00140 C       *                                                               *
00141 C       *  THIS SOURCE CODE AS WELL AS ANY OBJECT CODE RESULTING FROM   *
00142 C       *  THIS SOURCE CODE MAY BE DISTRIBUTED FREELY PROVIDED NO FEE   *
00143 C       *  IS CHARGED AND FOR NON-COMERCIAL PURPOSES.                   *
00144 C       *                                                               *
00145 C       *  FOR COMMERCIAL DISTRIBUTION RIGHTS, CONTACT THE COPYRIGHT    *
00146 C       *  OWNER.                                                       *
00147 C       *                                                               *
00148 C       *****************************************************************
00149 C       *                                                               *
00150 C       * REVISION HISTORY                                              *
00151 C       * ------  ----------------------------------------------------- *
00152 C       * V1.1.0  INITIAL VERSION.                                      *
00153 C       * V1.2.0  ADDED THE DEFINITION OF MEMBERS STATS AND ADDED       *
00154 C       *         WORK AREAS FOR STATISTICS CODE CONVERSION.            *
00155 C       *                                                               *
00156 C       *****************************************************************
00157 C        01  PDSGET-PARAMETERS.
00158 C            02  PDSGET-REQUEST          PIC S9(08)  COMP.
00159 C            02  PDSGET-MEMBER           PIC X(08).
00160 C            02  PDSGET-RECORD           PIC X(255).
00161 C            02  FILLER                  REDEFINES PDSGET-RECORD.
00162 C                03  PDSGET-RECORD80     PIC X(80).
00163 C                03  FILLER              PIC X(75).
00164 C            02  FILLER                  REDEFINES PDSGET-RECORD.
00165 C                03  PDS-C               PIC X.
00166 C                03  PDS-VERSION         PIC X.
00167 C                03  PDS-MOD             PIC X.
00168 C                03  PDS-NULL            PIC XX.
00169 C                03  PDS-DATE-CREATED    PIC S9(7) COMP-3.
00170 C                03  PDS-DATE-UPDATED    PIC S9(7) COMP-3.
00171 C                03  PDS-TIME-CHANGED-H  PIC X.
00172 C                03  PDS-TIME-CHANGED-M  PIC X.
00173 C                03  PDS-CURRENT-LINES   PIC S9(4) COMP.
00174 C                03  PDS-INITIAL-LINES   PIC S9(4) COMP.
00175 C                03  PDS-CHANGED-LINES   PIC S9(4) COMP.
00176 C                03  PDS-USER-ID         PIC X(8).
00177 C
00178 C        01  PDSGET-REQUEST-CODES.
00179 C            02  PDSGET-REQUEST-OPEN     PIC S9(08)  COMP    VALUE +0.
00180 C            02  PDSGET-REQUEST-START    PIC S9(08)  COMP    VALUE +1.
00181 C            02  PDSGET-REQUEST-LOCATE   PIC S9(08)  COMP    VALUE +4.
00182 C            02  PDSGET-REQUEST-NEXT     PIC S9(08)  COMP    VALUE +5.
00183 C            02  PDSGET-REQUEST-READ     PIC S9(08)  COMP    VALUE +8.
   5


00184 C            02  PDSGET-REQUEST-CLOSE    PIC S9(08)  COMP    VALUE +12.
00185 C
00186 C       *
00187 C       * PDSGET_RETURN_CODE DEFINITIONS
00188 C       *       RETURN_CODE 0 = SUCCESSFUL COMPLETION OF REQUEST
00189 C       *       RETURN_CODE 8 = SERIOUS ERROR.
00190 C       *       RETURN_CODE 4 = DEPENDS ON REQUEST CODE
00191 C       *            REQUEST_CODE    MEANING
00192 C       *                  0         PDS COULD NOT BE OPENED.
00193 C       *                  1         PDS COULD NOT BE OPENED.
00194 C       *                  4         MEMBER NOT FOUND.
00195 C       *                  5         END OF DIRECTORY.
00196 C       *                  8         END OF CURRENT MEMBER.
00197 C       *
00198 C
00199 C        01  PDSGET-WORK-AREAS.
00200 C       *
00201 C       *   PDS-TIME-CHANGED -H AND -M ARE UNSIGNED PACKED DECIMALS
00202 C       *   THEY MUST TO CONVERTED TO SIGNED PACK DECIMAL TO USE THEM.
00203 C       *   THE FOLLOWING AREAS CAN BE USED FOR THAT.
00204 C       *
00205 C       *   MOVE PDS-TIME-CHANGED-? TO PDS-TIME-CHAR.
00206 C       *   MOVE PDS-TIME-WORK      TO PDS-4 DIGIT-TIME.
00207 C       *
00208 C       *   PDS-TIME WILL HAVE A USABLE FORM OF THE HOUR OR MIN.
00209 C       *
00210 C       *   THIS CONVERSION MUST TAKE PLACE FOR BOTH THE -H AND =M
00211 C       *   PDS-TIME-CHANGED- FIELDS.
00212 C       *
00213 C            05  PDS-TIME-CONVERSION.
00214 C                10 PDS-TIME-WORK        PIC S9(5) COMP-3 VALUE ZERO.
00215 C            05  FILLER                  REDEFINES PDS-TIME-CONVERSION.
00216 C                10  FILLER              PIC X.
00217 C                10  PDS-TIME-CHAR       PIC X.
00218 C                10  FILLER              PIC X.
00219 C
00220 C            05  PDS-4-DIGIT-TIME        PIC 9(4).
00221 C            05  FILLER                  REDEFINES PDS-4-DIGIT-TIME.
00222 C                10  FILLER              PIC X.
00223 C                10  PDS-TIME            PIC 99.
00224 C                10  FILLER              PIC X.
00225 C
00226 C       ******************* GETPDSPA V1.2.0 END *************************
00227         ***#INCLUDE GETPDSPA.COB
   6


00228          LINKAGE SECTION.
00229          01  EXEC-PARM.
00230              05  EXEC-LEN               PIC S9(4)  COMP.
00231              05  EXEC-CHAR              OCCURS 100 TIMES
00232                                         PIC X.
00233          PROCEDURE DIVISION USING EXEC-PARM.
00234
00235          000-INITIATE.
00236
00237              OPEN OUTPUT CARD-FILE, PRINT-FILE.
00238              IF EXEC-LEN > 55
00239                  DISPLAY 'EXEC PARM EXCEEDS 55 CHARACTERS'
00240                  MOVE 16 TO RETURN-CODE
00241                  STOP RUN.
00242              IF EXEC-LEN > ZERO
00243                 PERFORM 000-MOVE-PARM
00244                    VARYING WS-CHAR-INDEX FROM 1 BY 1
00245                      UNTIL WS-CHAR-INDEX > EXEC-LEN
00246                 DISPLAY 'WITH EXEC PARM ' WS-PARM-AREA.
00247              PERFORM 100-OPEN-PDS.
00248              PERFORM 600-CLOSE-PDS.
00249
00250              DISPLAY 'MEMBER PROCESSED=' WS-MEMBER-COUNT.
00251              DISPLAY 'PDSUNLOD CONCLUDED'.
00252              CLOSE CARD-FILE, PRINT-FILE.
00253
00254              GOBACK.
00255
00256          000-MOVE-PARM.
00257              MOVE EXEC-CHAR(WS-CHAR-INDEX) TO
00258                   WS-MEMBER-CHAR(WS-CHAR-INDEX).
00259
00260          100-OPEN-PDS.
00261              MOVE PDSGET-REQUEST-OPEN TO PDSGET-REQUEST.
00262              MOVE 'PDSIN  ' TO PDSGET-MEMBER.
00263              PERFORM 900-CALL-PDSGET.
00264              IF RETURN-CODE EQUAL 0
00265                  PERFORM 200-START-DIR
00266              ELSE
00267              IF RETURN-CODE EQUAL 4
00268                  DISPLAY 'OPEN FAILED (RC=4)'
00269              ELSE
00270              IF RETURN-CODE EQUAL 8
00271                  DISPLAY 'OPEN FAILED (RC=8); EXECUTION TERMINATED'
00272                  STOP RUN.
00273
00274          200-START-DIR.
00275              MOVE PDSGET-REQUEST-START TO PDSGET-REQUEST.
00276              PERFORM 900-CALL-PDSGET.
00277              IF RETURN-CODE EQUAL 0
00278                  PERFORM 300-NEXT-DIR
00279              ELSE
00280              IF RETURN-CODE EQUAL 4
00281                  DISPLAY 'START FAILED (RC=4)'
00282              ELSE
00283              IF RETURN-CODE EQUAL 8
00284                  DISPLAY 'START FAILED (RC=8); EXECUTION TERMINATED'
   7


00285                  STOP RUN.
00286
00287          300-NEXT-DIR.
00288              MOVE ZERO TO RETURN-CODE.
00289              PERFORM 310-NEXT-DIR
00290                  UNTIL RETURN-CODE NOT = ZERO.
00291          310-NEXT-DIR.
00292              MOVE PDSGET-REQUEST-NEXT  TO PDSGET-REQUEST.
00293              PERFORM 900-CALL-PDSGET.
00294              IF RETURN-CODE EQUAL 0
00295                  DISPLAY 'MEMBER NAME=' PDSGET-MEMBER
00296                  PERFORM 400-LOCATE-MEMBER
00297                  MOVE ZERO TO RETURN-CODE
00298              ELSE
00299              IF RETURN-CODE EQUAL 4
00300                  DISPLAY 'END OF DIRECTORY (RC=4)'
00301              ELSE
00302              IF RETURN-CODE EQUAL 8
00303                  DISPLAY 'NEXT FAILED (RC=8); EXECUTION TERMINATED'
00304                  STOP RUN.
00305
00306          400-LOCATE-MEMBER.
00307              MOVE PDSGET-REQUEST-LOCATE TO PDSGET-REQUEST.
00308              PERFORM 900-CALL-PDSGET.
00309              IF RETURN-CODE EQUAL 0
00310                  PERFORM 700-PROCESS-STATS THRU 700-EXIT
00311                  PERFORM 500-READ-MEMBER
00312              ELSE
00313              IF RETURN-CODE EQUAL 4
00314                  DISPLAY 'MEMBER NOT FOUND (RC=4)'
00315              ELSE
00316              IF RETURN-CODE EQUAL 8
00317                  DISPLAY 'LOCATE FAILED (RC=8); EXECUTION TERMINATED'
00318                  STOP RUN.
00319
00320          500-READ-MEMBER.
00321              MOVE PDSGET-REQUEST-READ TO PDSGET-REQUEST.
00322              IF EXEC-LEN = ZERO
00323                  MOVE PDSGET-MEMBER   TO WS-PARM-AREA
00324              ELSE
00325                  PERFORM 501-MOVE-TEXT.
00326              WRITE WS-CARD-OUT FROM WS-ADD-REC.
00327              ADD 1 TO WS-MEMBER-COUNT.
00328              PERFORM 900-CALL-PDSGET.
00329              PERFORM 510-READ-MEMBER
00330                  UNTIL RETURN-CODE NOT EQUAL 0.
00331              IF RETURN-CODE EQUAL 4
00332                  DISPLAY 'END OF FILE ON MEMBER (RC=4)'
00333              ELSE
00334              IF RETURN-CODE EQUAL 8
00335                  DISPLAY 'READ FAILED (RC=8); EXECUTION TERMINATED'
00336                  STOP RUN.
00337
00338          501-MOVE-TEXT.
00339              MOVE PDSGET-MEMBER       TO WS-PARM-AREA.
00340              MOVE 1                   TO WS-CHAR-INDEX.
00341              PERFORM 502-FIND-BLANK
   8


00342                 UNTIL WS-MEMBER-CHAR(WS-CHAR-INDEX) = ' '.
00343              MOVE ','                 TO WS-MEMBER-CHAR(WS-CHAR-INDEX).
00344              ADD 1                    TO WS-CHAR-INDEX.
00345              PERFORM 503-MOVE-PARM
00346                 VARYING WS-PARM-INDEX FROM 1 BY 1
00347                   UNTIL WS-PARM-INDEX > EXEC-LEN.
00348
00349          502-FIND-BLANK.
00350              ADD 1                    TO WS-CHAR-INDEX.
00351
00352          503-MOVE-PARM.
00353              MOVE EXEC-CHAR (WS-PARM-INDEX) TO
00354                   WS-MEMBER-CHAR (WS-CHAR-INDEX).
00355              ADD 1                    TO WS-CHAR-INDEX.
00356
00357          510-READ-MEMBER.
00358              WRITE WS-CARD-OUT FROM PDSGET-RECORD80.
00359              PERFORM 900-CALL-PDSGET.
00360
00361          600-CLOSE-PDS.
00362              MOVE PDSGET-REQUEST-CLOSE TO PDSGET-REQUEST.
00363              PERFORM 900-CALL-PDSGET.
00364              IF RETURN-CODE EQUAL 4
00365                  DISPLAY 'CLOSE FAILED (RC=4)'
00366              ELSE
00367              IF RETURN-CODE EQUAL 8
00368                  DISPLAY 'CLOSE FAILED (RC=8); EXECUTION TERMINATED'
00369                  STOP RUN.
00370
00371          700-PROCESS-STATS.
00372              MOVE SPACES             TO DL-DETAIL-LINE.
00373              MOVE PDSGET-MEMBER      TO DL-MEMBER.
00374              MOVE PDS-USER-ID        TO DL-USERID.
00375              IF PDS-USER-ID = SPACES
00376                  GO TO 700-PRINT.
00377              MOVE PDS-DATE-CREATED   TO DC-INPUT-DATE.
00378              MOVE 'YYYYDDD '         TO DC-INPUT-FORMAT.
00379              MOVE 'YYYYMMDD'         TO DC-OUTPUT-FORMAT.
00380              CALL 'DATECNV'  USING   DATECNV-PARM.
00381              MOVE DC-OUTPUT-DATE     TO WS-DATE-EDIT-X.
00382              MOVE WS-DATE-EDIT       TO DL-CREATED.
00383              EXAMINE DL-CREATED   REPLACING ALL  ' ' BY '/'.
00384              MOVE PDS-DATE-UPDATED   TO DC-INPUT-DATE.
00385              MOVE 'YYYYDDD '         TO DC-INPUT-FORMAT.
00386              MOVE 'YYYYMMDD'         TO DC-OUTPUT-FORMAT.
00387              CALL 'DATECNV'  USING   DATECNV-PARM.
00388              MOVE DC-OUTPUT-DATE     TO WS-DATE-EDIT-X.
00389              MOVE WS-DATE-EDIT       TO DL-UPDATED.
00390              EXAMINE DL-UPDATED   REPLACING ALL  ' ' BY '/'.
00391
00392              MOVE ZERO               TO PDS-TIME-WORK.
00393              MOVE PDS-TIME-CHANGED-H TO PDS-TIME-CHAR.
00394              MOVE PDS-TIME-WORK      TO PDS-4-DIGIT-TIME.
00395              MOVE PDS-TIME           TO DL-TIME-H.
00396              MOVE ZERO               TO PDS-TIME-WORK.
00397              MOVE PDS-TIME-CHANGED-M TO PDS-TIME-CHAR.
00398              MOVE PDS-TIME-WORK      TO PDS-4-DIGIT-TIME.
   9


00399              MOVE PDS-TIME           TO DL-TIME-M.
00400              MOVE ':'                TO DL-TIME-SEP.
00401
00402          700-PRINT.
00403              PERFORM 800-PRINT-DETAIL.
00404          700-EXIT.
00405              EXIT.
00406
00407          800-PRINT-DETAIL.
00408              IF WS-LINE-CNT > WS-LINE-MAX
00409                  WRITE PF-PRINT-LINE FROM PH-PAGE-HEADING
00410                  WRITE PF-PRINT-LINE FROM PH-LINE-2
00411                  MOVE 3     TO WS-LINE-CNT.
00412              WRITE PF-PRINT-LINE FROM DL-DETAIL-LINE.
00413              ADD 1 TO WS-LINE-CNT.
00414
00415          900-CALL-PDSGET.
00416              CALL 'GETPDS'   USING PDSGET-REQUEST,
00417                                    PDSGET-MEMBER,
00418                                    PDSGET-RECORD.
  10



*STATISTICS*     SOURCE RECORDS =   418     DATA DIVISION STATEMENTS =    89     PROCEDURE DIVISION STATEMENTS =   136
*OPTIONS IN EFFECT*     SIZE = 2097152  BUF = 1048576  LINECNT = 57  SPACE1, FLAGW,   SEQ,   SOURCE
*OPTIONS IN EFFECT*     NODMAP, NOPMAP, NOCLIST,   SUPMAP, NOXREF,   LOAD, NODECK, APOST, NOTRUNC,   LIB, NOVERB
*OPTIONS IN EFFECT*       ZWB
  11


 CARD   ERROR MESSAGE

 50     IKF2156I-W     PICTURE DOES NOT CONTAIN A SIGN. SIGN DROPPED FROM VALUE CLAUSE LITERAL.
 257    IKF1007I-W     LEFT PAREN NOT PRECEDED BY A SPACE. ASSUME SPACE.
 258    IKF1007I-W     LEFT PAREN NOT PRECEDED BY A SPACE. ASSUME SPACE.
 272    IKF4072I-W     EXIT FROM PERFORMED PROCEDURE ASSUMED BEFORE PROCEDURE-NAME .
 285    IKF4072I-W     EXIT FROM PERFORMED PROCEDURE ASSUMED BEFORE PROCEDURE-NAME .
 304    IKF4072I-W     EXIT FROM PERFORMED PROCEDURE ASSUMED BEFORE PROCEDURE-NAME .
 318    IKF4072I-W     EXIT FROM PERFORMED PROCEDURE ASSUMED BEFORE PROCEDURE-NAME .
 336    IKF4072I-W     EXIT FROM PERFORMED PROCEDURE ASSUMED BEFORE PROCEDURE-NAME .
 342    IKF1007I-W     LEFT PAREN NOT PRECEDED BY A SPACE. ASSUME SPACE.
 343    IKF1007I-W     LEFT PAREN NOT PRECEDED BY A SPACE. ASSUME SPACE.
 369    IKF4072I-W     EXIT FROM PERFORMED PROCEDURE ASSUMED BEFORE PROCEDURE-NAME .

 F64-LEVEL LINKAGE EDITOR OPTIONS SPECIFIED MAP
          DEFAULT OPTION(S) USED -  SIZE=(231424,55296)



                                                      MODULE MAP


  CONTROL SECTION                       ENTRY

    NAME    ORIGIN  LENGTH                NAME   LOCATION     NAME   LOCATION     NAME   LOCATION     NAME   LOCATION
  PDSUNLDC      00    1866
  DATECNV *   1868     30A
                                        DATCNVP     1870
  GETPDS  *   1B78     604
                                        NCZ93205    1B78    GETPDSP     1B80
  @GETDIR *   2180     214
  ILBODSP0*   2398     700
  ILBOSTP0*   2A98      35
                                        ILBOSTP1    2AAE

 ENTRY ADDRESS       00

 TOTAL LENGTH      2AD0
****PDSUNLDC  DOES NOT EXIST BUT HAS BEEN ADDED TO DATA SET
AUTHORIZATION CODE IS         0.
                                                                                                            PAGE      1
VERSION 5.5                                     OS/360 PL/I COMPILER (F)                                    DATE 23.096


PL/I F COMPILER OPTIONS SPECIFIED ARE AS FOLLOWS--

     MACRO


THE COMPLETE LIST OF OPTIONS USED DURING THIS COMPILATION IS--   EBCDIC
                                                                 CHAR60
                                                                 MACRO
                                                                 SOURCE2
                                                               NOMACDCK
                                                                 COMP
                                                                 SOURCE
                                                               NOATR
                                                               NOXREF
                                                               NOEXTREF
                                                               NOLIST
                                                                 LOAD
                                                               NODECK
                                                                 FLAGW
                                                               NOSTMT
                                                                 SIZE=1028712
                                                                 LINECNT=050
                                                                 OPT=01
                                                                 SORMGIN=(002,072)
                                                               NOEXTDIC
                                                               NONEST
                                                                 OPLIST
                                                                 SYNCHKT


*OPTIONS IN EFFECT*     EBCDIC,CHAR60,MACRO,SOURCE2,NOMACDCK,COMP,SOURCE,NOATR,NOXREF,NOEXTREF,NOLIST,LOAD,
*OPTIONS IN EFFECT*     NODECK,FLAGW,NOSTMT,SIZE=1028712,LINECNT=050,OPT=01,SORMGIN=(002,072),NOEXTDIC,
*OPTIONS IN EFFECT*     NONEST,OPLIST,SYNCHKT
           /************************ PDSUNLDP - PL/1 F VERSION *****************                            PAGE      2


   COMPILE-TIME MACRO PROCESSOR
   MACRO SOURCE2 LISTING

     1    /************************ PDSUNLDP - PL/1 F VERSION *****************
     2          PROGRAM-ID. PDSUNLDP.
     3          AUTHOR. ED LISS.
     4          DATE-WRITTEN. MARCH, 2010.
     5          DATE-COMPILED.
     6          REMARKS. THIS PROGRAM READS A PDS AND WRITES EACH MEMBER WITH
     7               AN ./ ADD SUITABLE FOR RELOADING USING IEBUPDTX OR
     8               IEBUPDTE.  THE './ ADD NAME=XXXXXXXX' IS GENERATED FOR
     9               EACH MEMBER.  IF A EXEC_CARD PARM IS PASSED, THE PARM
    10               IS APPENDED I.E.  './ ADD NAME=XXXXXXXX,PARM'.  USING
    11               THE PARM ENABLES UTILITY CONTROL STATEMENTS FOR
    12               IEBUPDTE OR IEBUPDTX TO BE GENERATED.
    13
    14               VERSION     DATE     COMMENTS
    15               -------   ---------  ---------------------------------
    16                1.0.0      03/2010  ORIGINAL VERSION
    17                1.1.0    06/17/2010 CHANGED SO ONLY NAME PARM
    18                                    IS GENERATED.  IF AN EXEC PARM
    19                                    IS PASSED, IT WILL BE ADDED TO
    20                                    THE ./ ADD NAME=,PARM
    21                1.2.0    03/19/2023 CODE CLEANUP AND ADDED ISPF/RPF
    22                                    STATS TO REPORT
    23
    24    ********************************************************************/
    25
    26    PDSUNLD:PROCEDURE(EXEC_PARM) OPTIONS(MAIN);
    27
    28        DECLARE EXEC_PARM CHAR(100) VARYING;
    29        DECLARE CARD_FILE STREAM OUTPUT FILE;
    30        DECLARE
    31           1  WS_MEMBER_COUNT       FIXED BINARY(31) ALIGNED INITIAL(0);
    32
    33    /*#INCLUDE GETPDSPA.PLI*/
    34      %INCLUDE GETPDSPA;
    35   1
    36    /*#INCLUDE DATECNVP.PLI*/
    37      %INCLUDE DATECNVP;
    38
    39        DECLARE NAME_WORK            CHAR(8),
    40                1 NAME_WORK_CHARS DEFINED NAME_WORK,
    41                  2 NAME_WORK_CHAR(8) CHAR(1);
    42        DECLARE NAME_STR             CHAR(8) VARYING;
    43        DECLARE CHAR_INDEX           FIXED BINARY ALIGNED;
    44        DECLARE (PAGE_NUM,
           /************************ PDSUNLDP - PL/1 F VERSION *****************                            PAGE      3


   MACRO SOURCE2 LISTING

    45                 REC_COUNT)          FIXED BINARY ALIGNED
    46                                     INIT(0);
    47   1    ON ENDPAGE(SYSPRINT)
    48        BEGIN;
    49           PAGE_NUM = PAGE_NUM + 1;
    50           PUT PAGE EDIT('PDSUNLDP V1.2.0','PAGE ',PAGE_NUM)
    51                        (A,COL(110),A,P'ZZ9');
    52           IF PAGE_NUM = 1 &
    53              LENGTH(EXEC_PARM)>0 THEN
    54                 PUT SKIP EDIT(' WITH PARM=',EXEC_PARM) (A,A);
    55           PUT SKIP EDIT('MEMBER    USERID  CREATED    UPDATED      TIME',
    56                         '   COMMENTS') (A,A);
    57           PUT SKIP;
    58        END;
    59        SIGNAL ENDPAGE(SYSPRINT);
    60        OPEN FILE(CARD_FILE) OUTPUT TITLE('CARDOUT');
    61        CALL P100_OPEN_PDS;
    62        CALL P600_CLOSE_PDS;
    63
    64        PUT SKIP EDIT('MEMBER PROCESSED=',WS_MEMBER_COUNT)(A,F(10));
    65        CLOSE FILE(CARD_FILE);
    66        PUT SKIP(2) EDIT('PDSUNLDP V1.2.0 ENDED') (A);
    67
    68   -P100_OPEN_PDS:PROC;
    69        PDSGET_REQUEST = PDSGET_REQUEST_OPEN;
    70        PDSGET_MEMBER  = 'PDSIN   ';
    71        CALL P900_CALL_GETPDSP;
    72        IF PDSGET_RETURN_CODE = 0 THEN
    73            CALL P200_START_DIR;
    74        ELSE
    75        IF PDSGET_RETURN_CODE = 4 THEN
    76            PUT SKIP LIST('OPEN FAILED (RC=4)');
    77        ELSE
    78        IF PDSGET_RETURN_CODE = 8 THEN
    79        DO;
    80            PUT SKIP LIST('OPEN FAILED (RC=8); EXECUTION TERMINATED');
    81            STOP;
    82        END;
    83    END P100_OPEN_PDS;
    84   -P200_START_DIR:PROC;
    85        PDSGET_REQUEST = PDSGET_REQUEST_START;
    86        CALL P900_CALL_GETPDSP;
    87        IF PDSGET_RETURN_CODE = 0 THEN
    88            CALL P300_NEXT_DIR;
    89        ELSE
           /************************ PDSUNLDP - PL/1 F VERSION *****************                            PAGE      4


   MACRO SOURCE2 LISTING

    90        IF PDSGET_RETURN_CODE = 4 THEN
    91            PUT SKIP LIST('START FAILED (RC=4)');
    92        ELSE
    93        IF PDSGET_RETURN_CODE = 8 THEN
    94        DO;
    95            PUT SKIP LIST('START FAILED (RC=8); EXECUTION TERMINATED');
    96            STOP;
    97        END;
    98    END P200_START_DIR;
    99   -P300_NEXT_DIR:PROC;
   100        PDSGET_RETURN_CODE = 0;
   101        DO WHILE(PDSGET_RETURN_CODE = 0);
   102            PDSGET_REQUEST = PDSGET_REQUEST_NEXT;
   103            CALL P900_CALL_GETPDSP;
   104            IF PDSGET_RETURN_CODE = 0 THEN
   105            DO;
   106                CALL P400_LOCATE_MEMBER;
   107                PDSGET_RETURN_CODE = 0;
   108            END;
   109            ELSE
   110            IF PDSGET_RETURN_CODE = 4 THEN
   111                PUT SKIP(2) LIST('END OF DIRECTORY (RC=4)');
   112            ELSE
   113            IF PDSGET_RETURN_CODE = 8 THEN
   114            DO;
   115                PUT SKIP LIST(
   116                             'NEXT FAILED (RC=8); EXECUTION TERMINATED');
   117                STOP;
   118            END;
   119        END; /* DO UNTIL */
   120    END P300_NEXT_DIR;
   121   -P400_LOCATE_MEMBER:PROC;
   122        PDSGET_REQUEST = PDSGET_REQUEST_LOCATE;
   123        CALL P900_CALL_GETPDSP;
   124        IF PDSGET_RETURN_CODE = 0 THEN
   125        DO;
   126        /*  PUT SKIP LIST('MEMBER NAME=',PDSGET_MEMBER);  */
   127            CALL P700_PROCESS_STATS;
   128            CALL P500_READ_MEMBER;
   129        END;
   130        ELSE
   131        IF PDSGET_RETURN_CODE = 4 THEN
   132            PUT SKIP LIST('MEMBER NOT FOUND (RC=4)');
   133        ELSE
   134            IF PDSGET_RETURN_CODE = 8 THEN
           /************************ PDSUNLDP - PL/1 F VERSION *****************                            PAGE      5


   MACRO SOURCE2 LISTING

   135            DO;
   136                PUT SKIP LIST(
   137                          'LOCATE FAILED (RC=8); EXECUTION TERMINATED');
   138                STOP;
   139            END;
   140    END P400_LOCATE_MEMBER;
   141   -P500_READ_MEMBER:PROC;
   142        PDSGET_REQUEST = PDSGET_REQUEST_READ;
   143        CALL P900_CALL_GETPDSP;
   144        WS_MEMBER_COUNT=WS_MEMBER_COUNT+1;
   145        IF PDSGET_RETURN_CODE = 0 THEN
   146        DO;
   147            REC_COUNT=0;
   148            NAME_WORK=PDSGET_MEMBER;
   149            NAME_STR='';
   150            DO CHAR_INDEX=1 TO 8;
   151                IF NAME_WORK_CHAR(CHAR_INDEX) > ' ' THEN
   152                    NAME_STR=NAME_STR || NAME_WORK_CHAR(CHAR_INDEX);
   153            END;
   154            PUT FILE(CARD_FILE) EDIT('./  ADD NAME=',NAME_STR)
   155                                    (A);
   156            IF LENGTH(EXEC_PARM)>0 THEN
   157               PUT FILE(CARD_FILE) EDIT(',',EXEC_PARM)
   158                                    (A,A);
   159            DO WHILE (PDSGET_RETURN_CODE = 0);
   160               PUT FILE(CARD_FILE) EDIT(PDSGET_RECORD80) (SKIP,A);
   161               REC_COUNT=REC_COUNT+1;
   162               CALL P900_CALL_GETPDSP;
   163            END;
   164        END;
   165
   166        IF PDSGET_RETURN_CODE = 4 THEN
   167            PUT EDIT('END OF MEMBER (RC=4)',REC_COUNT,' RECORDS READ')
   168                    (X(2),A,F(5),A);
   169        ELSE
   170            IF PDSGET_RETURN_CODE = 8 THEN
   171            DO;
   172                PUT SKIP LIST(
   173                          'READ FAILED (RC=8); EXECUTION TERMINATED');
   174                STOP;
   175            END;
   176    END P500_READ_MEMBER;
   177   -P600_CLOSE_PDS:PROC;
   178        PDSGET_REQUEST = PDSGET_REQUEST_CLOSE;
   179        CALL P900_CALL_GETPDSP;
           /************************ PDSUNLDP - PL/1 F VERSION *****************                            PAGE      6


   MACRO SOURCE2 LISTING

   180        IF PDSGET_RETURN_CODE = 4 THEN
   181            PUT SKIP LIST('CLOSE FAILED (RC=4)');
   182        ELSE
   183        IF PDSGET_RETURN_CODE = 8 THEN
   184        DO;
   185            PUT SKIP LIST('CLOSE FAILED (RC=8); EXECUTION TERMINATED');
   186            STOP;
   187        END;
   188    END P600_CLOSE_PDS;
   189   -P700_PROCESS_STATS:PROC;
   190        DECLARE  DATE_WORK                CHAR(10),
   191                 DATE_CONV                PIC '(7)9BBB',
   192                 TIME_WORK                CHAR(5);
   193
   194        PDSGET_PTR = ADDR(PDSGET_RECORD80);
   195        PUT SKIP EDIT(PDSGET_MEMBER,PDS_USER_ID) (A,X(2),A);
   196        IF PDS_USER_ID = (8)' ' THEN RETURN;
   197
   198        DC_INPUT_FORMAT =  'YYYYDDD ';
   199        DATE_CONV       =   PDS_DATE_CREATED;
   200        DC_INPUT_DATE   =   DATE_CONV;
   201        DC_OUTPUT_FORMAT = 'YYYYMMDD';
   202        CALL DATCNVP(DATECNV_PARM);
   203        PUT EDIT(SUBSTR(DC_OUTPUT_DATE,1,4),'/') (A,A)
   204                (SUBSTR(DC_OUTPUT_DATE,5,2),'/') (A,A)
   205                (SUBSTR(DC_OUTPUT_DATE,7,2),' ') (A,A);
   206
   207        DC_INPUT_FORMAT =  'YYYYDDD ';
   208        DATE_CONV       =   PDS_DATE_UPDATED;
   209        DC_INPUT_DATE   =   DATE_CONV;
   210        DC_OUTPUT_FORMAT = 'YYYYMMDD';
   211        CALL DATCNVP(DATECNV_PARM);
   212        PUT EDIT(SUBSTR(DC_OUTPUT_DATE,1,4),'/') (A,A)
   213                (SUBSTR(DC_OUTPUT_DATE,5,2),'/') (A,A)
   214                (SUBSTR(DC_OUTPUT_DATE,7,2),' ') (A,A);
   215
   216        SUBSTR(TIME_WORK,1,2) = PDS_TIME_CONVERSION(PDS_TIME_CHANGED_H);
   217        SUBSTR(TIME_WORK,3,1) = ':';
   218        SUBSTR(TIME_WORK,4,2) = PDS_TIME_CONVERSION(PDS_TIME_CHANGED_M);
   219
   220        PUT EDIT(TIME_WORK) (X(2),A);
   221
   222    END P700_PROCESS_STATS;
   223   -P900_CALL_GETPDSP:PROC;
   224        CALL GETPDSP (PDSGET_REQUEST_1,
           /************************ PDSUNLDP - PL/1 F VERSION *****************                            PAGE      7


   MACRO SOURCE2 LISTING

   225                      PDSGET_MEMBER_1,
   226                      PDSGET_RECORD80_1,
   227                      PDSGET_RETURN_CODE_1);
   228    END P900_CALL_GETPDSP;
   229
   230    END PDSUNLD;


   INCLUDED TEXT FOLLOWS FROM DD.MEMBER =  SYSLIB  .GETPDSPA

   231    /********************** GETPDSPA V1.2.0 ******************************/
   232    /*********************************************************************/
   233    /*                                                                   */
   234    /* NAME: GETPDSPA - PARM LIST DEFINITIONS FOR GETPDS V1.3.0          */
   235    /*                                                                   */
   236    /* NOTE: THERE IS A COBOL VERSION OF THIS.  THEY SHOULD BE KEPT      */
   237    /*       IN SYNC.                                                    */
   238    /*                                                                   */
   239    /*********************************************************************/
   240    /*                                                                   */
   241    /*  (C) COPYRIGHT 2017 EDWARD G LISS   ALL RIGHTS RESERVED           */
   242    /*  (C) COPYRIGHT 2023 EDWARD G LISS   ALL RIGHTS RESERVED           */
   243    /*                                                                   */
   244    /*  THIS SOURCE CODE AS WELL AS ANY OBJECT CODE RESULTING FROM THIS  */
   245    /*  SOURCE CODE MAY BE DISTRIBUTED FREELY PROVIDED NO FEE IS CHARGED */
   246    /*  AND FOR NON-COMERCIAL PURPOSES.                                  */
   247    /*                                                                   */
   248    /*  FOR COMMERCIAL DISTRIBUTION RIGHTS, CONTACT THE COPYRIGHT OWNER. */
   249    /*                                                                   */
   250    /*********************************************************************/
   251    /*                                                                   */
   252    /* REVISION HISTORY                                                  */
   253    /* ------  --------------------------------------------------------  */
   254    /* V1.1.0  INITIAL VERSION.                                          */
   255    /* V1.2.0  ADDED THE DEFINITION OF MEMBERS STATS AND ADDED           */
   256    /*         WORK AREAS FOR STATISTICS CODE CONVERSION.                */
   257    /*                                                                   */
   258    /*********************************************************************/
   259
   260        DECLARE
   261           1  PDSGET_PARAMETERS   STATIC ALIGNED,
   262               2  PDSGET_REQUEST_OPEN   INITIAL(0)  FIXED BINARY(31),
   263               2  PDSGET_REQUEST_START  INITIAL(1)  FIXED BINARY(31),
   264               2  PDSGET_REQUEST_LOCATE INITIAL(4)  FIXED BINARY(31),
   265               2  PDSGET_REQUEST_NEXT   INITIAL(5)  FIXED BINARY(31),
           /************************ PDSUNLDP - PL/1 F VERSION *****************                            PAGE      8


   MACRO SOURCE2 LISTING

   266               2  PDSGET_REQUEST_READ   INITIAL(8)  FIXED BINARY(31),
   267               2  PDSGET_REQUEST_CLOSE  INITIAL(12) FIXED BINARY(31);
   268        DECLARE
   269           1   PDSGET_REQUEST_1      STATIC,
   270               2  PDSGET_REQUEST     FIXED BINARY(31),
   271           1   PDSGET_MEMBER_1       STATIC,
   272               2  PDSGET_MEMBER      CHAR(8),     /* DDNAME FOR OPEN */
   273           1   PDSGET_RECORD80_1     STATIC,
   274               2  PDSGET_RECORD80    CHAR(80),
   275           1   PDSGET_RETURN_CODE_1  STATIC,
   276               2  PDSGET_RETURN_CODE FIXED BINARY(31);
   277    /*********************************************************************/
   278    /*                                                                   */
   279    /* PDSGET_RETURN_CODE DEFINITIONS                                    */
   280    /*       RETURN_CODE 0 = SUCCESSFUL COMPLETION OF REQUEST            */
   281    /*       RETURN_CODE 8 = SERIOUS ERROR.                              */
   282    /*       RETURN_CODE 4 = DEPENDS ON REQUEST CODE                     */
   283    /*            REQUEST_CODE    MEANING                                */
   284    /*                  0         PDS COULD NOT BE OPENED.               */
   285    /*                  1         PDS COULD NOT BE OPENED.               */
   286    /*                  4         MEMBER NOT FOUND.                      */
   287    /*                  5         END OF DIRECTORY.                      */
   288    /*                  8         END OF CURRENT MEMBER.                 */
   289    /*                                                                   */
   290    /*********************************************************************/
   291        DECLARE
   292           PDSGET_PTR   POINTER,
   293           1  PDSGET_STATISTICS          BASED(PDSGET_PTR),
   294              2  PDS_C                      CHAR(1),
   295              2  PDS_VERSION                CHAR(1),
   296              2  PDS_MOD                    CHAR(1),
   297              2  PDS_NULL                   CHAR(2),
   298              2  PDS_DATE_CREATED           FIXED DECIMAL(7,0),
   299              2  PDS_DATE_UPDATED           FIXED DECIMAL(7,0),
   300              2  PDS_TIME_CHANGED_H         CHAR(1),
   301              2  PDS_TIME_CHANGED_M         CHAR(1),
   302              2  PDS_CURRENT_LINES          FIXED BINARY(15),
   303              2  PDS_INITIAL_LINES          FIXED BINARY(15),
   304              2  PDS_CHANGED_LINES          FIXED BINARY(15),
   305              2  PDS_USER_ID                CHAR(8);
   306
   307         /*****************************************************************
   308          *                                                               *
   309          *   PDS-TIME-CHANGED -H AND -M ARE UNSIGNED PACKED DECIMALS     *
   310          *   THEY MUST TO CONVERTED TO SIGNED PACK DECIMAL TO USE THEM.  *
           /************************ PDSUNLDP - PL/1 F VERSION *****************                            PAGE      9


   MACRO SOURCE2 LISTING

   311          *   THE PDS_TIME_CONVERSION FUNCTION CAN BE USED FOR THAT.      *
   312          *                                                               *
   313          *   THIS CONVERSION MUST TAKE PLACE FOR BOTH THE -H AND =M      *
   314          *   PDS-TIME-CHANGED- FIELDS.                                   *
   315          *                                                               *
   316          ****************************************************************/
   317        DECLARE PDS_TIME_CONVERSION ENTRY RETURNS(CHAR(2));
   318    PDS_TIME_CONVERSION:PROC(A_BYTE) RETURNS(CHAR(2));
   319        DECLARE A_BYTE             CHAR(1);
   320        DECLARE
   321              PDS_FILLER1_PTR      POINTER,
   322              PDS_FILLER4_PTR      POINTER,
   323
   324              PDS_TIME_WORK        FIXED DECIMAL(5,0) INITIAL(0),
   325
   326           1  PDS_FILLER1                  BASED(PDS_FILLER1_PTR),
   327                   10  FILLER2             CHAR(1),
   328                   10  PDS_TIME_CHAR       CHAR(1),
   329                   10  FILLER3             CHAR(1),
   330           1  PDS_4_DIGIT_TIME             PIC '(4)9',
   331           1  FILLER4                      BASED(PDS_FILLER4_PTR),
   332                   10  FILLER5             CHAR(1),
   333                   10  PDS_TIME            CHAR(2),
   334                   10  FILLER6             CHAR(1);
   335
   336        PDS_FILLER1_PTR = ADDR(PDS_TIME_WORK);
   337        PDS_FILLER4_PTR = ADDR(PDS_4_DIGIT_TIME);
   338
   339        PDS_TIME_WORK = 0;
   340        PDS_TIME_CHAR = A_BYTE;
   341        PDS_4_DIGIT_TIME = PDS_TIME_WORK;
   342        RETURN(PDS_TIME);
   343    END PDS_TIME_CONVERSION;
   344    /********************** GETPDSPA V1.2.0  END *************************/


   INCLUDED TEXT FOLLOWS FROM DD.MEMBER =  SYSLIB  .DATECNVP

   345        /******************* DATECNVP V1.0.0 *****************************
   346         *****************************************************************
   347         *                                                               *
   348         * NAME: DATECNVP - PARM LIST DEFINITIONS FOR DATECNV            *
   349         *                                                               *
   350         * NOTE: THERE IS A COBOL VERSION OF THIS.  THEY SHOULD BE KEPT  *
   351         *       IN SYNC.                                                *
           /************************ PDSUNLDP - PL/1 F VERSION *****************                            PAGE     10


   MACRO SOURCE2 LISTING

   352         *                                                               *
   353         *****************************************************************
   354         *                                                               *
   355         *  (C) COPYRIGHT 2023 EDWARD G LISS   ALL RIGHTS RESERVED       *
   356         *                                                               *
   357         *  THIS SOURCE CODE AS WELL AS ANY OBJECT CODE RESULTING FROM   *
   358         *  THIS SOURCE CODE MAY BE DISTRIBUTED FREELY PROVIDED NO FEE   *
   359         *  IS CHARGED AND FOR NON-COMERCIAL PURPOSES.                   *
   360         *                                                               *
   361         *  FOR COMMERCIAL DISTRIBUTION RIGHTS, CONTACT THE COPYRIGHT    *
   362         *  OWNER.                                                       *
   363         *                                                               *
   364         *****************************************************************
   365         *                                                               *
   366         * REVISION HISTORY                                              *
   367         * ------  ----------------------------------------------------- *
   368         * V1.1.0  INITIAL VERSION.                                      *
   369         *                                                               *
   370         ****************************************************************/
   371
   372         DECLARE
   373           1  DATECNV_PARM               STATIC,
   374              5  DC_RETURN_CODE          FIXED BINARY(31),
   375              5  DC_INPUT_FORMAT         CHAR(8),
   376              5  DC_INPUT_DATE           CHAR(10),
   377              5  DC_OUTPUT_FORMAT        CHAR(8),
   378              5  DC_OUTPUT_DATE          CHAR(10);
   379
   380         /****************** DATECNVP V1.0.0  END ***********************/


   NO ERROR OR WARNING CONDITION HAS BEEN DETECTED FOR THIS MACRO PASS.
           /************************ PDSUNLDP - PL/1 F VERSION *****************                            PAGE     11


                    SOURCE LISTING.



                     /************************ PDSUNLDP - PL/1 F VERSION *****************      1
                           PROGRAM-ID. PDSUNLDP.                                                1
                           AUTHOR. ED LISS.                                                     1
                           DATE-WRITTEN. MARCH, 2010.                                           1
                           DATE-COMPILED.                                                       1
                           REMARKS. THIS PROGRAM READS A PDS AND WRITES EACH MEMBER WITH        1
                                AN ./ ADD SUITABLE FOR RELOADING USING IEBUPDTX OR              1
                                IEBUPDTE.  THE './ ADD NAME=XXXXXXXX' IS GENERATED FOR          1
                                EACH MEMBER.  IF A EXEC_CARD PARM IS PASSED, THE PARM           1
                                IS APPENDED I.E.  './ ADD NAME=XXXXXXXX,PARM'.  USING           1
                                THE PARM ENABLES UTILITY CONTROL STATEMENTS FOR                 1
                                IEBUPDTE OR IEBUPDTX TO BE GENERATED.                           1
                                                                                                1
                                VERSION     DATE     COMMENTS                                   1
                                -------   ---------  ---------------------------------          1
                                 1.0.0      03/2010  ORIGINAL VERSION                           1
                                 1.1.0    06/17/2010 CHANGED SO ONLY NAME PARM                  1
                                                     IS GENERATED.  IF AN EXEC PARM             1
                                                     IS PASSED, IT WILL BE ADDED TO             1
                                                     THE ./ ADD NAME=,PARM                      1
                                 1.2.0    03/19/2023 CODE CLEANUP AND ADDED ISPF/RPF            1
                                                     STATS TO REPORT                            1
                                                                                                1
                     ********************************************************************/      1
                                                                                               24
                                                                                               25
     1               PDSUNLD:PROCEDURE(EXEC_PARM) OPTIONS(MAIN);                               26
                                                                                               27
     2                   DECLARE EXEC_PARM CHAR(100) VARYING;                                  28
     3                   DECLARE CARD_FILE STREAM OUTPUT FILE;                                 29
     4                   DECLARE                                                               30
                            1  WS_MEMBER_COUNT       FIXED BINARY(31) ALIGNED INITIAL(0);      31
                                                                                               32
                     /*#INCLUDE GETPDSPA.PLI*/                                                 33
                     /********************** GETPDSPA V1.2.0 ******************************/  231
                     /*********************************************************************/  232
                     /*                                                                   */  233
                     /* NAME: GETPDSPA - PARM LIST DEFINITIONS FOR GETPDS V1.3.0          */  234
                     /*                                                                   */  235
                     /* NOTE: THERE IS A COBOL VERSION OF THIS.  THEY SHOULD BE KEPT      */  236
                     /*       IN SYNC.                                                    */  237
                     /*                                                                   */  238
                     /*********************************************************************/  239
           /************************ PDSUNLDP - PL/1 F VERSION *****************                            PAGE     12


                     /*                                                                   */  240
                     /*  (C) COPYRIGHT 2017 EDWARD G LISS   ALL RIGHTS RESERVED           */  241
                     /*  (C) COPYRIGHT 2023 EDWARD G LISS   ALL RIGHTS RESERVED           */  242
                     /*                                                                   */  243
                     /*  THIS SOURCE CODE AS WELL AS ANY OBJECT CODE RESULTING FROM THIS  */  244
                     /*  SOURCE CODE MAY BE DISTRIBUTED FREELY PROVIDED NO FEE IS CHARGED */  245
                     /*  AND FOR NON-COMERCIAL PURPOSES.                                  */  246
                     /*                                                                   */  247
                     /*  FOR COMMERCIAL DISTRIBUTION RIGHTS, CONTACT THE COPYRIGHT OWNER. */  248
                     /*                                                                   */  249
                     /*********************************************************************/  250
                     /*                                                                   */  251
                     /* REVISION HISTORY                                                  */  252
                     /* ------  --------------------------------------------------------  */  253
                     /* V1.1.0  INITIAL VERSION.                                          */  254
                     /* V1.2.0  ADDED THE DEFINITION OF MEMBERS STATS AND ADDED           */  255
                     /*         WORK AREAS FOR STATISTICS CODE CONVERSION.                */  256
                     /*                                                                   */  257
                     /*********************************************************************/  258
                                                                                              259
     5                   DECLARE                                                              260
                            1  PDSGET_PARAMETERS   STATIC ALIGNED,                            261
                                2  PDSGET_REQUEST_OPEN   INITIAL(0)  FIXED BINARY(31),        262
                                2  PDSGET_REQUEST_START  INITIAL(1)  FIXED BINARY(31),        263
                                2  PDSGET_REQUEST_LOCATE INITIAL(4)  FIXED BINARY(31),        264
                                2  PDSGET_REQUEST_NEXT   INITIAL(5)  FIXED BINARY(31),        265
                                2  PDSGET_REQUEST_READ   INITIAL(8)  FIXED BINARY(31),        266
                                2  PDSGET_REQUEST_CLOSE  INITIAL(12) FIXED BINARY(31);        267
     6                   DECLARE                                                              268
                            1   PDSGET_REQUEST_1      STATIC,                                 269
                                2  PDSGET_REQUEST     FIXED BINARY(31),                       270
                            1   PDSGET_MEMBER_1       STATIC,                                 271
                                2  PDSGET_MEMBER      CHAR(8),     /* DDNAME FOR OPEN */      272
                            1   PDSGET_RECORD80_1     STATIC,                                 273
                                2  PDSGET_RECORD80    CHAR(80),                               274
                            1   PDSGET_RETURN_CODE_1  STATIC,                                 275
                                2  PDSGET_RETURN_CODE FIXED BINARY(31);                       276
                     /*********************************************************************/  277
                     /*                                                                   */  278
                     /* PDSGET_RETURN_CODE DEFINITIONS                                    */  279
                     /*       RETURN_CODE 0 = SUCCESSFUL COMPLETION OF REQUEST            */  280
                     /*       RETURN_CODE 8 = SERIOUS ERROR.                              */  281
                     /*       RETURN_CODE 4 = DEPENDS ON REQUEST CODE                     */  282
                     /*            REQUEST_CODE    MEANING                                */  283
                     /*                  0         PDS COULD NOT BE OPENED.               */  284
                     /*                  1         PDS COULD NOT BE OPENED.               */  285
                     /*                  4         MEMBER NOT FOUND.                      */  286
           /************************ PDSUNLDP - PL/1 F VERSION *****************                            PAGE     13


                     /*                  5         END OF DIRECTORY.                      */  287
                     /*                  8         END OF CURRENT MEMBER.                 */  288
                     /*                                                                   */  289
                     /*********************************************************************/  290
     7                   DECLARE                                                              291
                            PDSGET_PTR   POINTER,                                             292
                            1  PDSGET_STATISTICS          BASED(PDSGET_PTR),                  293
                               2  PDS_C                      CHAR(1),                         294
                               2  PDS_VERSION                CHAR(1),                         295
                               2  PDS_MOD                    CHAR(1),                         296
                               2  PDS_NULL                   CHAR(2),                         297
                               2  PDS_DATE_CREATED           FIXED DECIMAL(7,0),              298
                               2  PDS_DATE_UPDATED           FIXED DECIMAL(7,0),              299
                               2  PDS_TIME_CHANGED_H         CHAR(1),                         300
                               2  PDS_TIME_CHANGED_M         CHAR(1),                         301
                               2  PDS_CURRENT_LINES          FIXED BINARY(15),                302
                               2  PDS_INITIAL_LINES          FIXED BINARY(15),                303
                               2  PDS_CHANGED_LINES          FIXED BINARY(15),                304
                               2  PDS_USER_ID                CHAR(8);                         305
                                                                                              306
                          /*****************************************************************  307
                           *                                                               *  307
                           *   PDS-TIME-CHANGED -H AND -M ARE UNSIGNED PACKED DECIMALS     *  307
                           *   THEY MUST TO CONVERTED TO SIGNED PACK DECIMAL TO USE THEM.  *  307
                           *   THE PDS_TIME_CONVERSION FUNCTION CAN BE USED FOR THAT.      *  307
                           *                                                               *  307
                           *   THIS CONVERSION MUST TAKE PLACE FOR BOTH THE -H AND =M      *  307
                           *   PDS-TIME-CHANGED- FIELDS.                                   *  307
                           *                                                               *  307
                           ****************************************************************/  307
                                                                                              316
     8                   DECLARE PDS_TIME_CONVERSION ENTRY RETURNS(CHAR(2));                  317
     9               PDS_TIME_CONVERSION:PROC(A_BYTE) RETURNS(CHAR(2));                       318
    10                   DECLARE A_BYTE             CHAR(1);                                  319
    11                   DECLARE                                                              320
                               PDS_FILLER1_PTR      POINTER,                                  321
                               PDS_FILLER4_PTR      POINTER,                                  322
                                                                                              323
                               PDS_TIME_WORK        FIXED DECIMAL(5,0) INITIAL(0),            324
                                                                                              325
                            1  PDS_FILLER1                  BASED(PDS_FILLER1_PTR),           326
                                    10  FILLER2             CHAR(1),                          327
                                    10  PDS_TIME_CHAR       CHAR(1),                          328
                                    10  FILLER3             CHAR(1),                          329
                            1  PDS_4_DIGIT_TIME             PIC '(4)9',                       330
                            1  FILLER4                      BASED(PDS_FILLER4_PTR),           331
                                    10  FILLER5             CHAR(1),                          332
           /************************ PDSUNLDP - PL/1 F VERSION *****************                            PAGE     14


                                    10  PDS_TIME            CHAR(2),                          333
                                    10  FILLER6             CHAR(1);                          334
                                                                                              335
    12                   PDS_FILLER1_PTR = ADDR(PDS_TIME_WORK);                               336
    13                   PDS_FILLER4_PTR = ADDR(PDS_4_DIGIT_TIME);                            337
                                                                                              338
    14                   PDS_TIME_WORK = 0;                                                   339
    15                   PDS_TIME_CHAR = A_BYTE;                                              340
    16                   PDS_4_DIGIT_TIME = PDS_TIME_WORK;                                    341
    17                   RETURN(PDS_TIME);                                                    342
    18               END PDS_TIME_CONVERSION;                                                 343
                     /********************** GETPDSPA V1.2.0  END *************************/  344
                                                                                               35
                     /*#INCLUDE DATECNVP.PLI*/                                                 36
                         /******************* DATECNVP V1.0.0 *****************************   345
                          *****************************************************************   345
                          *                                                               *   345
                          * NAME: DATECNVP - PARM LIST DEFINITIONS FOR DATECNV            *   345
                          *                                                               *   345
                          * NOTE: THERE IS A COBOL VERSION OF THIS.  THEY SHOULD BE KEPT  *   345
                          *       IN SYNC.                                                *   345
                          *                                                               *   345
                          *****************************************************************   345
                          *                                                               *   345
                          *  (C) COPYRIGHT 2023 EDWARD G LISS   ALL RIGHTS RESERVED       *   345
                          *                                                               *   345
                          *  THIS SOURCE CODE AS WELL AS ANY OBJECT CODE RESULTING FROM   *   345
                          *  THIS SOURCE CODE MAY BE DISTRIBUTED FREELY PROVIDED NO FEE   *   345
                          *  IS CHARGED AND FOR NON-COMERCIAL PURPOSES.                   *   345
                          *                                                               *   345
                          *  FOR COMMERCIAL DISTRIBUTION RIGHTS, CONTACT THE COPYRIGHT    *   345
                          *  OWNER.                                                       *   345
                          *                                                               *   345
                          *****************************************************************   345
                          *                                                               *   345
                          * REVISION HISTORY                                              *   345
                          * ------  ----------------------------------------------------- *   345
                          * V1.1.0  INITIAL VERSION.                                      *   345
                          *                                                               *   345
                          ****************************************************************/   345
                                                                                              370
                                                                                              371
    19                    DECLARE                                                             372
                            1  DATECNV_PARM               STATIC,                             373
                               5  DC_RETURN_CODE          FIXED BINARY(31),                   374
                               5  DC_INPUT_FORMAT         CHAR(8),                            375
                               5  DC_INPUT_DATE           CHAR(10),                           376
           /************************ PDSUNLDP - PL/1 F VERSION *****************                            PAGE     15


                               5  DC_OUTPUT_FORMAT        CHAR(8),                            377
                               5  DC_OUTPUT_DATE          CHAR(10);                           378
                                                                                              379
                          /****************** DATECNVP V1.0.0  END ***********************/   380
                                                                                               38
    20                   DECLARE NAME_WORK            CHAR(8),                                 39
                                 1 NAME_WORK_CHARS DEFINED NAME_WORK,                          40
                                   2 NAME_WORK_CHAR(8) CHAR(1);                                41
    21                   DECLARE NAME_STR             CHAR(8) VARYING;                         42
    22                   DECLARE CHAR_INDEX           FIXED BINARY ALIGNED;                    43
    23                   DECLARE (PAGE_NUM,                                                    44
                                  REC_COUNT)          FIXED BINARY ALIGNED                     45
                                                      INIT(0);                                 46
    24                   ON ENDPAGE(SYSPRINT)                                                  47
    25                   BEGIN;                                                                48
    26                      PAGE_NUM = PAGE_NUM + 1;                                           49
    27                      PUT PAGE EDIT('PDSUNLDP V1.2.0','PAGE ',PAGE_NUM)                  50
                                         (A,COL(110),A,P'ZZ9');                                51
    28                      IF PAGE_NUM = 1 &                                                  52
                               LENGTH(EXEC_PARM)>0 THEN                                        53
    29                            PUT SKIP EDIT(' WITH PARM=',EXEC_PARM) (A,A);                54
    30                      PUT SKIP EDIT('MEMBER    USERID  CREATED    UPDATED      TIME',    55
                                          '   COMMENTS') (A,A);                                56
    31                      PUT SKIP;                                                          57
    32                   END;                                                                  58
    33                   SIGNAL ENDPAGE(SYSPRINT);                                             59
    34                   OPEN FILE(CARD_FILE) OUTPUT TITLE('CARDOUT');                         60
    35                   CALL P100_OPEN_PDS;                                                   61
    36                   CALL P600_CLOSE_PDS;                                                  62
                                                                                               63
    37                   PUT SKIP EDIT('MEMBER PROCESSED=',WS_MEMBER_COUNT)(A,F(10));          64
    38                   CLOSE FILE(CARD_FILE);                                                65
    39                   PUT SKIP(2) EDIT('PDSUNLDP V1.2.0 ENDED') (A);                        66
                                                                                               67
    40               P100_OPEN_PDS:PROC;                                                       68
    41                   PDSGET_REQUEST = PDSGET_REQUEST_OPEN;                                 69
    42                   PDSGET_MEMBER  = 'PDSIN   ';                                          70
    43                   CALL P900_CALL_GETPDSP;                                               71
    44                   IF PDSGET_RETURN_CODE = 0 THEN                                        72
    45                       CALL P200_START_DIR;                                              73
    46                   ELSE                                                                  74
    46                   IF PDSGET_RETURN_CODE = 4 THEN                                        75
    47                       PUT SKIP LIST('OPEN FAILED (RC=4)');                              76
    48                   ELSE                                                                  77
    48                   IF PDSGET_RETURN_CODE = 8 THEN                                        78
    49                   DO;                                                                   79
    50                       PUT SKIP LIST('OPEN FAILED (RC=8); EXECUTION TERMINATED');        80
           /************************ PDSUNLDP - PL/1 F VERSION *****************                            PAGE     16


    51                       STOP;                                                             81
    52                   END;                                                                  82
    53               END P100_OPEN_PDS;                                                        83
    54               P200_START_DIR:PROC;                                                      84
    55                   PDSGET_REQUEST = PDSGET_REQUEST_START;                                85
    56                   CALL P900_CALL_GETPDSP;                                               86
    57                   IF PDSGET_RETURN_CODE = 0 THEN                                        87
    58                       CALL P300_NEXT_DIR;                                               88
    59                   ELSE                                                                  89
    59                   IF PDSGET_RETURN_CODE = 4 THEN                                        90
    60                       PUT SKIP LIST('START FAILED (RC=4)');                             91
    61                   ELSE                                                                  92
    61                   IF PDSGET_RETURN_CODE = 8 THEN                                        93
    62                   DO;                                                                   94
    63                       PUT SKIP LIST('START FAILED (RC=8); EXECUTION TERMINATED');       95
    64                       STOP;                                                             96
    65                   END;                                                                  97
    66               END P200_START_DIR;                                                       98
    67               P300_NEXT_DIR:PROC;                                                       99
    68                   PDSGET_RETURN_CODE = 0;                                              100
    69                   DO WHILE(PDSGET_RETURN_CODE = 0);                                    101
    70                       PDSGET_REQUEST = PDSGET_REQUEST_NEXT;                            102
    71                       CALL P900_CALL_GETPDSP;                                          103
    72                       IF PDSGET_RETURN_CODE = 0 THEN                                   104
    73                       DO;                                                              105
    74                           CALL P400_LOCATE_MEMBER;                                     106
    75                           PDSGET_RETURN_CODE = 0;                                      107
    76                       END;                                                             108
    77                       ELSE                                                             109
    77                       IF PDSGET_RETURN_CODE = 4 THEN                                   110
    78                           PUT SKIP(2) LIST('END OF DIRECTORY (RC=4)');                 111
    79                       ELSE                                                             112
    79                       IF PDSGET_RETURN_CODE = 8 THEN                                   113
    80                       DO;                                                              114
    81                           PUT SKIP LIST(                                               115
                                              'NEXT FAILED (RC=8); EXECUTION TERMINATED');    116
    82                           STOP;                                                        117
    83                       END;                                                             118
    84                   END; /* DO UNTIL */                                                  119
    85               END P300_NEXT_DIR;                                                       120
    86               P400_LOCATE_MEMBER:PROC;                                                 121
    87                   PDSGET_REQUEST = PDSGET_REQUEST_LOCATE;                              122
    88                   CALL P900_CALL_GETPDSP;                                              123
    89                   IF PDSGET_RETURN_CODE = 0 THEN                                       124
    90                   DO;                                                                  125
                         /*  PUT SKIP LIST('MEMBER NAME=',PDSGET_MEMBER);  */                 126
    91                       CALL P700_PROCESS_STATS;                                         127
           /************************ PDSUNLDP - PL/1 F VERSION *****************                            PAGE     17


    92                       CALL P500_READ_MEMBER;                                           128
    93                   END;                                                                 129
    94                   ELSE                                                                 130
    94                   IF PDSGET_RETURN_CODE = 4 THEN                                       131
    95                       PUT SKIP LIST('MEMBER NOT FOUND (RC=4)');                        132
    96                   ELSE                                                                 133
    96                       IF PDSGET_RETURN_CODE = 8 THEN                                   134
    97                       DO;                                                              135
    98                           PUT SKIP LIST(                                               136
                                           'LOCATE FAILED (RC=8); EXECUTION TERMINATED');     137
    99                           STOP;                                                        138
   100                       END;                                                             139
   101               END P400_LOCATE_MEMBER;                                                  140
   102               P500_READ_MEMBER:PROC;                                                   141
   103                   PDSGET_REQUEST = PDSGET_REQUEST_READ;                                142
   104                   CALL P900_CALL_GETPDSP;                                              143
   105                   WS_MEMBER_COUNT=WS_MEMBER_COUNT+1;                                   144
   106                   IF PDSGET_RETURN_CODE = 0 THEN                                       145
   107                   DO;                                                                  146
   108                       REC_COUNT=0;                                                     147
   109                       NAME_WORK=PDSGET_MEMBER;                                         148
   110                       NAME_STR='';                                                     149
   111                       DO CHAR_INDEX=1 TO 8;                                            150
   112                           IF NAME_WORK_CHAR(CHAR_INDEX) > ' ' THEN                     151
   113                               NAME_STR=NAME_STR || NAME_WORK_CHAR(CHAR_INDEX);         152
   114                       END;                                                             153
   115                       PUT FILE(CARD_FILE) EDIT('./  ADD NAME=',NAME_STR)               154
                                                     (A);                                     155
   116                       IF LENGTH(EXEC_PARM)>0 THEN                                      156
   117                          PUT FILE(CARD_FILE) EDIT(',',EXEC_PARM)                       157
                                                     (A,A);                                   158
   118                       DO WHILE (PDSGET_RETURN_CODE = 0);                               159
   119                          PUT FILE(CARD_FILE) EDIT(PDSGET_RECORD80) (SKIP,A);           160
   120                          REC_COUNT=REC_COUNT+1;                                        161
   121                          CALL P900_CALL_GETPDSP;                                       162
   122                       END;                                                             163
   123                   END;                                                                 164
                                                                                              165
   124                   IF PDSGET_RETURN_CODE = 4 THEN                                       166
   125                       PUT EDIT('END OF MEMBER (RC=4)',REC_COUNT,' RECORDS READ')       167
                                     (X(2),A,F(5),A);                                         168
   126                   ELSE                                                                 169
   126                       IF PDSGET_RETURN_CODE = 8 THEN                                   170
   127                       DO;                                                              171
   128                           PUT SKIP LIST(                                               172
                                           'READ FAILED (RC=8); EXECUTION TERMINATED');       173
   129                           STOP;                                                        174
           /************************ PDSUNLDP - PL/1 F VERSION *****************                            PAGE     18


   130                       END;                                                             175
   131               END P500_READ_MEMBER;                                                    176
   132               P600_CLOSE_PDS:PROC;                                                     177
   133                   PDSGET_REQUEST = PDSGET_REQUEST_CLOSE;                               178
   134                   CALL P900_CALL_GETPDSP;                                              179
   135                   IF PDSGET_RETURN_CODE = 4 THEN                                       180
   136                       PUT SKIP LIST('CLOSE FAILED (RC=4)');                            181
   137                   ELSE                                                                 182
   137                   IF PDSGET_RETURN_CODE = 8 THEN                                       183
   138                   DO;                                                                  184
   139                       PUT SKIP LIST('CLOSE FAILED (RC=8); EXECUTION TERMINATED');      185
   140                       STOP;                                                            186
   141                   END;                                                                 187
   142               END P600_CLOSE_PDS;                                                      188
   143               P700_PROCESS_STATS:PROC;                                                 189
   144                   DECLARE  DATE_WORK                CHAR(10),                          190
                                  DATE_CONV                PIC '(7)9BBB',                     191
                                  TIME_WORK                CHAR(5);                           192
                                                                                              193
   145                   PDSGET_PTR = ADDR(PDSGET_RECORD80);                                  194
   146                   PUT SKIP EDIT(PDSGET_MEMBER,PDS_USER_ID) (A,X(2),A);                 195
   147                   IF PDS_USER_ID = (8)' ' THEN RETURN;                                 196
                                                                                              197
   149                   DC_INPUT_FORMAT =  'YYYYDDD ';                                       198
   150                   DATE_CONV       =   PDS_DATE_CREATED;                                199
   151                   DC_INPUT_DATE   =   DATE_CONV;                                       200
   152                   DC_OUTPUT_FORMAT = 'YYYYMMDD';                                       201
   153                   CALL DATCNVP(DATECNV_PARM);                                          202
   154                   PUT EDIT(SUBSTR(DC_OUTPUT_DATE,1,4),'/') (A,A)                       203
                                 (SUBSTR(DC_OUTPUT_DATE,5,2),'/') (A,A)                       204
                                 (SUBSTR(DC_OUTPUT_DATE,7,2),' ') (A,A);                      205
                                                                                              206
   155                   DC_INPUT_FORMAT =  'YYYYDDD ';                                       207
   156                   DATE_CONV       =   PDS_DATE_UPDATED;                                208
   157                   DC_INPUT_DATE   =   DATE_CONV;                                       209
   158                   DC_OUTPUT_FORMAT = 'YYYYMMDD';                                       210
   159                   CALL DATCNVP(DATECNV_PARM);                                          211
   160                   PUT EDIT(SUBSTR(DC_OUTPUT_DATE,1,4),'/') (A,A)                       212
                                 (SUBSTR(DC_OUTPUT_DATE,5,2),'/') (A,A)                       213
                                 (SUBSTR(DC_OUTPUT_DATE,7,2),' ') (A,A);                      214
                                                                                              215
   161                   SUBSTR(TIME_WORK,1,2) = PDS_TIME_CONVERSION(PDS_TIME_CHANGED_H);     216
   162                   SUBSTR(TIME_WORK,3,1) = ':';                                         217
   163                   SUBSTR(TIME_WORK,4,2) = PDS_TIME_CONVERSION(PDS_TIME_CHANGED_M);     218
                                                                                              219
   164                   PUT EDIT(TIME_WORK) (X(2),A);                                        220
                                                                                              221
           /************************ PDSUNLDP - PL/1 F VERSION *****************                            PAGE     19


   165               END P700_PROCESS_STATS;                                                  222
   166               P900_CALL_GETPDSP:PROC;                                                  223
   167                   CALL GETPDSP (PDSGET_REQUEST_1,                                      224
                                       PDSGET_MEMBER_1,                                       225
                                       PDSGET_RECORD80_1,                                     226
                                       PDSGET_RETURN_CODE_1);                                 227
   168               END P900_CALL_GETPDSP;                                                   228
                                                                                              229
   169               END PDSUNLD;                                                             230
           /************************ PDSUNLDP - PL/1 F VERSION *****************                            PAGE     20


          STORAGE REQUIREMENTS.
          ----------------------

          THE STORAGE AREA FOR THE PROCEDURE LABELLED PDSUNLD IS 320 BYTES LONG.

          THE STORAGE AREA (IN STATIC) FOR THE PROCEDURE LABELLED PDS_TIME_CONVERSION IS 264 BYTES LONG.

          THE STORAGE AREA FOR THE ON UNIT AT STATEMENT NO. 25 IS 260 BYTES LONG.

          THE STORAGE AREA (IN STATIC) FOR THE PROCEDURE LABELLED P100_OPEN_PDS IS 248 BYTES LONG.

          THE STORAGE AREA (IN STATIC) FOR THE PROCEDURE LABELLED P200_START_DIR IS 248 BYTES LONG.

          THE STORAGE AREA (IN STATIC) FOR THE PROCEDURE LABELLED P300_NEXT_DIR IS 248 BYTES LONG.

          THE STORAGE AREA (IN STATIC) FOR THE PROCEDURE LABELLED P400_LOCATE_MEMBER IS 248 BYTES LONG.

          THE STORAGE AREA (IN STATIC) FOR THE PROCEDURE LABELLED P500_READ_MEMBER IS 284 BYTES LONG.

          THE STORAGE AREA (IN STATIC) FOR THE PROCEDURE LABELLED P600_CLOSE_PDS IS 248 BYTES LONG.

          THE STORAGE AREA (IN STATIC) FOR THE PROCEDURE LABELLED P700_PROCESS_STATS IS 324 BYTES LONG.

          THE STORAGE AREA (IN STATIC) FOR THE PROCEDURE LABELLED P900_CALL_GETPDSP IS 248 BYTES LONG.

          THE PROGRAM CSECT IS NAMED PDSUNLD  AND IS 3862 BYTES LONG.

          THE STATIC  CSECT IS NAMED PDSUNLDA AND IS 4240 BYTES LONG.


*STATISTICS*     MACRO RECORDS =      380,SOURCE RECORDS =      381,PROG TEXT STMNTS =      169,OBJECT BYTES =     3862
           /************************ PDSUNLDP - PL/1 F VERSION *****************                            PAGE     21


TABLE OF OFFSETS AND STATEMENT NUMBERS WITHIN PROCEDURE          PDS_TIME_CONVERSION

OFFSET (HEX)  0000 005C 0064 006C 0072 0084 008E 00A6
STATEMENT NO     9   12   13   14   15   16   17   18


TABLE OF OFFSETS AND STATEMENT NUMBERS WITHIN ON UNIT

OFFSET (HEX)  0000 0048 0058 00C4 010C 0154 0194 01A4
STATEMENT NO    25   26   27   28   29   30   31   32


TABLE OF OFFSETS AND STATEMENT NUMBERS WITHIN PROCEDURE          P100_OPEN_PDS

OFFSET (HEX)  0000 003C 0042 0048 0052 005E 006C 0078 009A 00A6 00A6 00C4 00CA 00CA
STATEMENT NO    40   41   42   43   44   45   46   47   48   49   50   51   52   53


TABLE OF OFFSETS AND STATEMENT NUMBERS WITHIN PROCEDURE          P200_START_DIR

OFFSET (HEX)  0000 003C 0042 004C 0058 0066 0072 0094 00A0 00A0 00BE 00C4 00C4
STATEMENT NO    54   55   56   57   58   59   60   61   62   63   64   65   66


TABLE OF OFFSETS AND STATEMENT NUMBERS WITHIN PROCEDURE          P300_NEXT_DIR

OFFSET (HEX)  0000 003C 0042 004E 0054 005E 006A 006A 0074 007A 007E 008A 00AC 00B8 00B8 00D6 00DC 00DC 00E0
STATEMENT NO    67   68   69   70   71   72   73   74   75   76   77   78   79   80   81   82   83   84   85


TABLE OF OFFSETS AND STATEMENT NUMBERS WITHIN PROCEDURE          P400_LOCATE_MEMBER

OFFSET (HEX)  0000 0040 0046 0050 005C 005C 0066 0070 0074 0080 00A2 00AE 00AE 00CC 00D2 00D2
STATEMENT NO    86   87   88   89   90   91   92   93   94   95   96   97   98   99  100  101


TABLE OF OFFSETS AND STATEMENT NUMBERS WITHIN PROCEDURE          P500_READ_MEMBER

OFFSET (HEX)  0000 0040 0046 0050 0060 006C 006C 0072 0078 007E 0086 009C 00FE 011A 0156 016A 01B2 01BE 01FE 020E 0218
STATEMENT NO   102  103  104  105  106  107  108  109  110  111  112  113  114  115  116  117  118  119  120  121  122

OFFSET (HEX)  021C 021C 0228 0298 02A4 02A4 02C2 02C8 02C8
STATEMENT NO   123  124  125  126  127  128  129  130  131


TABLE OF OFFSETS AND STATEMENT NUMBERS WITHIN PROCEDURE          P600_CLOSE_PDS
           /************************ PDSUNLDP - PL/1 F VERSION *****************                            PAGE     22


OFFSET (HEX)  0000 003C 0042 004C 0058 007A 0086 0086 00A4 00AA 00AA
STATEMENT NO   132  133  134  135  136  137  138  139  140  141  142


TABLE OF OFFSETS AND STATEMENT NUMBERS WITHIN PROCEDURE          P700_PROCESS_STATS

OFFSET (HEX)  0000 0040 004C 00AE 00C0 00C6 00CC 00E6 00EC 00F2 00FC 01D8 01DE 01F8 01FE 0204 020E 02EA 0330 0338 037E
STATEMENT NO   143  145  146  147  148  149  150  151  152  153  154  155  156  157  158  159  160  161  162  163  164

OFFSET (HEX)  03BE
STATEMENT NO   165


TABLE OF OFFSETS AND STATEMENT NUMBERS WITHIN PROCEDURE          P900_CALL_GETPDSP

OFFSET (HEX)  0000 0040 004A
STATEMENT NO   166  167  168


TABLE OF OFFSETS AND STATEMENT NUMBERS WITHIN PROCEDURE          PDSUNLD

OFFSET (HEX)  0000 008C 009A 00B0 00BA 00C4 00CE 0112 011C 014A
STATEMENT NO     1   24   33   34   35   36   37   38   39  169
           /************************ PDSUNLDP - PL/1 F VERSION *****************                            PAGE     23


    COMPILER DIAGNOSTICS.




 ERRORS.


    IEM2867I          IMPLEMENTATION RESTRICTION. EXTERNAL NAME CARD_FILE HAS BEEN TRUNCATED TO 7 CHARACTERS.




 WARNINGS.


    IEM0227I          NO FILE/STRING OPTION SPECIFIED IN ONE OR MORE GET/PUT STATEMENTS. SYSIN/SYSPRINT HAS BEEN


                      ASSUMED IN EACH CASE.


    IEM0764I          ONE OR MORE FIXED BINARY ITEMS OF PRECISION 15 OR LESS HAVE BEEN GIVEN HALFWORD STORAGE. THEY


                      ARE FLAGGED '*********' IN THE XREF/ATR LIST.





 END OF DIAGNOSTICS.


AUXILIARY STORAGE WILL NOT BE USED FOR DICTIONARY WHEN SIZE = 120K


COMPILE TIME         .00 MINS

ELAPSED TIME         .01 MINS

 F64-LEVEL LINKAGE EDITOR OPTIONS SPECIFIED XREF,LIST
          DEFAULT OPTION(S) USED -  SIZE=(231424,55296)



                                                CROSS REFERENCE TABLE


  CONTROL SECTION                       ENTRY

    NAME    ORIGIN  LENGTH                NAME   LOCATION     NAME   LOCATION     NAME   LOCATION     NAME   LOCATION
  PDSUNLD       00     F16
  PDSUNLDA     F18    1090
  IHEMAIN     1FA8       4
  IHENTRY     1FB0       C
  CARDILE     1FC0      38
  IHESPRT     1FF8      38
  IHEDOA  *   2030     23A
                                        IHEDOAA     2030    IHEDOAB     2032
  IHEDBN  *   2270     167
                                        IHEDBNA     2270
  IHEDCN  *   23D8     256
                                        IHEDCNA     23D8    IHEDCNB     23DA
  IHEDMA  *   2630      F8
                                        IHEDMAA     2630
  IHEDNC  *   2728     2B2
                                        IHEDNCA     2728
  IHEIOD  *   29E0     29A
                                        IHEIODG     29E0    IHEIODP     29E2    IHEIODT     2ADA
  IHEVQC  *   2C80     268
                                        IHEVQCA     2C80
  IHEERR  *   2EE8     745
                                        IHEERRD     2EE8    IHEERRC     2EF2    IHEERRB     2EFC    IHEERRA     2F06
                                        IHEERRE     3596
  IHEUPA  *   3630      E8
                                        IHEUPAA     3630    IHEUPAB     369A
  IHEUPB  *   3718      E4
                                        IHEUPBA     3718    IHEUPBB     3780
  IHEVFA  *   3800     16C
                                        IHEVFAA     3800
  IHEVFB  *   3970      F0
                                        IHEVFBA     3970
  IHEVFC  *   3A60      26
                                        IHEVFCA     3A60
  IHEVFD  *   3A88      66
                                        IHEVFDA     3A88
  IHEVFE  *   3AF0      20
                                        IHEVFEA     3AF0
  IHEVKB  *   3B10     30A
                                        IHEVKBA     3B10
  IHEVKC  *   3E20     2D0
                                        IHEVKCA     3E20
  IHEVKF  *   40F0     67C
                                        IHEVKFA     40F0
  IHEVKG  *   4770     4DE


    NAME    ORIGIN  LENGTH                NAME   LOCATION     NAME   LOCATION     NAME   LOCATION     NAME   LOCATION
                                        IHEVKGA     4770
  IHEVPA  *   4C50     1E0
                                        IHEVPAA     4C50
  IHEVPB  *   4E30     1A2
                                        IHEVPBA     4E30
  IHEVPC  *   4FD8     1F0
                                        IHEVPCA     4FD8
  IHEVPD  *   51C8     105
                                        IHEVPDA     51C8
  IHEVPE  *   52D0     278
                                        IHEVPEA     52D0
  IHEVPF  *   5548      50
                                        IHEVPFA     5548
  IHEVPG  *   5598     229
                                        IHEVPGA     5598
  IHEVPH  *   57C8      B4
                                        IHEVPHA     57C8
  IHEABN  *   5880       C
                                        IHEABND     5880
  IHEM91  *   5890     178
                                        IHEM91B     5890    IHEM91A     5898    IHEM91C     59AA
  IHETER  *   5A08     110
                                        IHETERA     5A08
  IHEVQB  *   5B18     4DC
                                        IHEVQBA     5B18
  IHEVQA  *   5FF8      FC
                                        IHEVQAA     5FF8
  IHEVSB  *   60F8      CE
                                        IHEVSBA     60F8
  IHEVSC  *   61C8      AC
                                        IHEVSCA     61C8
  IHEVSE  *   6278     15D
                                        IHEVSEA     6278    IHEVSEB     627A
  IHEVSF  *   63D8      EC
                                        IHEVSFA     63D8
  IHEIOF  *   64C8     2DC
                                        IHEIOFB     64C8    IHEIOFA     64CA    IHEITAZ     6766    IHEITAX     6772
                                        IHEITAA     6786
  IHEDOB  *   67A8     144
                                        IHEDOBA     67A8    IHEDOBB     67AA    IHEDOBC     67AC
  IHEDOE  *   68F0      DA
                                        IHEDOEA     68F0
  IHEIOP  *   69D0     1F7
                                        IHEIOPA     69D0    IHEIOPB     69D2    IHEIOPC     69D6
  IHEIOX  *   6BC8     14C
                                        IHEIOXA     6BC8    IHEIOXB     6BCA    IHEIOXC     6BCE
  IHELDO  *   6D18     418
                                        IHELDOA     6D18    IHELDOB     6D1A    IHELDOC     6D1E
  IHESAP  *   7130     B1C
                                        IHESADA     7130    IHESAPC     714A    IHESAPD     7152    IHESAPA     715A
                                        IHESAPB     7162    IHESADF     716A    IHESADB     7172    IHESADE     717A
                                        IHESAFC     7182    IHESAFA     718A    IHESAFB     7192    IHESAFD     719A


    NAME    ORIGIN  LENGTH                NAME   LOCATION     NAME   LOCATION     NAME   LOCATION     NAME   LOCATION
                                        IHESARA     71A2    IHESAFQ     71AA    IHESARC     799C    IHESADD     7AB0
                                        IHESAFF     7AEA
  IHEBEG  *   7C50      80
                                        IHEBEGN     7C50    IHEBEGA     7C90
  IHEDDO  *   7CD0     288
                                        IHEDDOA     7CD0    IHEDDOB     7CD2    IHEDDOC     7CD4    IHEDDOD     7CD6
                                        IHEDDOE     7CD8
  IHEOCL  *   7F58     580
                                        IHEOCLA     7F58    IHEOCLB     7F5A    IHEOCLC     7F5C    IHEOCLD     7F5E
  IHEPRT  *   84D8     308
                                        IHEPRTA     84D8    IHEPRTB     84DA
  IHESIZ  *   87E0       C
                                        IHESIZE     87E0
  IHETAB  *   87F0       C
                                        IHETABS     87F0
  IHEDDP  *   8800     28C
                                        IHEDDPA     8800    IHEDDPB     8802    IHEDDPC     8804    IHEDDPD     8806
  DATECNV *   8A90     30A
                                        DATCNVP     8A98
  GETPDS  *   8DA0     604
                                        NCZ93205    8DA0    GETPDSP     8DA8
  @GETDIR *   93A8     214
  IHECSK  *   95C0     13A
                                        IHECSKR     95C0    IHECSKK     95EC
  IHEIOB  *   9700     1E0
                                        IHEIOBA     9700    IHEIOBB     9708    IHEIOBC     9710    IHEIOBD     9718
                                        IHEIOBE     9720    IHEIOBT     9808
  IHEOSS  *   98E0      34
                                        IHEOSSA     98E0



  LOCATION  REFERS TO SYMBOL  IN CONTROL SECTION             LOCATION  REFERS TO SYMBOL  IN CONTROL SECTION
       10            PDSUNLDA        PDSUNLDA                     218            PDSUNLDA        PDSUNLDA
      F38            IHESADA         IHESAP                       F3C            IHESADB         IHESAP
      F40            PDSUNLD         PDSUNLD                      F44            PDSUNLD         PDSUNLD
      FCC            PDSUNLD         PDSUNLD                      FD0            PDSUNLD         PDSUNLD
      FD4            PDSUNLD         PDSUNLD                      FD8            PDSUNLD         PDSUNLD
      FDC            PDSUNLD         PDSUNLD                      FE0            PDSUNLD         PDSUNLD
      FE4            PDSUNLD         PDSUNLD                      FE8            PDSUNLD         PDSUNLD
      FEC            PDSUNLD         PDSUNLD                      FF0            PDSUNLD         PDSUNLD
      FF4            PDSUNLD         PDSUNLD                      FF8            IHELDOB         IHELDO
      FFC            IHEIOXC         IHEIOX                      1000            IHEIOXC         IHEIOX
     1004            IHEIOXB         IHEIOX                      1008            IHEIOXB         IHEIOX
     100C            IHEIOPB         IHEIOP                      1010            IHEIOPB         IHEIOP
     1014            IHEDOEA         IHEDOE                      1018            IHEDOEA         IHEDOE
     101C            IHEDOBB         IHEDOB                      1020            IHEDOBB         IHEDOB
     1024            IHEDOAA         IHEDOA                      1028            IHEDOAA         IHEDOA
     102C            IHEIOBA         IHEIOB                      1030            IHEOCLB         IHEOCL
     1034            IHEOCLA         IHEOCL                      1038            IHEIOBC         IHEIOB
     103C            IHEIOBT         IHEIOB                      1040            IHEIOBB         IHEIOB
     1044            IHEOSSA         IHEOSS                      1048            IHEERRB         IHEERR


  LOCATION  REFERS TO SYMBOL  IN CONTROL SECTION             LOCATION  REFERS TO SYMBOL  IN CONTROL SECTION
      F48            IHESAFA         IHESAP                      104C            IHESAFB         IHESAP
     1050            IHECSKK         IHECSK                      1054            DATCNVP         DATECNV
     1058            GETPDSP         GETPDS                      105C            CARDILE         CARDILE
     1060            IHESPRT         IHESPRT                     146C            IHESPRT         IHESPRT
     1471            PDSUNLD         PDSUNLD                     1474            IHESPRT         IHESPRT
     1479            PDSUNLD         PDSUNLD                     147C            IHESPRT         IHESPRT
     1481            PDSUNLD         PDSUNLD                     1484            IHESPRT         IHESPRT
     1488            PDSUNLD         PDSUNLD                     1490            IHESPRT         IHESPRT
     1494            PDSUNLD         PDSUNLD                     149C            IHESPRT         IHESPRT
     14A0            PDSUNLD         PDSUNLD                     14A8            IHESPRT         IHESPRT
     14AC            PDSUNLD         PDSUNLD                     14B4            IHESPRT         IHESPRT
     14B9            PDSUNLD         PDSUNLD                     14BC            CARDILE         CARDILE
     14C1            PDSUNLD         PDSUNLD                     14C4            CARDILE         CARDILE
     14C9            PDSUNLD         PDSUNLD                     14CC            CARDILE         CARDILE
     14D1            PDSUNLD         PDSUNLD                     14D4            IHESPRT         IHESPRT
     14D8            PDSUNLD         PDSUNLD                     14E0            IHESPRT         IHESPRT
     14E4            PDSUNLD         PDSUNLD                     14EC            IHESPRT         IHESPRT
     14F0            PDSUNLD         PDSUNLD                     14F8            IHESPRT         IHESPRT
     14FC            PDSUNLD         PDSUNLD                     1504            IHESPRT         IHESPRT
     1508            PDSUNLD         PDSUNLD                     1510            IHESPRT         IHESPRT
     1514            PDSUNLD         PDSUNLD                     151C            IHESPRT         IHESPRT
     1520            PDSUNLD         PDSUNLD                     1528            IHESPRT         IHESPRT
     152C            PDSUNLD         PDSUNLD                     1534            IHESPRT         IHESPRT
     1538            PDSUNLD         PDSUNLD                     1540            CARDILE         CARDILE
     154C            IHESPRT         IHESPRT                     1550            PDSUNLD         PDSUNLD
     1558            CARDILE         CARDILE                     1578            IHESPRT         IHESPRT
     157C            PDSUNLD         PDSUNLD                     1584            IHESPRT         IHESPRT
     1588            PDSUNLD         PDSUNLD                     1590            IHESPRT         IHESPRT
     1594            PDSUNLD         PDSUNLD                     159C            IHESPRT         IHESPRT
     15A1            PDSUNLD         PDSUNLD                     1FA8            PDSUNLD         PDSUNLD
     1FB8            IHESAPC         IHESAP                      2250            IHEIODP         IHEIOD
     2254            IHEIODT         IHEIOD                      2258            IHEDMAA         IHEDMA
     225C            IHEDCNA         IHEDCN                      2260            IHEDBNA         IHEDBN
     2264            IHEVQCA         IHEVQC                      23C0            IHEDMAA         IHEDMA
     23C4            IHEUPBB         IHEUPB                      23C8            IHEUPAB         IHEUPA
     23CC            IHEERRB         IHEERR                      25F4            IHEDMAA         IHEDMA
     25F8            IHEVQBA         IHEVQB                      25FC            IHEERRB         IHEERR
     2600            IHEUPAB         IHEUPA                      2604            IHEUPBB         IHEUPB
     2608            IHEUPAA         IHEUPA                      260C            IHEUPBA         IHEUPB
     269C            IHEVFBA         IHEVFB                      26A0            IHEVFCA         IHEVFC
     26A8            IHEVFAA         IHEVFA                      26AC            IHEVPAA         IHEVPA
     26B0            IHEVKGA         IHEVKG                      26B4            IHEVPDA         IHEVPD
     26B8            IHEVKFA         IHEVKF                      26BC            IHEVPBA         IHEVPB
     26C0            IHEVPCA         IHEVPC                      26EC            IHEVFDA         IHEVFD
     26F0            IHEVFEA         IHEVFE                      26F8            IHEVPHA         IHEVPH
     26FC            IHEVPGA         IHEVPG                      2700            IHEVKCA         IHEVKC
     2704            IHEVPFA         IHEVPF                      2708            IHEVKBA         IHEVKB
     270C            IHEVPEA         IHEVPE                      29BC            IHEDMAA         IHEDMA
     29C0            IHEUPAB         IHEUPA                      29C4            IHEVSCA         IHEVSC
     29C8            IHEVSEB         IHEVSE                      29CC            IHEVQCA         IHEVQC
     2C68            IHEIOFA         IHEIOF                      2C6C            IHEERRB         IHEERR
     2C70            IHEERRC         IHEERR                      2DD0            IHEVSEB         IHEVSE


  LOCATION  REFERS TO SYMBOL  IN CONTROL SECTION             LOCATION  REFERS TO SYMBOL  IN CONTROL SECTION
     2E54            IHEERRC         IHEERR                      2E70            IHEERRB         IHEERR
     2EC4            IHEVSCA         IHEVSC                      35DC            IHEM91A         IHEM91
     35E0            IHEM91B         IHEM91                      35E4            IHEM91C         IHEM91
     35E8            IHEABND         IHEABN                      360C            IHETERA         IHETER
     37F4            IHEDMAA         IHEDMA                      3A48            IHEERRB         IHEERR
     4764            IHEERRB         IHEERR                      4C3C            IHEERRB         IHEERR
     4E2C            IHEERRB         IHEERR                      4FB0            IHEERRC         IHEERR
     4FC0            IHEERRB         IHEERR                      51B0            IHEERRC         IHEERR
     51B4            IHEERRB         IHEERR                      52C0            IHEERRB         IHEERR
     5530            IHEERRB         IHEERR                      57B4            IHEERRB         IHEERR
     5878            IHEERRB         IHEERR                      59F0            IHEERRC         IHEERR
     5F28            IHEERRB         IHEERR                      5F2C            IHEVQAA         IHEVQA
     60DC            IHEERRB         IHEERR                      63C8            IHEERRB         IHEERR
     63CC            IHEERRC         IHEERR                      64BC            IHEERRC         IHEERR
     6794            IHEERRB         IHEERR                      6798            IHEERRC         IHEERR
     68CC            IHEERRC         IHEERR                      68D0            IHEIODP         IHEIOD
     68D4            IHEIODT         IHEIOD                      68D8            IHEDNCA         IHEDNC
     68DC            IHEVSCA         IHEVSC                      68E0            IHEVSEA         IHEVSE
     68E4            IHEVSBA         IHEVSB                      68E8            IHEVSFA         IHEVSF
     69B0            IHEVSBA         IHEVSB                      69B4            IHEDMAA         IHEDMA
     69B8            IHEIODP         IHEIOD                      69BC            IHEIODT         IHEIOD
     69C0            IHEDCNA         IHEDCN                      69C4            IHEDBNA         IHEDBN
     6BAC            IHEIOFA         IHEIOF                      6BB0            IHEERRB         IHEERR
     6BB4            IHEERRC         IHEERR                      6CFC            IHEERRB         IHEERR
     6D00            IHEERRC         IHEERR                      6D04            IHEIODG         IHEIOD
     6D08            IHEIODP         IHEIOD                      6D0C            IHEIODT         IHEIOD
     6D10            IHEIOFA         IHEIOF                      711C            IHEERRC         IHEERR
     7120            IHEIOFA         IHEIOF                      7124            IHEVSBA         IHEVSB
     7128            IHEVSCA         IHEVSC                      712C            IHEDNCA         IHEDNC
     7B4C            IHEMAIN         IHEMAIN                     7B6C            IHEOCLD         IHEOCL
     7B70            IHESIZE         IHESIZ                      7B74            IHEBEGA         IHEBEG
     7BF8            IHEITAX         IHEIOF                      7BFC            IHEERRB         IHEERR
     7C00            IHEERRC         IHEERR                      7C04            IHETABS         IHETAB
     7C08            IHEITAZ         IHEIOF                      739D            IHEERRA         IHEERR
     7C3C            IHEPRTA         IHEPRT                      7C40            IHEPRTB         IHEPRT
     7C44            IHEDDOD         IHEDDO                      7C48            IHEOCLC         IHEOCL
     7F38            IHEIOFA         IHEIOF                      7F3C            IHELDOC         IHELDO
     7F40            IHEPRTB         IHEPRT                      7F44            IHEDDPA         IHEDDP
     7F48            IHEDDPB         IHEDDP                      7F4C            IHEDDPC         IHEDDP
     7F50            IHEDDPD         IHEDDP                      84B8            IHEIOFA         IHEIOF
     84C0            IHEERRB         IHEERR                      84C4            IHEERRC         IHEERR
     87AC            IHEOCLA         IHEOCL                      87B0            IHEIOFA         IHEIOF
     87B4            IHESPRT         IHESPRT                     9380            @GETDIR         @GETDIR
     9388            @GETDIR         @GETDIR                     98B4            IHEIOPA         IHEIOP
     98B8            IHEIOPB         IHEIOP                      98BC            IHEIOPC         IHEIOP
     98C0            IHEIOPA         IHEIOP                      98C4            IHEOCLC         IHEOCL
     98D8            IHEERRB         IHEERR                      98DC            IHEERRC         IHEERR
     990C            IHEERRB         IHEERR                      9910            IHESAFQ         IHESAP

  LOCATION   5B14 REQUESTS CUMULATIVE PSEUDO REGISTER LENGTH

 PSEUDO REGISTERS



    NAME    ORIGIN  LENGTH        NAME    ORIGIN  LENGTH        NAME    ORIGIN  LENGTH        NAME    ORIGIN  LENGTH
  IHEQINV       00       4      IHEQERR        4       4      IHEQTIC        8       4      IHEQLWF        C       4
  IHEQSLA       10       4      IHEQLW0       14       4      PDSUNLDB      18       4      PDSUNLDC      1C       4
  PDSUNLDD      20       4      PDSUNLDE      24       4      PDSUNLDF      28       4      PDSUNLDG      2C       4
  PDSUNLDH      30       4      PDSUNLDI      34       4      PDSUNLDJ      38       4      PDSUNLDK      3C       4
  PDSUNLDL      40       4      CARDILE       44       4      IHEQSPR       48       4      IHEQLSA       4C       4
  IHEQLW1       50       4      IHEQLW2       54       4      IHEQLW3       58       4      IHEQLW4       5C       4
  IHEQLWE       60       4      IHEQLCA       64       4      IHEQVDA       68       4      IHEQFVD       6C       4
  IHEQFOP       70       4      IHEQCFL       74       8      IHEQADC       7C       4      IHEQLPR       80       4
  IHEQSAR       84       4      IHEQRTC       88       4      IHEQSFC       8C       4      IHEQXLV       90       8

  IHEQEVT       98       8
 TOTAL LENGTH OF PSEUDO REGISTERS      A0
 ENTRY ADDRESS     1FB0

 TOTAL LENGTH      9918
****PDSUNLDP  DOES NOT EXIST BUT HAS BEEN ADDED TO DATA SET
AUTHORIZATION CODE IS         0.
                                                                                                            PAGE      1
VERSION 5.5                                     OS/360 PL/I COMPILER (F)                                    DATE 23.096


PL/I F COMPILER OPTIONS SPECIFIED ARE AS FOLLOWS--

     MACRO


THE COMPLETE LIST OF OPTIONS USED DURING THIS COMPILATION IS--   EBCDIC
                                                                 CHAR60
                                                                 MACRO
                                                                 SOURCE2
                                                               NOMACDCK
                                                                 COMP
                                                                 SOURCE
                                                               NOATR
                                                               NOXREF
                                                               NOEXTREF
                                                               NOLIST
                                                                 LOAD
                                                               NODECK
                                                                 FLAGW
                                                               NOSTMT
                                                                 SIZE=1028712
                                                                 LINECNT=050
                                                                 OPT=01
                                                                 SORMGIN=(002,072)
                                                               NOEXTDIC
                                                               NONEST
                                                                 OPLIST
                                                                 SYNCHKT


*OPTIONS IN EFFECT*     EBCDIC,CHAR60,MACRO,SOURCE2,NOMACDCK,COMP,SOURCE,NOATR,NOXREF,NOEXTREF,NOLIST,LOAD,
*OPTIONS IN EFFECT*     NODECK,FLAGW,NOSTMT,SIZE=1028712,LINECNT=050,OPT=01,SORMGIN=(002,072),NOEXTDIC,
*OPTIONS IN EFFECT*     NONEST,OPLIST,SYNCHKT
           /********************** PDSCANR V1.1.1 *******************************/                          PAGE      2


   COMPILE-TIME MACRO PROCESSOR
   MACRO SOURCE2 LISTING

     1    /********************** PDSCANR V1.1.1 *******************************/
     2    /*********************************************************************/
     3    /*                                                                   */
     4    /* NAME: PDSCANR - SCAN A PDS FOR GIVEN STRINGS.                     */
     5    /*                                                                   */
     6    /*********************************************************************/
     7    /*                                                                   */
     8    /*  (C) COPYRIGHT 2023  EDWARD G LISS      ALL RIGHTS RESERVED       */
     9    /*                                                                   */
    10    /*  THIS SOURCE CODE AS WELL AS ANY OBJECT CODE RESULTING FROM THIS  */
    11    /*  SOURCE CODE MAY BE DISTRIBUTED FREELY PROVIDED NO FEE IS CHARGED */
    12    /*  AND FOR NON-COMERCIAL PURPOSES.                                  */
    13    /*                                                                   */
    14    /*  FOR COMMERCIAL DISTRIBUTION RIGHTS, CONTACT THE COPYRIGHT OWNER. */
    15    /*                                                                   */
    16    /*********************************************************************/
    17    /*                                                                   */
    18    /*   THIS PROGRAM READS ALL THE MEMBERS OF A PDS AND SCANS EACH      */
    19    /*   EACH RECORD FOR GIVEN STRINGS.  THE STRINGS ARE ENTERED VIA     */
    20    /*   THE SYSIN DD.  EACH STRING CAN BE UP TO 8 CHARACTERS AND MUST   */
    21    /*   BE ENCLOSED IN QUOTES (I.E. 'STRING').  STRINGS ARE SEPERATED   */
    22    /*   BY COMMAS.  NO SEQUENCE NUMBERS IN 73-80.                       */
    23    /*                                                                   */
    24    /*   THE PDS TO SCAN IS POINTED TO BY DDNAME PDSIN.                  */
    25    /*                                                                   */
    26    /*   AN EXEC PARM CAN BE GIVEN - THE DEFAULT OF ANY WILL PRINT       */
    27    /*   WHEN IT MATCHES ANY OF THE SEARCH STRINGS.  A PARM OF 'ALL'     */
    28    /*   WILL PRINT WHEN ALL THE STRINGS ARE FOUND IN A RECORD.          */
    29    /*                                                                   */
    30    /* REVISION HISTORY                                                  */
    31    /* ------  --------------------------------------------------------  */
    32    /* V1.0.0  NEW PROGRAM.  OCTOBER, 2012                               */
    33    /*                                                                   */
    34    /* V1.1.0  BUG FIX.  07/22/2020                                      */
    35    /*         PROBLEM:  FIRST RECORD OF EACH MEMBER WAS BEING SKIPPED.  */
    36    /*         BUG IN GETPDSP DID NOT RETURN 1ST RECORD ON 1ST CALL.     */
    37    /*                                                                   */
    38    /* V1.1.1  CLEAN UP. 03/31/2023                                      */
    39    /*         MODIFIED TO USE INCLUDES FOR PDSGET_PARAMETERS.           */
    40    /*         NO FUNCTIONAL CHANGES.                                    */
    41    /*                                                                   */
    42    /*********************************************************************/
    43
    44    PDSCANR:PROCEDURE(EXEC_PARM) OPTIONS(MAIN);
           /********************** PDSCANR V1.1.1 *******************************/                          PAGE      3


   MACRO SOURCE2 LISTING

    45
    46        DECLARE EXEC_PARM            CHAR(100) VARYING;
    47        DECLARE LAST_MEMBER          CHAR(8) INITIAL((8)' ');
    48        DECLARE PAGE_CTR             INITIAL(0)    FIXED DECIMAL(5,0);
    49        DECLARE (ANY_OPTION,       INITIAL('0'B),
    50                 ALL_OPTION        INITIAL('0'B))  BIT(1) ALIGNED;
    51        DECLARE
    52           1  WS_MEMBER_COUNT       FIXED BINARY(31) ALIGNED INITIAL(0);
    53
    54        %INCLUDE GETPDSPA;
    55
    56        DECLARE
    57           1   SCAN_STRS,
    58               2  SCAN_TBL_MAX       FIXED BINARY(15,0) INITIAL(0),
    59               2  SCAN_TBL(20),
    60                  3  SCAN_STR        CHAR(8) VARYING,
    61                  3  SCAN_CTR        FIXED DECIMAL(7,0);
    62
    63        SCAN_STR(*)='';
    64        SCAN_CTR(*)=0;
    65        ON ENDPAGE(SYSPRINT)
    66        BEGIN;
    67           IF PAGE_CTR > 0 THEN PUT PAGE;
    68           PAGE_CTR=PAGE_CTR+1;
    69           PUT EDIT('PDSCANR V1.1.1','PAGE ',PAGE_CTR)
    70                        (A,COL(110),A,F(5));
    71           PUT SKIP(2);
    72           IF LAST_MEMBER = (8)' ' THEN;
    73           ELSE
    74           DO;
    75               PUT SKIP EDIT('MEMBER ',LAST_MEMBER,' (CONTINUED)')
    76                  (A,A,A);
    77               PUT SKIP(2);
    78           END;
    79        END;
    80   1    SIGNAL ENDPAGE(SYSPRINT);
    81        CALL P000_LOAD_STR;
    82        CALL P100_OPEN_PDS;
    83        CALL P600_CLOSE_PDS;
    84
    85        PUT SKIP EDIT('MEMBER PROCESSED=',WS_MEMBER_COUNT)(A,F(10));
    86        DO I=1 TO SCAN_TBL_MAX;
    87           PUT SKIP LIST(SCAN_STR(I),'FOUND',SCAN_CTR(I));
    88        END;
    89        PUT SKIP LIST('PDSCANR CONCLUDED');
           /********************** PDSCANR V1.1.1 *******************************/                          PAGE      4


   MACRO SOURCE2 LISTING

    90
    91   -P000_LOAD_STR:PROC;
    92        DECLARE WORK_STR  CHAR(8) VARYING;
    93        DECLARE E_O_F     BIT(1)  ALIGNED INITIAL('0'B);
    94        DECLARE I         FIXED BINARY ALIGNED;
    95        IF LENGTH(EXEC_PARM) = 0 THEN
    96        DO;
    97           PUT SKIP EDIT('NO EXEC PARM FOUND.  DEFAULTING TO ''ANY''')
    98               (A);
    99           ANY_OPTION='1'B;
   100        END;
   101        ELSE
   102        IF LENGTH(EXEC_PARM)=3 THEN
   103        DO;
   104           PUT SKIP EDIT('PARM=''',EXEC_PARM,'''') (A,A,A);
   105           IF EXEC_PARM = 'ANY' THEN ANY_OPTION='1'B;
   106           ELSE
   107              IF EXEC_PARM = 'ALL' THEN ALL_OPTION='1'B;
   108              ELSE
   109                 PUT SKIP LIST('INVALID PARM');
   110        END;
   111        ELSE
   112           PUT SKIP LIST('INVALID PARM');
   113        PUT SKIP;
   114        ON ENDFILE(SYSIN)  E_O_F = '1'B;
   115        DO WHILE (E_O_F = '0'B);
   116           GET LIST(WORK_STR);
   117           IF E_O_F = '0'B THEN
   118           DO;
   119              IF LENGTH(WORK_STR)=0 THEN
   120              DO;
   121                 PUT SKIP LIST('NULL SEARCH STRING IGNORED');
   122              END;
   123              ELSE
   124              DO;
   125                 SCAN_TBL_MAX=SCAN_TBL_MAX+1;
   126                 SCAN_STR(SCAN_TBL_MAX)=WORK_STR;
   127              END;
   128           END;
   129        END;
   130        IF SCAN_TBL_MAX=0 THEN
   131        DO;
   132            PUT SKIP LIST('NO STRINGS TO SCAN FOR');
   133            STOP;
   134        END;
           /********************** PDSCANR V1.1.1 *******************************/                          PAGE      5


   MACRO SOURCE2 LISTING

   135        PUT SKIP LIST('THE FOLLOWING STRINGS WILL BE SEARCHED FOR');
   136        PUT SKIP(2) LIST(' ','STRING');
   137        DO I=1 TO SCAN_TBL_MAX;
   138           PUT SKIP LIST(I,SCAN_STR(I));
   139        END;
   140    END P000_LOAD_STR;
   141   -P100_OPEN_PDS:PROC;
   142        PDSGET_REQUEST = PDSGET_REQUEST_OPEN;
   143        PDSGET_MEMBER  = 'PDSIN   ';
   144        CALL P900_CALL_GETPDSP;
   145        IF PDSGET_RETURN_CODE = 0 THEN
   146            CALL P200_START_DIR;
   147        ELSE
   148        IF PDSGET_RETURN_CODE = 4 THEN
   149            PUT SKIP LIST('OPEN FAILED (RC=4)');
   150        ELSE
   151        IF PDSGET_RETURN_CODE = 8 THEN
   152        DO;
   153            PUT SKIP LIST('OPEN FAILED (RC=8); EXECUTION TERMINATED');
   154            STOP;
   155        END;
   156    END P100_OPEN_PDS;
   157   -P200_START_DIR:PROC;
   158        PDSGET_REQUEST = PDSGET_REQUEST_START;
   159        CALL P900_CALL_GETPDSP;
   160        IF PDSGET_RETURN_CODE = 0 THEN
   161            CALL P300_NEXT_DIR;
   162        ELSE
   163        IF PDSGET_RETURN_CODE = 4 THEN
   164            PUT SKIP LIST('START FAILED (RC=4)');
   165        ELSE
   166        IF PDSGET_RETURN_CODE = 8 THEN
   167        DO;
   168            PUT SKIP LIST('START FAILED (RC=8); EXECUTION TERMINATED');
   169            STOP;
   170        END;
   171    END P200_START_DIR;
   172   -P300_NEXT_DIR:PROC;
   173        PDSGET_RETURN_CODE = 0;
   174        DO WHILE(PDSGET_RETURN_CODE = 0);
   175            PDSGET_REQUEST = PDSGET_REQUEST_NEXT;
   176            CALL P900_CALL_GETPDSP;
   177            IF PDSGET_RETURN_CODE = 0 THEN
   178            DO;
   179                CALL P400_LOCATE_MEMBER;
           /********************** PDSCANR V1.1.1 *******************************/                          PAGE      6


   MACRO SOURCE2 LISTING

   180                PDSGET_RETURN_CODE = 0;
   181            END;
   182            ELSE
   183            IF PDSGET_RETURN_CODE = 4 THEN
   184                PUT SKIP LIST('END OF DIRECTORY (RC=4)');
   185            ELSE
   186            IF PDSGET_RETURN_CODE = 8 THEN
   187            DO;
   188                PUT SKIP LIST(
   189                             'NEXT FAILED (RC=8); EXECUTION TERMINATED');
   190                STOP;
   191            END;
   192        END; /* DO UNTIL */
   193    END P300_NEXT_DIR;
   194   -P400_LOCATE_MEMBER:PROC;
   195        PDSGET_REQUEST = PDSGET_REQUEST_LOCATE;
   196        CALL P900_CALL_GETPDSP;
   197        IF PDSGET_RETURN_CODE = 0 THEN
   198        DO;
   199         /* PUT SKIP LIST('MEMBER NAME=',PDSGET_MEMBER); */
   200            CALL P500_READ_MEMBER;
   201        END;
   202        ELSE
   203        IF PDSGET_RETURN_CODE = 4 THEN
   204            PUT SKIP LIST('MEMBER NOT FOUND (RC=4)');
   205        ELSE
   206            IF PDSGET_RETURN_CODE = 8 THEN
   207            DO;
   208                PUT SKIP LIST(
   209                          'LOCATE FAILED (RC=8); EXECUTION TERMINATED');
   210                STOP;
   211            END;
   212    END P400_LOCATE_MEMBER;
   213   -P500_READ_MEMBER:PROC;
   214        DECLARE I          FIXED BINARY ALIGNED,
   215                HIT_CNT    FIXED DECIMAL(7,0);
   216        PDSGET_REQUEST = PDSGET_REQUEST_READ;
   217    /************************************ V1.1.0 FIX START **************
   218        CALL P900_CALL_GETPDSP;
   219    ************************************* V1.1.0 FIX END   *************/
   220        WS_MEMBER_COUNT=WS_MEMBER_COUNT+1;
   221        IF PDSGET_RETURN_CODE = 0 THEN
   222        DO;
   223            DO WHILE (PDSGET_RETURN_CODE = 0);
   224               CALL P900_CALL_GETPDSP;
           /********************** PDSCANR V1.1.1 *******************************/                          PAGE      7


   MACRO SOURCE2 LISTING

   225               IF PDSGET_RETURN_CODE = 0 THEN
   226               DO;
   227                  HIT_CNT=0;
   228                  DO I=1 TO SCAN_TBL_MAX;
   229                     IF INDEX(PDSGET_RECORD80,SCAN_STR(I))> 0 THEN
   230                     DO;
   231                        HIT_CNT=HIT_CNT+1;
   232                        SCAN_CTR(I)=SCAN_CTR(I)+1;
   233                     END;
   234                  END;
   235                  IF (ANY_OPTION & HIT_CNT > 0) |
   236                     (ALL_OPTION & HIT_CNT = SCAN_TBL_MAX) THEN
   237                  DO;
   238                     IF LAST_MEMBER = PDSGET_MEMBER THEN;
   239                     ELSE
   240                     DO;
   241                        LAST_MEMBER = PDSGET_MEMBER;
   242                        PUT SKIP EDIT('MEMBER ',LAST_MEMBER)
   243                                                (A,A);
   244                     END;
   245                     PUT SKIP EDIT(PDSGET_RECORD80) (X(5),A);
   246               END;
   247            END;
   248        END;
   249
   250        IF PDSGET_RETURN_CODE = 4 THEN
   251         /* PUT SKIP LIST('END OF FILE ON MEMBER (RC=4)') */;
   252        ELSE
   253            IF PDSGET_RETURN_CODE = 8 THEN
   254            DO;
   255                PUT SKIP LIST(
   256                          'READ FAILED (RC=8); EXECUTION TERMINATED');
   257                STOP;
   258            END;
   259    END P500_READ_MEMBER;
   260   -P600_CLOSE_PDS:PROC;
   261        PDSGET_REQUEST = PDSGET_REQUEST_CLOSE;
   262        CALL P900_CALL_GETPDSP;
   263        IF PDSGET_RETURN_CODE = 4 THEN
   264            PUT SKIP LIST('CLOSE FAILED (RC=4)');
   265        ELSE
   266        IF PDSGET_RETURN_CODE = 8 THEN
   267        DO;
   268            PUT SKIP LIST('CLOSE FAILED (RC=8); EXECUTION TERMINATED');
   269            STOP;
           /********************** PDSCANR V1.1.1 *******************************/                          PAGE      8


   MACRO SOURCE2 LISTING

   270        END;
   271    END P600_CLOSE_PDS;
   272   -P900_CALL_GETPDSP:PROC;
   273        CALL GETPDSP (PDSGET_REQUEST_1,
   274                      PDSGET_MEMBER_1,
   275                      PDSGET_RECORD80_1,
   276                      PDSGET_RETURN_CODE_1);
   277    END P900_CALL_GETPDSP;
   278
   279    END PDSCANR;


   INCLUDED TEXT FOLLOWS FROM DD.MEMBER =  SYSLIB  .GETPDSPA

   280    /********************** GETPDSPA V1.2.0 ******************************/
   281    /*********************************************************************/
   282    /*                                                                   */
   283    /* NAME: GETPDSPA - PARM LIST DEFINITIONS FOR GETPDS V1.3.0          */
   284    /*                                                                   */
   285    /* NOTE: THERE IS A COBOL VERSION OF THIS.  THEY SHOULD BE KEPT      */
   286    /*       IN SYNC.                                                    */
   287    /*                                                                   */
   288    /*********************************************************************/
   289    /*                                                                   */
   290    /*  (C) COPYRIGHT 2017 EDWARD G LISS   ALL RIGHTS RESERVED           */
   291    /*  (C) COPYRIGHT 2023 EDWARD G LISS   ALL RIGHTS RESERVED           */
   292    /*                                                                   */
   293    /*  THIS SOURCE CODE AS WELL AS ANY OBJECT CODE RESULTING FROM THIS  */
   294    /*  SOURCE CODE MAY BE DISTRIBUTED FREELY PROVIDED NO FEE IS CHARGED */
   295    /*  AND FOR NON-COMERCIAL PURPOSES.                                  */
   296    /*                                                                   */
   297    /*  FOR COMMERCIAL DISTRIBUTION RIGHTS, CONTACT THE COPYRIGHT OWNER. */
   298    /*                                                                   */
   299    /*********************************************************************/
   300    /*                                                                   */
   301    /* REVISION HISTORY                                                  */
   302    /* ------  --------------------------------------------------------  */
   303    /* V1.1.0  INITIAL VERSION.                                          */
   304    /* V1.2.0  ADDED THE DEFINITION OF MEMBERS STATS AND ADDED           */
   305    /*         WORK AREAS FOR STATISTICS CODE CONVERSION.                */
   306    /*                                                                   */
   307    /*********************************************************************/
   308
   309        DECLARE
   310           1  PDSGET_PARAMETERS   STATIC ALIGNED,
           /********************** PDSCANR V1.1.1 *******************************/                          PAGE      9


   MACRO SOURCE2 LISTING

   311               2  PDSGET_REQUEST_OPEN   INITIAL(0)  FIXED BINARY(31),
   312               2  PDSGET_REQUEST_START  INITIAL(1)  FIXED BINARY(31),
   313               2  PDSGET_REQUEST_LOCATE INITIAL(4)  FIXED BINARY(31),
   314               2  PDSGET_REQUEST_NEXT   INITIAL(5)  FIXED BINARY(31),
   315               2  PDSGET_REQUEST_READ   INITIAL(8)  FIXED BINARY(31),
   316               2  PDSGET_REQUEST_CLOSE  INITIAL(12) FIXED BINARY(31);
   317        DECLARE
   318           1   PDSGET_REQUEST_1      STATIC,
   319               2  PDSGET_REQUEST     FIXED BINARY(31),
   320           1   PDSGET_MEMBER_1       STATIC,
   321               2  PDSGET_MEMBER      CHAR(8),     /* DDNAME FOR OPEN */
   322           1   PDSGET_RECORD80_1     STATIC,
   323               2  PDSGET_RECORD80    CHAR(80),
   324           1   PDSGET_RETURN_CODE_1  STATIC,
   325               2  PDSGET_RETURN_CODE FIXED BINARY(31);
   326    /*********************************************************************/
   327    /*                                                                   */
   328    /* PDSGET_RETURN_CODE DEFINITIONS                                    */
   329    /*       RETURN_CODE 0 = SUCCESSFUL COMPLETION OF REQUEST            */
   330    /*       RETURN_CODE 8 = SERIOUS ERROR.                              */
   331    /*       RETURN_CODE 4 = DEPENDS ON REQUEST CODE                     */
   332    /*            REQUEST_CODE    MEANING                                */
   333    /*                  0         PDS COULD NOT BE OPENED.               */
   334    /*                  1         PDS COULD NOT BE OPENED.               */
   335    /*                  4         MEMBER NOT FOUND.                      */
   336    /*                  5         END OF DIRECTORY.                      */
   337    /*                  8         END OF CURRENT MEMBER.                 */
   338    /*                                                                   */
   339    /*********************************************************************/
   340        DECLARE
   341           PDSGET_PTR   POINTER,
   342           1  PDSGET_STATISTICS          BASED(PDSGET_PTR),
   343              2  PDS_C                      CHAR(1),
   344              2  PDS_VERSION                CHAR(1),
   345              2  PDS_MOD                    CHAR(1),
   346              2  PDS_NULL                   CHAR(2),
   347              2  PDS_DATE_CREATED           FIXED DECIMAL(7,0),
   348              2  PDS_DATE_UPDATED           FIXED DECIMAL(7,0),
   349              2  PDS_TIME_CHANGED_H         CHAR(1),
   350              2  PDS_TIME_CHANGED_M         CHAR(1),
   351              2  PDS_CURRENT_LINES          FIXED BINARY(15),
   352              2  PDS_INITIAL_LINES          FIXED BINARY(15),
   353              2  PDS_CHANGED_LINES          FIXED BINARY(15),
   354              2  PDS_USER_ID                CHAR(8);
   355
           /********************** PDSCANR V1.1.1 *******************************/                          PAGE     10


   MACRO SOURCE2 LISTING

   356         /*****************************************************************
   357          *                                                               *
   358          *   PDS-TIME-CHANGED -H AND -M ARE UNSIGNED PACKED DECIMALS     *
   359          *   THEY MUST TO CONVERTED TO SIGNED PACK DECIMAL TO USE THEM.  *
   360          *   THE PDS_TIME_CONVERSION FUNCTION CAN BE USED FOR THAT.      *
   361          *                                                               *
   362          *   THIS CONVERSION MUST TAKE PLACE FOR BOTH THE -H AND =M      *
   363          *   PDS-TIME-CHANGED- FIELDS.                                   *
   364          *                                                               *
   365          ****************************************************************/
   366        DECLARE PDS_TIME_CONVERSION ENTRY RETURNS(CHAR(2));
   367    PDS_TIME_CONVERSION:PROC(A_BYTE) RETURNS(CHAR(2));
   368        DECLARE A_BYTE             CHAR(1);
   369        DECLARE
   370              PDS_FILLER1_PTR      POINTER,
   371              PDS_FILLER4_PTR      POINTER,
   372
   373              PDS_TIME_WORK        FIXED DECIMAL(5,0) INITIAL(0),
   374
   375           1  PDS_FILLER1                  BASED(PDS_FILLER1_PTR),
   376                   10  FILLER2             CHAR(1),
   377                   10  PDS_TIME_CHAR       CHAR(1),
   378                   10  FILLER3             CHAR(1),
   379           1  PDS_4_DIGIT_TIME             PIC '(4)9',
   380           1  FILLER4                      BASED(PDS_FILLER4_PTR),
   381                   10  FILLER5             CHAR(1),
   382                   10  PDS_TIME            CHAR(2),
   383                   10  FILLER6             CHAR(1);
   384
   385        PDS_FILLER1_PTR = ADDR(PDS_TIME_WORK);
   386        PDS_FILLER4_PTR = ADDR(PDS_4_DIGIT_TIME);
   387
   388        PDS_TIME_WORK = 0;
   389        PDS_TIME_CHAR = A_BYTE;
   390        PDS_4_DIGIT_TIME = PDS_TIME_WORK;
   391        RETURN(PDS_TIME);
   392    END PDS_TIME_CONVERSION;
   393    /********************** GETPDSPA V1.2.0  END *************************/


   NO ERROR OR WARNING CONDITION HAS BEEN DETECTED FOR THIS MACRO PASS.
           /********************** PDSCANR V1.1.1 *******************************/                          PAGE     11


                    SOURCE LISTING.



                     /********************** PDSCANR V1.1.1 *******************************/    1
                     /*********************************************************************/    2
                     /*                                                                   */    3
                     /* NAME: PDSCANR - SCAN A PDS FOR GIVEN STRINGS.                     */    4
                     /*                                                                   */    5
                     /*********************************************************************/    6
                     /*                                                                   */    7
                     /*  (C) COPYRIGHT 2023  EDWARD G LISS      ALL RIGHTS RESERVED       */    8
                     /*                                                                   */    9
                     /*  THIS SOURCE CODE AS WELL AS ANY OBJECT CODE RESULTING FROM THIS  */   10
                     /*  SOURCE CODE MAY BE DISTRIBUTED FREELY PROVIDED NO FEE IS CHARGED */   11
                     /*  AND FOR NON-COMERCIAL PURPOSES.                                  */   12
                     /*                                                                   */   13
                     /*  FOR COMMERCIAL DISTRIBUTION RIGHTS, CONTACT THE COPYRIGHT OWNER. */   14
                     /*                                                                   */   15
                     /*********************************************************************/   16
                     /*                                                                   */   17
                     /*   THIS PROGRAM READS ALL THE MEMBERS OF A PDS AND SCANS EACH      */   18
                     /*   EACH RECORD FOR GIVEN STRINGS.  THE STRINGS ARE ENTERED VIA     */   19
                     /*   THE SYSIN DD.  EACH STRING CAN BE UP TO 8 CHARACTERS AND MUST   */   20
                     /*   BE ENCLOSED IN QUOTES (I.E. 'STRING').  STRINGS ARE SEPERATED   */   21
                     /*   BY COMMAS.  NO SEQUENCE NUMBERS IN 73-80.                       */   22
                     /*                                                                   */   23
                     /*   THE PDS TO SCAN IS POINTED TO BY DDNAME PDSIN.                  */   24
                     /*                                                                   */   25
                     /*   AN EXEC PARM CAN BE GIVEN - THE DEFAULT OF ANY WILL PRINT       */   26
                     /*   WHEN IT MATCHES ANY OF THE SEARCH STRINGS.  A PARM OF 'ALL'     */   27
                     /*   WILL PRINT WHEN ALL THE STRINGS ARE FOUND IN A RECORD.          */   28
                     /*                                                                   */   29
                     /* REVISION HISTORY                                                  */   30
                     /* ------  --------------------------------------------------------  */   31
                     /* V1.0.0  NEW PROGRAM.  OCTOBER, 2012                               */   32
                     /*                                                                   */   33
                     /* V1.1.0  BUG FIX.  07/22/2020                                      */   34
                     /*         PROBLEM:  FIRST RECORD OF EACH MEMBER WAS BEING SKIPPED.  */   35
                     /*         BUG IN GETPDSP DID NOT RETURN 1ST RECORD ON 1ST CALL.     */   36
                     /*                                                                   */   37
                     /* V1.1.1  CLEAN UP. 03/31/2023                                      */   38
                     /*         MODIFIED TO USE INCLUDES FOR PDSGET_PARAMETERS.           */   39
                     /*         NO FUNCTIONAL CHANGES.                                    */   40
                     /*                                                                   */   41
                     /*********************************************************************/   42
                                                                                               43
           /********************** PDSCANR V1.1.1 *******************************/                          PAGE     12


     1               PDSCANR:PROCEDURE(EXEC_PARM) OPTIONS(MAIN);                               44
                                                                                               45
     2                   DECLARE EXEC_PARM            CHAR(100) VARYING;                       46
     3                   DECLARE LAST_MEMBER          CHAR(8) INITIAL((8)' ');                 47
     4                   DECLARE PAGE_CTR             INITIAL(0)    FIXED DECIMAL(5,0);        48
     5                   DECLARE (ANY_OPTION,       INITIAL('0'B),                             49
                                  ALL_OPTION        INITIAL('0'B))  BIT(1) ALIGNED;            50
     6                   DECLARE                                                               51
                            1  WS_MEMBER_COUNT       FIXED BINARY(31) ALIGNED INITIAL(0);      52
                                                                                               53
                     /********************** GETPDSPA V1.2.0 ******************************/  280
                     /*********************************************************************/  281
                     /*                                                                   */  282
                     /* NAME: GETPDSPA - PARM LIST DEFINITIONS FOR GETPDS V1.3.0          */  283
                     /*                                                                   */  284
                     /* NOTE: THERE IS A COBOL VERSION OF THIS.  THEY SHOULD BE KEPT      */  285
                     /*       IN SYNC.                                                    */  286
                     /*                                                                   */  287
                     /*********************************************************************/  288
                     /*                                                                   */  289
                     /*  (C) COPYRIGHT 2017 EDWARD G LISS   ALL RIGHTS RESERVED           */  290
                     /*  (C) COPYRIGHT 2023 EDWARD G LISS   ALL RIGHTS RESERVED           */  291
                     /*                                                                   */  292
                     /*  THIS SOURCE CODE AS WELL AS ANY OBJECT CODE RESULTING FROM THIS  */  293
                     /*  SOURCE CODE MAY BE DISTRIBUTED FREELY PROVIDED NO FEE IS CHARGED */  294
                     /*  AND FOR NON-COMERCIAL PURPOSES.                                  */  295
                     /*                                                                   */  296
                     /*  FOR COMMERCIAL DISTRIBUTION RIGHTS, CONTACT THE COPYRIGHT OWNER. */  297
                     /*                                                                   */  298
                     /*********************************************************************/  299
                     /*                                                                   */  300
                     /* REVISION HISTORY                                                  */  301
                     /* ------  --------------------------------------------------------  */  302
                     /* V1.1.0  INITIAL VERSION.                                          */  303
                     /* V1.2.0  ADDED THE DEFINITION OF MEMBERS STATS AND ADDED           */  304
                     /*         WORK AREAS FOR STATISTICS CODE CONVERSION.                */  305
                     /*                                                                   */  306
                     /*********************************************************************/  307
                                                                                              308
     7                   DECLARE                                                              309
                            1  PDSGET_PARAMETERS   STATIC ALIGNED,                            310
                                2  PDSGET_REQUEST_OPEN   INITIAL(0)  FIXED BINARY(31),        311
                                2  PDSGET_REQUEST_START  INITIAL(1)  FIXED BINARY(31),        312
                                2  PDSGET_REQUEST_LOCATE INITIAL(4)  FIXED BINARY(31),        313
                                2  PDSGET_REQUEST_NEXT   INITIAL(5)  FIXED BINARY(31),        314
                                2  PDSGET_REQUEST_READ   INITIAL(8)  FIXED BINARY(31),        315
                                2  PDSGET_REQUEST_CLOSE  INITIAL(12) FIXED BINARY(31);        316
           /********************** PDSCANR V1.1.1 *******************************/                          PAGE     13


     8                   DECLARE                                                              317
                            1   PDSGET_REQUEST_1      STATIC,                                 318
                                2  PDSGET_REQUEST     FIXED BINARY(31),                       319
                            1   PDSGET_MEMBER_1       STATIC,                                 320
                                2  PDSGET_MEMBER      CHAR(8),     /* DDNAME FOR OPEN */      321
                            1   PDSGET_RECORD80_1     STATIC,                                 322
                                2  PDSGET_RECORD80    CHAR(80),                               323
                            1   PDSGET_RETURN_CODE_1  STATIC,                                 324
                                2  PDSGET_RETURN_CODE FIXED BINARY(31);                       325
                     /*********************************************************************/  326
                     /*                                                                   */  327
                     /* PDSGET_RETURN_CODE DEFINITIONS                                    */  328
                     /*       RETURN_CODE 0 = SUCCESSFUL COMPLETION OF REQUEST            */  329
                     /*       RETURN_CODE 8 = SERIOUS ERROR.                              */  330
                     /*       RETURN_CODE 4 = DEPENDS ON REQUEST CODE                     */  331
                     /*            REQUEST_CODE    MEANING                                */  332
                     /*                  0         PDS COULD NOT BE OPENED.               */  333
                     /*                  1         PDS COULD NOT BE OPENED.               */  334
                     /*                  4         MEMBER NOT FOUND.                      */  335
                     /*                  5         END OF DIRECTORY.                      */  336
                     /*                  8         END OF CURRENT MEMBER.                 */  337
                     /*                                                                   */  338
                     /*********************************************************************/  339
     9                   DECLARE                                                              340
                            PDSGET_PTR   POINTER,                                             341
                            1  PDSGET_STATISTICS          BASED(PDSGET_PTR),                  342
                               2  PDS_C                      CHAR(1),                         343
                               2  PDS_VERSION                CHAR(1),                         344
                               2  PDS_MOD                    CHAR(1),                         345
                               2  PDS_NULL                   CHAR(2),                         346
                               2  PDS_DATE_CREATED           FIXED DECIMAL(7,0),              347
                               2  PDS_DATE_UPDATED           FIXED DECIMAL(7,0),              348
                               2  PDS_TIME_CHANGED_H         CHAR(1),                         349
                               2  PDS_TIME_CHANGED_M         CHAR(1),                         350
                               2  PDS_CURRENT_LINES          FIXED BINARY(15),                351
                               2  PDS_INITIAL_LINES          FIXED BINARY(15),                352
                               2  PDS_CHANGED_LINES          FIXED BINARY(15),                353
                               2  PDS_USER_ID                CHAR(8);                         354
                                                                                              355
                          /*****************************************************************  356
                           *                                                               *  356
                           *   PDS-TIME-CHANGED -H AND -M ARE UNSIGNED PACKED DECIMALS     *  356
                           *   THEY MUST TO CONVERTED TO SIGNED PACK DECIMAL TO USE THEM.  *  356
                           *   THE PDS_TIME_CONVERSION FUNCTION CAN BE USED FOR THAT.      *  356
                           *                                                               *  356
                           *   THIS CONVERSION MUST TAKE PLACE FOR BOTH THE -H AND =M      *  356
                           *   PDS-TIME-CHANGED- FIELDS.                                   *  356
           /********************** PDSCANR V1.1.1 *******************************/                          PAGE     14


                           *                                                               *  356
                           ****************************************************************/  356
                                                                                              365
    10                   DECLARE PDS_TIME_CONVERSION ENTRY RETURNS(CHAR(2));                  366
    11               PDS_TIME_CONVERSION:PROC(A_BYTE) RETURNS(CHAR(2));                       367
    12                   DECLARE A_BYTE             CHAR(1);                                  368
    13                   DECLARE                                                              369
                               PDS_FILLER1_PTR      POINTER,                                  370
                               PDS_FILLER4_PTR      POINTER,                                  371
                                                                                              372
                               PDS_TIME_WORK        FIXED DECIMAL(5,0) INITIAL(0),            373
                                                                                              374
                            1  PDS_FILLER1                  BASED(PDS_FILLER1_PTR),           375
                                    10  FILLER2             CHAR(1),                          376
                                    10  PDS_TIME_CHAR       CHAR(1),                          377
                                    10  FILLER3             CHAR(1),                          378
                            1  PDS_4_DIGIT_TIME             PIC '(4)9',                       379
                            1  FILLER4                      BASED(PDS_FILLER4_PTR),           380
                                    10  FILLER5             CHAR(1),                          381
                                    10  PDS_TIME            CHAR(2),                          382
                                    10  FILLER6             CHAR(1);                          383
                                                                                              384
    14                   PDS_FILLER1_PTR = ADDR(PDS_TIME_WORK);                               385
    15                   PDS_FILLER4_PTR = ADDR(PDS_4_DIGIT_TIME);                            386
                                                                                              387
    16                   PDS_TIME_WORK = 0;                                                   388
    17                   PDS_TIME_CHAR = A_BYTE;                                              389
    18                   PDS_4_DIGIT_TIME = PDS_TIME_WORK;                                    390
    19                   RETURN(PDS_TIME);                                                    391
    20               END PDS_TIME_CONVERSION;                                                 392
                     /********************** GETPDSPA V1.2.0  END *************************/  393
                                                                                               55
    21                   DECLARE                                                               56
                            1   SCAN_STRS,                                                     57
                                2  SCAN_TBL_MAX       FIXED BINARY(15,0) INITIAL(0),           58
                                2  SCAN_TBL(20),                                               59
                                   3  SCAN_STR        CHAR(8) VARYING,                         60
                                   3  SCAN_CTR        FIXED DECIMAL(7,0);                      61
                                                                                               62
    22                   SCAN_STR(*)='';                                                       63
    23                   SCAN_CTR(*)=0;                                                        64
    24                   ON ENDPAGE(SYSPRINT)                                                  65
    25                   BEGIN;                                                                66
    26                      IF PAGE_CTR > 0 THEN PUT PAGE;                                     67
    28                      PAGE_CTR=PAGE_CTR+1;                                               68
    29                      PUT EDIT('PDSCANR V1.1.1','PAGE ',PAGE_CTR)                        69
                                         (A,COL(110),A,F(5));                                  70
           /********************** PDSCANR V1.1.1 *******************************/                          PAGE     15


    30                      PUT SKIP(2);                                                       71
    31                      IF LAST_MEMBER = (8)' ' THEN;                                      72
    33                      ELSE                                                               73
    33                      DO;                                                                74
    34                          PUT SKIP EDIT('MEMBER ',LAST_MEMBER,' (CONTINUED)')            75
                                   (A,A,A);                                                    76
    35                          PUT SKIP(2);                                                   77
    36                      END;                                                               78
    37                   END;                                                                  79
    38                   SIGNAL ENDPAGE(SYSPRINT);                                             80
    39                   CALL P000_LOAD_STR;                                                   81
    40                   CALL P100_OPEN_PDS;                                                   82
    41                   CALL P600_CLOSE_PDS;                                                  83
                                                                                               84
    42                   PUT SKIP EDIT('MEMBER PROCESSED=',WS_MEMBER_COUNT)(A,F(10));          85
    43                   DO I=1 TO SCAN_TBL_MAX;                                               86
    44                      PUT SKIP LIST(SCAN_STR(I),'FOUND',SCAN_CTR(I));                    87
    45                   END;                                                                  88
    46                   PUT SKIP LIST('PDSCANR CONCLUDED');                                   89
                                                                                               90
    47               P000_LOAD_STR:PROC;                                                       91
    48                   DECLARE WORK_STR  CHAR(8) VARYING;                                    92
    49                   DECLARE E_O_F     BIT(1)  ALIGNED INITIAL('0'B);                      93
    50                   DECLARE I         FIXED BINARY ALIGNED;                               94
    51                   IF LENGTH(EXEC_PARM) = 0 THEN                                         95
    52                   DO;                                                                   96
    53                      PUT SKIP EDIT('NO EXEC PARM FOUND.  DEFAULTING TO ''ANY''')        97
                                (A);                                                           98
    54                      ANY_OPTION='1'B;                                                   99
    55                   END;                                                                 100
    56                   ELSE                                                                 101
    56                   IF LENGTH(EXEC_PARM)=3 THEN                                          102
    57                   DO;                                                                  103
    58                      PUT SKIP EDIT('PARM=''',EXEC_PARM,'''') (A,A,A);                  104
    59                      IF EXEC_PARM = 'ANY' THEN ANY_OPTION='1'B;                        105
    61                      ELSE                                                              106
    61                         IF EXEC_PARM = 'ALL' THEN ALL_OPTION='1'B;                     107
    63                         ELSE                                                           108
    63                            PUT SKIP LIST('INVALID PARM');                              109
    64                   END;                                                                 110
    65                   ELSE                                                                 111
    65                      PUT SKIP LIST('INVALID PARM');                                    112
    66                   PUT SKIP;                                                            113
    67                   ON ENDFILE(SYSIN)  E_O_F = '1'B;                                     114
    69                   DO WHILE (E_O_F = '0'B);                                             115
    70                      GET LIST(WORK_STR);                                               116
    71                      IF E_O_F = '0'B THEN                                              117
           /********************** PDSCANR V1.1.1 *******************************/                          PAGE     16


    72                      DO;                                                               118
    73                         IF LENGTH(WORK_STR)=0 THEN                                     119
    74                         DO;                                                            120
    75                            PUT SKIP LIST('NULL SEARCH STRING IGNORED');                121
    76                         END;                                                           122
    77                         ELSE                                                           123
    77                         DO;                                                            124
    78                            SCAN_TBL_MAX=SCAN_TBL_MAX+1;                                125
    79                            SCAN_STR(SCAN_TBL_MAX)=WORK_STR;                            126
    80                         END;                                                           127
    81                      END;                                                              128
    82                   END;                                                                 129
    83                   IF SCAN_TBL_MAX=0 THEN                                               130
    84                   DO;                                                                  131
    85                       PUT SKIP LIST('NO STRINGS TO SCAN FOR');                         132
    86                       STOP;                                                            133
    87                   END;                                                                 134
    88                   PUT SKIP LIST('THE FOLLOWING STRINGS WILL BE SEARCHED FOR');         135
    89                   PUT SKIP(2) LIST(' ','STRING');                                      136
    90                   DO I=1 TO SCAN_TBL_MAX;                                              137
    91                      PUT SKIP LIST(I,SCAN_STR(I));                                     138
    92                   END;                                                                 139
    93               END P000_LOAD_STR;                                                       140
    94               P100_OPEN_PDS:PROC;                                                      141
    95                   PDSGET_REQUEST = PDSGET_REQUEST_OPEN;                                142
    96                   PDSGET_MEMBER  = 'PDSIN   ';                                         143
    97                   CALL P900_CALL_GETPDSP;                                              144
    98                   IF PDSGET_RETURN_CODE = 0 THEN                                       145
    99                       CALL P200_START_DIR;                                             146
   100                   ELSE                                                                 147
   100                   IF PDSGET_RETURN_CODE = 4 THEN                                       148
   101                       PUT SKIP LIST('OPEN FAILED (RC=4)');                             149
   102                   ELSE                                                                 150
   102                   IF PDSGET_RETURN_CODE = 8 THEN                                       151
   103                   DO;                                                                  152
   104                       PUT SKIP LIST('OPEN FAILED (RC=8); EXECUTION TERMINATED');       153
   105                       STOP;                                                            154
   106                   END;                                                                 155
   107               END P100_OPEN_PDS;                                                       156
   108               P200_START_DIR:PROC;                                                     157
   109                   PDSGET_REQUEST = PDSGET_REQUEST_START;                               158
   110                   CALL P900_CALL_GETPDSP;                                              159
   111                   IF PDSGET_RETURN_CODE = 0 THEN                                       160
   112                       CALL P300_NEXT_DIR;                                              161
   113                   ELSE                                                                 162
   113                   IF PDSGET_RETURN_CODE = 4 THEN                                       163
   114                       PUT SKIP LIST('START FAILED (RC=4)');                            164
           /********************** PDSCANR V1.1.1 *******************************/                          PAGE     17


   115                   ELSE                                                                 165
   115                   IF PDSGET_RETURN_CODE = 8 THEN                                       166
   116                   DO;                                                                  167
   117                       PUT SKIP LIST('START FAILED (RC=8); EXECUTION TERMINATED');      168
   118                       STOP;                                                            169
   119                   END;                                                                 170
   120               END P200_START_DIR;                                                      171
   121               P300_NEXT_DIR:PROC;                                                      172
   122                   PDSGET_RETURN_CODE = 0;                                              173
   123                   DO WHILE(PDSGET_RETURN_CODE = 0);                                    174
   124                       PDSGET_REQUEST = PDSGET_REQUEST_NEXT;                            175
   125                       CALL P900_CALL_GETPDSP;                                          176
   126                       IF PDSGET_RETURN_CODE = 0 THEN                                   177
   127                       DO;                                                              178
   128                           CALL P400_LOCATE_MEMBER;                                     179
   129                           PDSGET_RETURN_CODE = 0;                                      180
   130                       END;                                                             181
   131                       ELSE                                                             182
   131                       IF PDSGET_RETURN_CODE = 4 THEN                                   183
   132                           PUT SKIP LIST('END OF DIRECTORY (RC=4)');                    184
   133                       ELSE                                                             185
   133                       IF PDSGET_RETURN_CODE = 8 THEN                                   186
   134                       DO;                                                              187
   135                           PUT SKIP LIST(                                               188
                                              'NEXT FAILED (RC=8); EXECUTION TERMINATED');    189
   136                           STOP;                                                        190
   137                       END;                                                             191
   138                   END; /* DO UNTIL */                                                  192
   139               END P300_NEXT_DIR;                                                       193
   140               P400_LOCATE_MEMBER:PROC;                                                 194
   141                   PDSGET_REQUEST = PDSGET_REQUEST_LOCATE;                              195
   142                   CALL P900_CALL_GETPDSP;                                              196
   143                   IF PDSGET_RETURN_CODE = 0 THEN                                       197
   144                   DO;                                                                  198
                          /* PUT SKIP LIST('MEMBER NAME=',PDSGET_MEMBER); */                  199
   145                       CALL P500_READ_MEMBER;                                           200
   146                   END;                                                                 201
   147                   ELSE                                                                 202
   147                   IF PDSGET_RETURN_CODE = 4 THEN                                       203
   148                       PUT SKIP LIST('MEMBER NOT FOUND (RC=4)');                        204
   149                   ELSE                                                                 205
   149                       IF PDSGET_RETURN_CODE = 8 THEN                                   206
   150                       DO;                                                              207
   151                           PUT SKIP LIST(                                               208
                                           'LOCATE FAILED (RC=8); EXECUTION TERMINATED');     209
   152                           STOP;                                                        210
   153                       END;                                                             211
           /********************** PDSCANR V1.1.1 *******************************/                          PAGE     18


   154               END P400_LOCATE_MEMBER;                                                  212
   155               P500_READ_MEMBER:PROC;                                                   213
   156                   DECLARE I          FIXED BINARY ALIGNED,                             214
                                 HIT_CNT    FIXED DECIMAL(7,0);                               215
   157                   PDSGET_REQUEST = PDSGET_REQUEST_READ;                                216
                     /************************************ V1.1.0 FIX START **************    217
                         CALL P900_CALL_GETPDSP;                                              217
                     ************************************* V1.1.0 FIX END   *************/    217
                                                                                              219
   158                   WS_MEMBER_COUNT=WS_MEMBER_COUNT+1;                                   220
   159                   IF PDSGET_RETURN_CODE = 0 THEN                                       221
   160                   DO;                                                                  222
   161                       DO WHILE (PDSGET_RETURN_CODE = 0);                               223
   162                          CALL P900_CALL_GETPDSP;                                       224
   163                          IF PDSGET_RETURN_CODE = 0 THEN                                225
   164                          DO;                                                           226
   165                             HIT_CNT=0;                                                 227
   166                             DO I=1 TO SCAN_TBL_MAX;                                    228
   167                                IF INDEX(PDSGET_RECORD80,SCAN_STR(I))> 0 THEN           229
   168                                DO;                                                     230
   169                                   HIT_CNT=HIT_CNT+1;                                   231
   170                                   SCAN_CTR(I)=SCAN_CTR(I)+1;                           232
   171                                END;                                                    233
   172                             END;                                                       234
   173                             IF (ANY_OPTION & HIT_CNT > 0) |                            235
                                      (ALL_OPTION & HIT_CNT = SCAN_TBL_MAX) THEN              236
   174                             DO;                                                        237
   175                                IF LAST_MEMBER = PDSGET_MEMBER THEN;                    238
   177                                ELSE                                                    239
   177                                DO;                                                     240
   178                                   LAST_MEMBER = PDSGET_MEMBER;                         241
   179                                   PUT SKIP EDIT('MEMBER ',LAST_MEMBER)                 242
                                                                 (A,A);                       243
   180                                END;                                                    244
   181                                PUT SKIP EDIT(PDSGET_RECORD80) (X(5),A);                245
   182                          END;                                                          246
   183                       END;                                                             247
   184                   END;                                                                 248
                                                                                              249
   185                   IF PDSGET_RETURN_CODE = 4 THEN                                       250
   186                    /* PUT SKIP LIST('END OF FILE ON MEMBER (RC=4)') */;                251
   187                   ELSE                                                                 252
   187                       IF PDSGET_RETURN_CODE = 8 THEN                                   253
   188                       DO;                                                              254
   189                           PUT SKIP LIST(                                               255
                                           'READ FAILED (RC=8); EXECUTION TERMINATED');       256
   190                           STOP;                                                        257
           /********************** PDSCANR V1.1.1 *******************************/                          PAGE     19


   191                       END;                                                             258
   192               END P500_READ_MEMBER;                                                    259
   194               P600_CLOSE_PDS:PROC;                                                     260
   195                   PDSGET_REQUEST = PDSGET_REQUEST_CLOSE;                               261
   196                   CALL P900_CALL_GETPDSP;                                              262
   197                   IF PDSGET_RETURN_CODE = 4 THEN                                       263
   198                       PUT SKIP LIST('CLOSE FAILED (RC=4)');                            264
   199                   ELSE                                                                 265
   199                   IF PDSGET_RETURN_CODE = 8 THEN                                       266
   200                   DO;                                                                  267
   201                       PUT SKIP LIST('CLOSE FAILED (RC=8); EXECUTION TERMINATED');      268
   202                       STOP;                                                            269
   203                   END;                                                                 270
   204               END P600_CLOSE_PDS;                                                      271
   205               P900_CALL_GETPDSP:PROC;                                                  272
   206                   CALL GETPDSP (PDSGET_REQUEST_1,                                      273
                                       PDSGET_MEMBER_1,                                       274
                                       PDSGET_RECORD80_1,                                     275
                                       PDSGET_RETURN_CODE_1);                                 276
   207               END P900_CALL_GETPDSP;                                                   277
                                                                                              278
   208               END PDSCANR;                                                             279
           /********************** PDSCANR V1.1.1 *******************************/                          PAGE     20


          STORAGE REQUIREMENTS.
          ----------------------

          THE STORAGE AREA FOR THE PROCEDURE LABELLED PDSCANR IS 772 BYTES LONG.

          THE STORAGE AREA (IN STATIC) FOR THE PROCEDURE LABELLED PDS_TIME_CONVERSION IS 264 BYTES LONG.

          THE STORAGE AREA FOR THE ON UNIT AT STATEMENT NO. 25 IS 260 BYTES LONG.

          THE STORAGE AREA (IN STATIC) FOR THE PROCEDURE LABELLED P000_LOAD_STR IS 292 BYTES LONG.

          THE STORAGE AREA FOR THE ON UNIT AT STATEMENT NO. 67 IS 256 BYTES LONG.

          THE STORAGE AREA (IN STATIC) FOR THE PROCEDURE LABELLED P100_OPEN_PDS IS 248 BYTES LONG.

          THE STORAGE AREA (IN STATIC) FOR THE PROCEDURE LABELLED P200_START_DIR IS 248 BYTES LONG.

          THE STORAGE AREA (IN STATIC) FOR THE PROCEDURE LABELLED P300_NEXT_DIR IS 248 BYTES LONG.

          THE STORAGE AREA (IN STATIC) FOR THE PROCEDURE LABELLED P400_LOCATE_MEMBER IS 248 BYTES LONG.

          THE STORAGE AREA (IN STATIC) FOR THE PROCEDURE LABELLED P500_READ_MEMBER IS 288 BYTES LONG.

          THE STORAGE AREA (IN STATIC) FOR THE PROCEDURE LABELLED P600_CLOSE_PDS IS 248 BYTES LONG.

          THE STORAGE AREA (IN STATIC) FOR THE PROCEDURE LABELLED P900_CALL_GETPDSP IS 248 BYTES LONG.

          THE PROGRAM CSECT IS NAMED PDSCANR  AND IS 4110 BYTES LONG.

          THE STATIC  CSECT IS NAMED PDSCANRA AND IS 4304 BYTES LONG.


*STATISTICS*     MACRO RECORDS =      393,SOURCE RECORDS =      394,PROG TEXT STMNTS =      208,OBJECT BYTES =     4110
           /********************** PDSCANR V1.1.1 *******************************/                          PAGE     21


TABLE OF OFFSETS AND STATEMENT NUMBERS WITHIN PROCEDURE          PDS_TIME_CONVERSION

OFFSET (HEX)  0000 005C 0064 006C 0072 0084 008E 00A6
STATEMENT NO    11   14   15   16   17   18   19   20


TABLE OF OFFSETS AND STATEMENT NUMBERS WITHIN ON UNIT

OFFSET (HEX)  0000 0048 0056 0066 0070 00DC 00EC 00FA 00FE 00FE 0154 0164 0164
STATEMENT NO    25   26   27   28   29   30   31   32   33   34   35   36   37


TABLE OF OFFSETS AND STATEMENT NUMBERS WITHIN ON UNIT

OFFSET (HEX)  0000 0048 0052
STATEMENT NO    68   68


TABLE OF OFFSETS AND STATEMENT NUMBERS WITHIN PROCEDURE          P000_LOAD_STR

OFFSET (HEX)  0000 0064 0078 0078 00A6 00B0 00B4 00C8 00C8 0122 0146 0154 0178 0186 01A4 01A8 01C6 01D6 01E4 01FA 0218
STATEMENT NO    47   51   52   53   54   55   56   57   58   59   60   61   62   63   64   65   66   67   69   70   71

OFFSET (HEX)  022E 022E 023A 023A 0258 025C 025C 026C 02A0 02A0 02A0 02A4 02B4 02B4 02D2 02D8 02D8 02F6 0310 0324 0360
STATEMENT NO    72   73   74   75   76   77   78   79   80   81   82   83   84   85   86   87   88   89   90   91   92

OFFSET (HEX)  0374
STATEMENT NO    93


TABLE OF OFFSETS AND STATEMENT NUMBERS WITHIN PROCEDURE          P100_OPEN_PDS

OFFSET (HEX)  0000 003C 0042 0048 0052 005E 006C 0078 009A 00A6 00A6 00C4 00CA 00CA
STATEMENT NO    94   95   96   97   98   99  100  101  102  103  104  105  106  107


TABLE OF OFFSETS AND STATEMENT NUMBERS WITHIN PROCEDURE          P200_START_DIR

OFFSET (HEX)  0000 003C 0042 004C 0058 0066 0072 0094 00A0 00A0 00BE 00C4 00C4
STATEMENT NO   108  109  110  111  112  113  114  115  116  117  118  119  120


TABLE OF OFFSETS AND STATEMENT NUMBERS WITHIN PROCEDURE          P300_NEXT_DIR

OFFSET (HEX)  0000 003C 0042 004E 0054 005E 006A 006A 0074 007A 007E 008A 00AC 00B8 00B8 00D6 00DC 00DC 00E0
STATEMENT NO   121  122  123  124  125  126  127  128  129  130  131  132  133  134  135  136  137  138  139
           /********************** PDSCANR V1.1.1 *******************************/                          PAGE     22


TABLE OF OFFSETS AND STATEMENT NUMBERS WITHIN PROCEDURE          P400_LOCATE_MEMBER

OFFSET (HEX)  0000 0040 0046 0050 005C 005C 0066 006A 0076 0098 00A4 00A4 00C2 00C8 00C8
STATEMENT NO   140  141  142  143  144  145  146  147  148  149  150  151  152  153  154


TABLE OF OFFSETS AND STATEMENT NUMBERS WITHIN PROCEDURE          P500_READ_MEMBER

OFFSET (HEX)  0000 004C 0052 0062 006E 006E 007A 0084 0090 0090 0096 00AA 00E8 00E8 00EE 0118 0118 012C 0194 0194 019E
STATEMENT NO   155  157  158  159  160  161  162  163  164  165  166  167  168  169  170  171  172  173  174  175  176

OFFSET (HEX)  01A2 01A2 01AC 01F0 01F0 0230 0230 0230 0234 0240 0244 0250 0250 026E 0274 0274 0274
STATEMENT NO   177  178  179  180  181  182  183  184  185  186  187  188  189  190  191  192  193


TABLE OF OFFSETS AND STATEMENT NUMBERS WITHIN PROCEDURE          P600_CLOSE_PDS

OFFSET (HEX)  0000 003C 0042 004C 0058 007A 0086 0086 00A4 00AA 00AA
STATEMENT NO   194  195  196  197  198  199  200  201  202  203  204


TABLE OF OFFSETS AND STATEMENT NUMBERS WITHIN PROCEDURE          P900_CALL_GETPDSP

OFFSET (HEX)  0000 0040 004A
STATEMENT NO   205  206  207


TABLE OF OFFSETS AND STATEMENT NUMBERS WITHIN PROCEDURE          PDSCANR

OFFSET (HEX)  0000 015C 018A 01B8 01C6 01DC 01E6 01F0 01FA 023E 024E 029C 02B0 02CE
STATEMENT NO     1   22   23   24   38   39   40   41   42   43   44   45   46  208
           /********************** PDSCANR V1.1.1 *******************************/                          PAGE     23


    COMPILER DIAGNOSTICS.




 WARNINGS.


    IEM0227I          NO FILE/STRING OPTION SPECIFIED IN ONE OR MORE GET/PUT STATEMENTS. SYSIN/SYSPRINT HAS BEEN


                      ASSUMED IN EACH CASE.


    IEM0764I          ONE OR MORE FIXED BINARY ITEMS OF PRECISION 15 OR LESS HAVE BEEN GIVEN HALFWORD STORAGE. THEY


                      ARE FLAGGED '*********' IN THE XREF/ATR LIST.





 END OF DIAGNOSTICS.


AUXILIARY STORAGE WILL NOT BE USED FOR DICTIONARY WHEN SIZE = 120K


COMPILE TIME         .00 MINS

ELAPSED TIME         .01 MINS

 F64-LEVEL LINKAGE EDITOR OPTIONS SPECIFIED XREF,LIST
          DEFAULT OPTION(S) USED -  SIZE=(231424,55296)
****PDSCANR   DOES NOT EXIST BUT HAS BEEN ADDED TO DATA SET
AUTHORIZATION CODE IS         0.



                                                CROSS REFERENCE TABLE


  CONTROL SECTION                       ENTRY

    NAME    ORIGIN  LENGTH                NAME   LOCATION     NAME   LOCATION     NAME   LOCATION     NAME   LOCATION
  PDSCANR       00    100E
  PDSCANRA    1010    10D0
  IHEMAIN     20E0       4
  IHENTRY     20E8       C
  IHESPRT     20F8      38
  SYSIN       2130      38
  IHEDOA  *   2168     23A
                                        IHEDOAA     2168    IHEDOAB     216A
  IHEDBN  *   23A8     167
                                        IHEDBNA     23A8
  IHEDCN  *   2510     256
                                        IHEDCNA     2510    IHEDCNB     2512
  IHEDMA  *   2768      F8
                                        IHEDMAA     2768
  IHEDNC  *   2860     2B2
                                        IHEDNCA     2860
  IHEIOD  *   2B18     29A
                                        IHEIODG     2B18    IHEIODP     2B1A    IHEIODT     2C12
  IHEVQC  *   2DB8     268
                                        IHEVQCA     2DB8
  IHEERR  *   3020     745
                                        IHEERRD     3020    IHEERRC     302A    IHEERRB     3034    IHEERRA     303E
                                        IHEERRE     36CE
  IHEUPA  *   3768      E8
                                        IHEUPAA     3768    IHEUPAB     37D2
  IHEUPB  *   3850      E4
                                        IHEUPBA     3850    IHEUPBB     38B8
  IHEVFA  *   3938     16C
                                        IHEVFAA     3938
  IHEVFB  *   3AA8      F0
                                        IHEVFBA     3AA8
  IHEVFC  *   3B98      26
                                        IHEVFCA     3B98
  IHEVFD  *   3BC0      66
                                        IHEVFDA     3BC0
  IHEVFE  *   3C28      20
                                        IHEVFEA     3C28
  IHEVKB  *   3C48     30A
                                        IHEVKBA     3C48
  IHEVKC  *   3F58     2D0
                                        IHEVKCA     3F58
  IHEVKF  *   4228     67C


    NAME    ORIGIN  LENGTH                NAME   LOCATION     NAME   LOCATION     NAME   LOCATION     NAME   LOCATION
                                        IHEVKFA     4228
  IHEVKG  *   48A8     4DE
                                        IHEVKGA     48A8
  IHEVPA  *   4D88     1E0
                                        IHEVPAA     4D88
  IHEVPB  *   4F68     1A2
                                        IHEVPBA     4F68
  IHEVPC  *   5110     1F0
                                        IHEVPCA     5110
  IHEVPD  *   5300     105
                                        IHEVPDA     5300
  IHEVPE  *   5408     278
                                        IHEVPEA     5408
  IHEVPF  *   5680      50
                                        IHEVPFA     5680
  IHEVPG  *   56D0     229
                                        IHEVPGA     56D0
  IHEVPH  *   5900      B4
                                        IHEVPHA     5900
  IHEABN  *   59B8       C
                                        IHEABND     59B8
  IHEM91  *   59C8     178
                                        IHEM91B     59C8    IHEM91A     59D0    IHEM91C     5AE2
  IHETER  *   5B40     110
                                        IHETERA     5B40
  IHEVQB  *   5C50     4DC
                                        IHEVQBA     5C50
  IHEVQA  *   6130      FC
                                        IHEVQAA     6130
  IHEVSB  *   6230      CE
                                        IHEVSBA     6230
  IHEVSC  *   6300      AC
                                        IHEVSCA     6300
  IHEVSE  *   63B0     15D
                                        IHEVSEA     63B0    IHEVSEB     63B2
  IHEVSF  *   6510      EC
                                        IHEVSFA     6510
  IHEIOF  *   6600     2DC
                                        IHEIOFB     6600    IHEIOFA     6602    IHEITAZ     689E    IHEITAX     68AA
                                        IHEITAA     68BE
  IHEDOB  *   68E0     144
                                        IHEDOBA     68E0    IHEDOBB     68E2    IHEDOBC     68E4
  IHEIOX  *   6A28     14C
                                        IHEIOXA     6A28    IHEIOXB     6A2A    IHEIOXC     6A2E
  IHELDI  *   6B78     878
                                        IHELDIA     6B78    IHELDIB     6B7A    IHELDIC     6B7C    IHELDID     6B7E
  IHEDNB  *   73F0     112
                                        IHEDNBA     73F0
  IHEKCD  *   7508     110
                                        IHEKCDA     7508    IHEKCDB     750A
  IHEVCA  *   7618     112
                                        IHEVCAA     7618


    NAME    ORIGIN  LENGTH                NAME   LOCATION     NAME   LOCATION     NAME   LOCATION     NAME   LOCATION
  IHEVCS  *   7730     1DC
                                        IHEVCSA     7730    IHEVCSB     7732
  IHEVSD  *   7910     1A0
                                        IHEVSDA     7910    IHEVSDB     7912
  IHEVSA  *   7AB0     13E
                                        IHEVSAA     7AB0
  IHELDO  *   7BF0     418
                                        IHELDOA     7BF0    IHELDOB     7BF2    IHELDOC     7BF6
  IHESAP  *   8008     B1C
                                        IHESADA     8008    IHESAPC     8022    IHESAPD     802A    IHESAPA     8032
                                        IHESAPB     803A    IHESADF     8042    IHESADB     804A    IHESADE     8052
                                        IHESAFC     805A    IHESAFA     8062    IHESAFB     806A    IHESAFD     8072
                                        IHESARA     807A    IHESAFQ     8082    IHESARC     8874    IHESADD     8988
                                        IHESAFF     89C2
  IHEBEG  *   8B28      80
                                        IHEBEGN     8B28    IHEBEGA     8B68
  IHEDDO  *   8BA8     288
                                        IHEDDOA     8BA8    IHEDDOB     8BAA    IHEDDOC     8BAC    IHEDDOD     8BAE
                                        IHEDDOE     8BB0
  IHEOCL  *   8E30     580
                                        IHEOCLA     8E30    IHEOCLB     8E32    IHEOCLC     8E34    IHEOCLD     8E36
  IHEPRT  *   93B0     308
                                        IHEPRTA     93B0    IHEPRTB     93B2
  IHESIZ  *   96B8       C
                                        IHESIZE     96B8
  IHETAB  *   96C8       C
                                        IHETABS     96C8
  IHEDDP  *   96D8     28C
                                        IHEDDPA     96D8    IHEDDPB     96DA    IHEDDPC     96DC    IHEDDPD     96DE
  GETPDS  *   9968     604
                                        NCZ93205    9968    GETPDSP     9970
  @GETDIR *   9F70     214
  IHECSC  *   A188      C6
                                        IHECSC0     A188
  IHEIOA  *   A250     16A
                                        IHEIOAA     A250    IHEIOAB     A252    IHEIOAC     A254    IHEIOAD     A256
                                        IHEIOAT     A340
  IHEIOP  *   A3C0     1F7
                                        IHEIOPA     A3C0    IHEIOPB     A3C2    IHEIOPC     A3C6
  IHEIOB  *   A5B8     1E0
                                        IHEIOBA     A5B8    IHEIOBB     A5C0    IHEIOBC     A5C8    IHEIOBD     A5D0
                                        IHEIOBE     A5D8    IHEIOBT     A6C0
  IHEOSS  *   A798      34
                                        IHEOSSA     A798
  IHESTR  *   A7D0     66C
                                        IHESTRA     A7D0    IHESTRB     A7D2    IHESTRC     A7D6
  IHECSI  *   AE40      A2
                                        IHECSI0     AE40



  LOCATION  REFERS TO SYMBOL  IN CONTROL SECTION             LOCATION  REFERS TO SYMBOL  IN CONTROL SECTION
       10            PDSCANRA        PDSCANRA                     39C            PDSCANRA        PDSCANRA
      884            PDSCANRA        PDSCANRA                    15AC            IHESPRT         IHESPRT
     15B0            PDSCANR         PDSCANR                     15B8            IHESPRT         IHESPRT
     15BC            PDSCANR         PDSCANR                     15C4            IHESPRT         IHESPRT
     15C8            PDSCANR         PDSCANR                     15D0            IHESPRT         IHESPRT
     15D4            PDSCANR         PDSCANR                     15DC            IHESPRT         IHESPRT
     15E0            PDSCANR         PDSCANR                     15E8            IHESPRT         IHESPRT
     15EC            PDSCANR         PDSCANR                     15F4            IHESPRT         IHESPRT
     15F8            PDSCANR         PDSCANR                     1600            IHESPRT         IHESPRT
     1604            PDSCANR         PDSCANR                     160C            IHESPRT         IHESPRT
     1610            PDSCANR         PDSCANR                     1618            IHESPRT         IHESPRT
     161C            PDSCANR         PDSCANR                     1624            IHESPRT         IHESPRT
     1628            PDSCANR         PDSCANR                     1630            IHESPRT         IHESPRT
     1634            PDSCANR         PDSCANR                     163C            IHESPRT         IHESPRT
     1640            PDSCANR         PDSCANR                     1648            IHESPRT         IHESPRT
     164C            PDSCANR         PDSCANR                     1654            IHESPRT         IHESPRT
     1658            PDSCANR         PDSCANR                     1660            IHESPRT         IHESPRT
     1664            PDSCANR         PDSCANR                     166C            IHESPRT         IHESPRT
     1670            PDSCANR         PDSCANR                     1678            IHESPRT         IHESPRT
     167C            PDSCANR         PDSCANR                     1684            SYSIN           SYSIN
     1689            PDSCANR         PDSCANR                     168C            IHESPRT         IHESPRT
     1690            PDSCANR         PDSCANR                     1698            IHESPRT         IHESPRT
     169C            PDSCANR         PDSCANR                     16A4            IHESPRT         IHESPRT
     16A8            PDSCANR         PDSCANR                     16B0            IHESPRT         IHESPRT
     16B4            PDSCANR         PDSCANR                     16BC            IHESPRT         IHESPRT
     16C0            PDSCANR         PDSCANR                     16C8            IHESPRT         IHESPRT
     16CC            PDSCANR         PDSCANR                     16D4            IHESPRT         IHESPRT
     16D8            PDSCANR         PDSCANR                     16E0            IHESPRT         IHESPRT
     16E4            PDSCANR         PDSCANR                     16EC            IHESPRT         IHESPRT
     16F0            PDSCANR         PDSCANR                     16F8            IHESPRT         IHESPRT
     1030            IHESADA         IHESAP                      1034            IHESADB         IHESAP
     1038            PDSCANR         PDSCANR                     103C            PDSCANR         PDSCANR
     1098            PDSCANR         PDSCANR                     109C            PDSCANR         PDSCANR
     10A0            PDSCANR         PDSCANR                     10A4            PDSCANR         PDSCANR
     10A8            PDSCANR         PDSCANR                     10AC            PDSCANR         PDSCANR
     10B0            PDSCANR         PDSCANR                     10B4            PDSCANR         PDSCANR
     10B8            PDSCANR         PDSCANR                     10BC            PDSCANR         PDSCANR
     10C0            PDSCANR         PDSCANR                     10C4            PDSCANR         PDSCANR
     10C8            IHELDOA         IHELDO                      10CC            IHELDIB         IHELDI
     10D0            IHELDOB         IHELDO                      10D4            IHEIOXC         IHEIOX
     10D8            IHEIOXC         IHEIOX                      10DC            IHEIOXB         IHEIOX
     10E0            IHEIOXB         IHEIOX                      10E4            IHEDOBB         IHEDOB
     10E8            IHEDOBB         IHEDOB                      10EC            IHEDOAA         IHEDOA
     10F0            IHEDOAA         IHEDOA                      10F4            IHEIOAT         IHEIOA
     10F8            IHEIOAA         IHEIOA                      10FC            IHEIOBC         IHEIOB
     1100            IHEIOBA         IHEIOB                      1104            IHEIOBT         IHEIOB
     1108            IHEIOBB         IHEIOB                      110C            IHEOSSA         IHEOSS
     1110            IHEERRB         IHEERR                      1040            IHESAFA         IHESAP
     1114            IHESAFB         IHESAP                      1118            IHECSC0         IHECSC
     111C            IHESTRB         IHESTR                      1120            GETPDSP         GETPDS
     1124            IHECSI0         IHECSI                      1128            IHESPRT         IHESPRT
     112C            SYSIN           SYSIN                       16FC            PDSCANR         PDSCANR


  LOCATION  REFERS TO SYMBOL  IN CONTROL SECTION             LOCATION  REFERS TO SYMBOL  IN CONTROL SECTION
     1704            IHESPRT         IHESPRT                     1708            PDSCANR         PDSCANR
     1710            IHESPRT         IHESPRT                     1715            PDSCANR         PDSCANR
     1718            IHESPRT         IHESPRT                     171D            PDSCANR         PDSCANR
     20E0            PDSCANR         PDSCANR                     20F0            IHESAPC         IHESAP
     2388            IHEIODP         IHEIOD                      238C            IHEIODT         IHEIOD
     2390            IHEDMAA         IHEDMA                      2394            IHEDCNA         IHEDCN
     2398            IHEDBNA         IHEDBN                      239C            IHEVQCA         IHEVQC
     24F8            IHEDMAA         IHEDMA                      24FC            IHEUPBB         IHEUPB
     2500            IHEUPAB         IHEUPA                      2504            IHEERRB         IHEERR
     272C            IHEDMAA         IHEDMA                      2730            IHEVQBA         IHEVQB
     2734            IHEERRB         IHEERR                      2738            IHEUPAB         IHEUPA
     273C            IHEUPBB         IHEUPB                      2740            IHEUPAA         IHEUPA
     2744            IHEUPBA         IHEUPB                      27D4            IHEVFBA         IHEVFB
     27D8            IHEVFCA         IHEVFC                      27E0            IHEVFAA         IHEVFA
     27E4            IHEVPAA         IHEVPA                      27E8            IHEVKGA         IHEVKG
     27EC            IHEVPDA         IHEVPD                      27F0            IHEVKFA         IHEVKF
     27F4            IHEVPBA         IHEVPB                      27F8            IHEVPCA         IHEVPC
     2824            IHEVFDA         IHEVFD                      2828            IHEVFEA         IHEVFE
     2830            IHEVPHA         IHEVPH                      2834            IHEVPGA         IHEVPG
     2838            IHEVKCA         IHEVKC                      283C            IHEVPFA         IHEVPF
     2840            IHEVKBA         IHEVKB                      2844            IHEVPEA         IHEVPE
     2AF4            IHEDMAA         IHEDMA                      2AF8            IHEUPAB         IHEUPA
     2AFC            IHEVSCA         IHEVSC                      2B00            IHEVSEB         IHEVSE
     2B04            IHEVQCA         IHEVQC                      2DA0            IHEIOFA         IHEIOF
     2DA4            IHEERRB         IHEERR                      2DA8            IHEERRC         IHEERR
     2F08            IHEVSEB         IHEVSE                      2F8C            IHEERRC         IHEERR
     2FA8            IHEERRB         IHEERR                      2FFC            IHEVSCA         IHEVSC
     3714            IHEM91A         IHEM91                      3718            IHEM91B         IHEM91
     371C            IHEM91C         IHEM91                      3720            IHEABND         IHEABN
     3744            IHETERA         IHETER                      392C            IHEDMAA         IHEDMA
     3B80            IHEERRB         IHEERR                      489C            IHEERRB         IHEERR
     4D74            IHEERRB         IHEERR                      4F64            IHEERRB         IHEERR
     50E8            IHEERRC         IHEERR                      50F8            IHEERRB         IHEERR
     52E8            IHEERRC         IHEERR                      52EC            IHEERRB         IHEERR
     53F8            IHEERRB         IHEERR                      5668            IHEERRB         IHEERR
     58EC            IHEERRB         IHEERR                      59B0            IHEERRB         IHEERR
     5B28            IHEERRC         IHEERR                      6060            IHEERRB         IHEERR
     6064            IHEVQAA         IHEVQA                      6214            IHEERRB         IHEERR
     6500            IHEERRB         IHEERR                      6504            IHEERRC         IHEERR
     65F4            IHEERRC         IHEERR                      68CC            IHEERRB         IHEERR
     68D0            IHEERRC         IHEERR                      6A04            IHEERRC         IHEERR
     6A08            IHEIODP         IHEIOD                      6A0C            IHEIODT         IHEIOD
     6A10            IHEDNCA         IHEDNC                      6A14            IHEVSCA         IHEVSC
     6A18            IHEVSEA         IHEVSE                      6A1C            IHEVSBA         IHEVSB
     6A20            IHEVSFA         IHEVSF                      6B5C            IHEERRB         IHEERR
     6B60            IHEERRC         IHEERR                      6B64            IHEIODG         IHEIOD
     6B68            IHEIODP         IHEIOD                      6B6C            IHEIODT         IHEIOD
     6B70            IHEIOFA         IHEIOF                      73B8            IHEUPAB         IHEUPA
     73BC            IHEUPBB         IHEUPB                      73C0            IHEVCAA         IHEVCA
     73C4            IHEDCNB         IHEDCN                      73C8            IHEVSCA         IHEVSC
     73CC            IHEVSDB         IHEVSD                      73D0            IHEDNCA         IHEDNC
     73D4            IHEDNBA         IHEDNB                      73D8            IHEIOFA         IHEIOF


  LOCATION  REFERS TO SYMBOL  IN CONTROL SECTION             LOCATION  REFERS TO SYMBOL  IN CONTROL SECTION
     73DC            IHEVCSA         IHEVCS                      73E0            IHEDMAA         IHEDMA
     73E4            IHEERRB         IHEERR                      73E8            IHEKCDB         IHEKCD
     73EC            IHEERRC         IHEERR                      74EC            IHEDMAA         IHEDMA
     74F0            IHEVSAA         IHEVSA                      7610            IHEERRB         IHEERR
     78FC            IHEDMAA         IHEDMA                      7900            IHEUPAB         IHEUPA
     7904            IHEDNCA         IHEDNC                      7908            IHEDNBA         IHEDNB
     7AA4            IHEERRB         IHEERR                      7FF4            IHEERRC         IHEERR
     7FF8            IHEIOFA         IHEIOF                      7FFC            IHEVSBA         IHEVSB
     8000            IHEVSCA         IHEVSC                      8004            IHEDNCA         IHEDNC
     8A24            IHEMAIN         IHEMAIN                     8A44            IHEOCLD         IHEOCL
     8A48            IHESIZE         IHESIZ                      8A4C            IHEBEGA         IHEBEG
     8AD0            IHEITAX         IHEIOF                      8AD4            IHEERRB         IHEERR
     8AD8            IHEERRC         IHEERR                      8ADC            IHETABS         IHETAB
     8AE0            IHEITAZ         IHEIOF                      8275            IHEERRA         IHEERR
     8B14            IHEPRTA         IHEPRT                      8B18            IHEPRTB         IHEPRT
     8B1C            IHEDDOD         IHEDDO                      8B20            IHEOCLC         IHEOCL
     8E10            IHEIOFA         IHEIOF                      8E14            IHELDOC         IHELDO
     8E18            IHEPRTB         IHEPRT                      8E1C            IHEDDPA         IHEDDP
     8E20            IHEDDPB         IHEDDP                      8E24            IHEDDPC         IHEDDP
     8E28            IHEDDPD         IHEDDP                      9390            IHEIOFA         IHEIOF
     9398            IHEERRB         IHEERR                      939C            IHEERRC         IHEERR
     9684            IHEOCLA         IHEOCL                      9688            IHEIOFA         IHEIOF
     968C            IHESPRT         IHESPRT                     9F48            @GETDIR         @GETDIR
     9F50            @GETDIR         @GETDIR                     A3AC            IHEERRC         IHEERR
     A3B0            IHEERRB         IHEERR                      A3B4            IHEIOPB         IHEIOP
     A59C            IHEIOFA         IHEIOF                      A5A0            IHEERRB         IHEERR
     A5A4            IHEERRC         IHEERR                      A76C            IHEIOPA         IHEIOP
     A770            IHEIOPB         IHEIOP                      A774            IHEIOPC         IHEIOP
     A778            IHEIOPA         IHEIOP                      A77C            IHEOCLC         IHEOCL
     A790            IHEERRB         IHEERR                      A794            IHEERRC         IHEERR
     A7C4            IHEERRB         IHEERR                      A7C8            IHESAFQ         IHESAP
     AE38            IHEERRC         IHEERR
  LOCATION   5C4C REQUESTS CUMULATIVE PSEUDO REGISTER LENGTH

 PSEUDO REGISTERS


    NAME    ORIGIN  LENGTH        NAME    ORIGIN  LENGTH        NAME    ORIGIN  LENGTH        NAME    ORIGIN  LENGTH
  IHEQINV       00       4      IHEQERR        4       4      IHEQTIC        8       4      IHEQLWF        C       4
  IHEQSLA       10       4      IHEQLW0       14       4      PDSCANRB      18       4      PDSCANRC      1C       4
  PDSCANRD      20       4      PDSCANRE      24       4      PDSCANRF      28       4      PDSCANRG      2C       4
  PDSCANRH      30       4      PDSCANRI      34       4      PDSCANRJ      38       4      PDSCANRK      3C       4
  PDSCANRL      40       4      PDSCANRM      44       4      IHEQSPR       48       4      SYSIN         4C       4
  IHEQLSA       50       4      IHEQLW1       54       4      IHEQLW2       58       4      IHEQLW3       5C       4
  IHEQLW4       60       4      IHEQLWE       64       4      IHEQLCA       68       4      IHEQVDA       6C       4
  IHEQFVD       70       4      IHEQFOP       74       4      IHEQCFL       78       8      IHEQADC       80       4
  IHEQLPR       84       4      IHEQSAR       88       4      IHEQRTC       8C       4      IHEQSFC       90       4

  IHEQXLV       94       8      IHEQEVT       9C       8
 TOTAL LENGTH OF PSEUDO REGISTERS      A4
 ENTRY ADDRESS     20E8





 TOTAL LENGTH      AEE8
                         IIIIIIIIII   NN        NN   SSSSSSSSSS   TTTTTTTTTTTT   AAAAAAAAAA   LL            LL
                        IIIIIIIIII   NNN       NN  SSSSSSSSSSSS  TTTTTTTTTTTT  AAAAAAAAAAAA  LL            LL
                           II       NNNN      NN  SS        SS       TT       AA        AA  LL            LL
                          II       NN NN     NN  SS                 TT       AA        AA  LL            LL
                         II       NN  NN    NN  SSS                TT       AA        AA  LL            LL
                        II       NN   NN   NN   SSSSSSSSS         TT       AAAAAAAAAAAA  LL            LL
                       II       NN    NN  NN    SSSSSSSSS        TT       AAAAAAAAAAAA  LL            LL
                      II       NN     NN NN           SSS       TT       AA        AA  LL            LL
                     II       NN      NNNN            SS       TT       AA        AA  LL            LL
                    II       NN       NNN  SS        SS       TT       AA        AA  LL            LL
               IIIIIIIIII   NN        NN  SSSSSSSSSSSS       TT       AA        AA  LLLLLLLLLLLL  LLLLLLLLLLLL
              IIIIIIIIII   NN         N   SSSSSSSSSS        TT       AA        AA  LLLLLLLLLLLL  LLLLLLLLLLLL



                    JJJJJJJJJJ        444     555555555555        444     555555555555                 AAAAAAAAAA
                    JJJJJJJJJJ       4444     555555555555       4444     555555555555                AAAAAAAAAAAA
                        JJ          44 44     55                44 44     55                          AA        AA
                        JJ         44  44     55               44  44     55                          AA        AA
                        JJ        44   44     55              44   44     55                          AA        AA
                        JJ       44444444444  555555555      44444444444  555555555                   AAAAAAAAAAAA
                        JJ      444444444444  5555555555    444444444444  5555555555                  AAAAAAAAAAAA
                        JJ             44              55          44              55                 AA        AA
                  JJ    JJ             44               55         44               55                AA        AA
                  JJ    JJ             44               55         44               55                AA        AA
                  JJJJJJJJ             44     555555555555         44     555555555555                AA        AA
                   JJJJJJ              44     55555555555          44     55555555555                 AA        AA


****A   END   JOB 4545  INSTALL   PDSUTIL               ROOM        8.54.46 AM 06 APR 23  PRINTER1  SYS TK4-  JOB 4545   END   A****
****A   END   JOB 4545  INSTALL   PDSUTIL               ROOM        8.54.46 AM 06 APR 23  PRINTER1  SYS TK4-  JOB 4545   END   A****
****A   END   JOB 4545  INSTALL   PDSUTIL               ROOM        8.54.46 AM 06 APR 23  PRINTER1  SYS TK4-  JOB 4545   END   A****
****A   END   JOB 4545  INSTALL   PDSUTIL               ROOM        8.54.46 AM 06 APR 23  PRINTER1  SYS TK4-  JOB 4545   END   A****
