                        TTTTTTTTTTTT  EEEEEEEEEEEE   SSSSSSSSSS   TTTTTTTTTTTT   IIIIIIIIII   TTTTTTTTTTTT   3333333333
                       TTTTTTTTTTTT  EEEEEEEEEEEE  SSSSSSSSSSSS  TTTTTTTTTTTT   IIIIIIIIII   TTTTTTTTTTTT  333333333333
                           TT       EE            SS        SS       TT            II            TT       33        33
                          TT       EE            SS                 TT            II            TT                 33
                         TT       EE            SSS                TT            II            TT                 33
                        TT       EEEEEEEE       SSSSSSSSS         TT            II            TT              3333
                       TT       EEEEEEEE        SSSSSSSSS        TT            II            TT              3333
                      TT       EE                     SSS       TT            II            TT                 33
                     TT       EE                      SS       TT            II            TT                 33
                    TT       EE            SS        SS       TT            II            TT       33        33
                   TT       EEEEEEEEEEEE  SSSSSSSSSSSS       TT        IIIIIIIIII        TT       333333333333
                  TT       EEEEEEEEEEEE   SSSSSSSSSS        TT        IIIIIIIIII        TT        3333333333



                    JJJJJJJJJJ        444     555555555555        444      8888888888                  AAAAAAAAAA
                    JJJJJJJJJJ       4444     555555555555       4444     888888888888                AAAAAAAAAAAA
                        JJ          44 44     55                44 44     88        88                AA        AA
                        JJ         44  44     55               44  44     88        88                AA        AA
                        JJ        44   44     55              44   44      88      88                 AA        AA
                        JJ       44444444444  555555555      44444444444    88888888                  AAAAAAAAAAAA
                        JJ      444444444444  5555555555    444444444444    88888888                  AAAAAAAAAAAA
                        JJ             44              55          44      88      88                 AA        AA
                  JJ    JJ             44               55         44     88        88                AA        AA
                  JJ    JJ             44               55         44     88        88                AA        AA
                  JJJJJJJJ             44     555555555555         44     888888888888                AA        AA
                   JJJJJJ              44     55555555555          44      8888888888                 AA        AA


****A  START  JOB 4548  TESTIT3                         ROOM        9.02.44 AM 06 APR 23  PRINTER1  SYS TK4-  JOB 4548  START  A****
****A  START  JOB 4548  TESTIT3                         ROOM        9.02.44 AM 06 APR 23  PRINTER1  SYS TK4-  JOB 4548  START  A****
****A  START  JOB 4548  TESTIT3                         ROOM        9.02.44 AM 06 APR 23  PRINTER1  SYS TK4-  JOB 4548  START  A****
****A  START  JOB 4548  TESTIT3                         ROOM        9.02.44 AM 06 APR 23  PRINTER1  SYS TK4-  JOB 4548  START  A****
                                                J E S 2   J O B   L O G


09.02.43 JOB 4548  $HASP373 TESTIT3  STARTED - INIT  3 - CLASS A - SYS TK4-
09.02.43 JOB 4548  IEF403I TESTIT3 - STARTED - TIME=09.02.43
09.02.44 JOB 4548  IEFACTRT - Stepname  Procstep  Program   Retcode
09.02.44 JOB 4548  TESTIT3    S3                  PDSCANR   RC= 0000
09.02.44 JOB 4548  IEF404I TESTIT3 - ENDED - TIME=09.02.44
09.02.44 JOB 4548  $HASP395 TESTIT3  ENDED


------ JES2 JOB STATISTICS ------


 06 APR 23 JOB EXECUTION DATE


        10 CARDS READ


       295 SYSOUT PRINT RECORDS


         0 SYSOUT PUNCH RECORDS


      0.00 MINUTES EXECUTION TIME
    1     //TESTIT3 JOB CLASS=A,MSGCLASS=A,MSGLEVEL=(1,1),NOTIFY=HERC01,          JOB 4548
          //    USER=HERC01,PASSWORD=
          ***
    2     //S3   EXEC PGM=PDSCANR
    3     //STEPLIB DD DSN=HERC01.PDSUTIL.LOADLIB,DISP=SHR
    4     //        DD DSN=SYS1.PL1LIB,DISP=SHR
    5     //SYSPRINT DD SYSOUT=*
    6     //PDSIN    DD DSN=HERC01.PDSUTIL.PLI,DISP=SHR
    7     //SYSIN    DD *
IEF236I ALLOC. FOR TESTIT3 S3
IEF237I 240  ALLOCATED TO STEPLIB
IEF237I 148  ALLOCATED TO
IEF237I 240  ALLOCATED TO SYS00002
IEF237I JES2 ALLOCATED TO SYSPRINT
IEF237I 240  ALLOCATED TO PDSIN
IEF237I JES2 ALLOCATED TO SYSIN
IEF142I TESTIT3 S3 - STEP WAS EXECUTED - COND CODE 0000
IEF285I   HERC01.PDSUTIL.LOADLIB                       KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF285I   SYS1.PL1LIB                                  KEPT          *--------0
IEF285I   VOL SER NOS= MVSRES.
IEF285I   SYS1.UCAT.TSO                                KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF285I   JES2.JOB04548.SO0102                         SYSOUT
IEF285I   HERC01.PDSUTIL.PLI                           KEPT          *------142
IEF285I   VOL SER NOS= PUB000.
IEF285I   JES2.JOB04548.SI0101                         SYSIN
IEF373I STEP /S3      / START 23096.0902
IEF374I STEP /S3      / STOP  23096.0902 CPU    0MIN 00.05SEC SRB    0MIN 00.01SEC VIRT    60K SYS   200K
************************************************************************************************************************************
*     1. Jobstep of job: TESTIT3     Stepname: S3          Program name: PDSCANR    Executed on 06.04.23 from 09.02.43 to 09.02.44 *
*         elapsed time  00:00:00,27                      CPU-Identifier:  TK4-           Page-in:      0                           *
*             CPU time  00:00:00,06               Virtual Storage used:     60K         Page-out:      0                           *
*           corr. CPU:  00:00:00,06   CPU time has been corrected by  1 / 1,0  multiplier                                          *
*                                                                                                                                  *
*     I/O Operation                                                                                                                *
*     Number of records read via DD * or DD DATA:      1                                                                           *
*     240.......0 148.......0 240.......0 DMY.......0 240.....142 DMY.......0                                                      *
*                                                                                                                                  *
*                                          Charge for step (w/o SYSOUT):          0,10                                             *
************************************************************************************************************************************
IEF375I  JOB /TESTIT3 / START 23096.0902
IEF376I  JOB /TESTIT3 / STOP  23096.0902 CPU    0MIN 00.05SEC SRB    0MIN 00.01SEC
PDSCANR V1.1.1                                                                                               PAGE     1


NO EXEC PARM FOUND.  DEFAULTING TO 'ANY'

THE FOLLOWING STRINGS WILL BE SEARCHED FOR

                        STRING
        1               PUT
        2               PROC
        3               GET
MEMBER DATECNVP
                5  DC_INPUT_FORMAT         CHAR(8),
                5  DC_INPUT_DATE           CHAR(10),
                5  DC_OUTPUT_FORMAT        CHAR(8),
                5  DC_OUTPUT_DATE          CHAR(10);
MEMBER GETPDSPA
      /********************** GETPDSPA V1.2.0 ******************************/
      /* NAME: GETPDSPA - PARM LIST DEFINITIONS FOR GETPDS V1.3.0          */
             1  PDSGET_PARAMETERS   STATIC ALIGNED,
                 2  PDSGET_REQUEST_OPEN   INITIAL(0)  FIXED BINARY(31),
                 2  PDSGET_REQUEST_START  INITIAL(1)  FIXED BINARY(31),
                 2  PDSGET_REQUEST_LOCATE INITIAL(4)  FIXED BINARY(31),
                 2  PDSGET_REQUEST_NEXT   INITIAL(5)  FIXED BINARY(31),
                 2  PDSGET_REQUEST_READ   INITIAL(8)  FIXED BINARY(31),
                 2  PDSGET_REQUEST_CLOSE  INITIAL(12) FIXED BINARY(31);
             1   PDSGET_REQUEST_1      STATIC,
                 2  PDSGET_REQUEST     FIXED BINARY(31),
             1   PDSGET_MEMBER_1       STATIC,
                 2  PDSGET_MEMBER      CHAR(8),     /* DDNAME FOR OPEN */
             1   PDSGET_RECORD80_1     STATIC,
                 2  PDSGET_RECORD80    CHAR(80),
             1   PDSGET_RETURN_CODE_1  STATIC,
                 2  PDSGET_RETURN_CODE FIXED BINARY(31);
      /* PDSGET_RETURN_CODE DEFINITIONS                                    */
             PDSGET_PTR   POINTER,
             1  PDSGET_STATISTICS          BASED(PDSGET_PTR),
      PDS_TIME_CONVERSION:PROC(A_BYTE) RETURNS(CHAR(2));
      /********************** GETPDSPA V1.2.0  END *************************/
MEMBER PDSCANR
      /*         BUG IN GETPDSP DID NOT RETURN 1ST RECORD ON 1ST CALL.     */
      /*         MODIFIED TO USE INCLUDES FOR PDSGET_PARAMETERS.           */
      PDSCANR:PROCEDURE(EXEC_PARM) OPTIONS(MAIN);
          %INCLUDE GETPDSPA;
             IF PAGE_CTR > 0 THEN PUT PAGE;
             PUT EDIT('PDSCANR V1.1.1','PAGE ',PAGE_CTR)
             PUT SKIP(2);
                 PUT SKIP EDIT('MEMBER ',LAST_MEMBER,' (CONTINUED)')
                 PUT SKIP(2);
          PUT SKIP EDIT('MEMBER PROCESSED=',WS_MEMBER_COUNT)(A,F(10));
             PUT SKIP LIST(SCAN_STR(I),'FOUND',SCAN_CTR(I));
          PUT SKIP LIST('PDSCANR CONCLUDED');
     -P000_LOAD_STR:PROC;
             PUT SKIP EDIT('NO EXEC PARM FOUND.  DEFAULTING TO ''ANY''')
             PUT SKIP EDIT('PARM=''',EXEC_PARM,'''') (A,A,A);
                   PUT SKIP LIST('INVALID PARM');
             PUT SKIP LIST('INVALID PARM');
          PUT SKIP;
             GET LIST(WORK_STR);
                   PUT SKIP LIST('NULL SEARCH STRING IGNORED');
PDSCANR V1.1.1                                                                                               PAGE     2


MEMBER PDSCANR  (CONTINUED)

              PUT SKIP LIST('NO STRINGS TO SCAN FOR');
          PUT SKIP LIST('THE FOLLOWING STRINGS WILL BE SEARCHED FOR');
          PUT SKIP(2) LIST(' ','STRING');
             PUT SKIP LIST(I,SCAN_STR(I));
     -P100_OPEN_PDS:PROC;
          PDSGET_REQUEST = PDSGET_REQUEST_OPEN;
          PDSGET_MEMBER  = 'PDSIN   ';
          CALL P900_CALL_GETPDSP;
          IF PDSGET_RETURN_CODE = 0 THEN
          IF PDSGET_RETURN_CODE = 4 THEN
              PUT SKIP LIST('OPEN FAILED (RC=4)');
          IF PDSGET_RETURN_CODE = 8 THEN
              PUT SKIP LIST('OPEN FAILED (RC=8); EXECUTION TERMINATED');
     -P200_START_DIR:PROC;
          PDSGET_REQUEST = PDSGET_REQUEST_START;
          CALL P900_CALL_GETPDSP;
          IF PDSGET_RETURN_CODE = 0 THEN
          IF PDSGET_RETURN_CODE = 4 THEN
              PUT SKIP LIST('START FAILED (RC=4)');
          IF PDSGET_RETURN_CODE = 8 THEN
              PUT SKIP LIST('START FAILED (RC=8); EXECUTION TERMINATED');
     -P300_NEXT_DIR:PROC;
          PDSGET_RETURN_CODE = 0;
          DO WHILE(PDSGET_RETURN_CODE = 0);
              PDSGET_REQUEST = PDSGET_REQUEST_NEXT;
              CALL P900_CALL_GETPDSP;
              IF PDSGET_RETURN_CODE = 0 THEN
                  PDSGET_RETURN_CODE = 0;
              IF PDSGET_RETURN_CODE = 4 THEN
                  PUT SKIP LIST('END OF DIRECTORY (RC=4)');
              IF PDSGET_RETURN_CODE = 8 THEN
                  PUT SKIP LIST(
     -P400_LOCATE_MEMBER:PROC;
          PDSGET_REQUEST = PDSGET_REQUEST_LOCATE;
          CALL P900_CALL_GETPDSP;
          IF PDSGET_RETURN_CODE = 0 THEN
           /* PUT SKIP LIST('MEMBER NAME=',PDSGET_MEMBER); */
          IF PDSGET_RETURN_CODE = 4 THEN
              PUT SKIP LIST('MEMBER NOT FOUND (RC=4)');
              IF PDSGET_RETURN_CODE = 8 THEN
                  PUT SKIP LIST(
     -P500_READ_MEMBER:PROC;
          PDSGET_REQUEST = PDSGET_REQUEST_READ;
          CALL P900_CALL_GETPDSP;
          IF PDSGET_RETURN_CODE = 0 THEN
              DO WHILE (PDSGET_RETURN_CODE = 0);
                 CALL P900_CALL_GETPDSP;
                 IF PDSGET_RETURN_CODE = 0 THEN
                       IF INDEX(PDSGET_RECORD80,SCAN_STR(I))> 0 THEN
                       IF LAST_MEMBER = PDSGET_MEMBER THEN;
                          LAST_MEMBER = PDSGET_MEMBER;
                          PUT SKIP EDIT('MEMBER ',LAST_MEMBER)
                       PUT SKIP EDIT(PDSGET_RECORD80) (X(5),A);
          IF PDSGET_RETURN_CODE = 4 THEN
           /* PUT SKIP LIST('END OF FILE ON MEMBER (RC=4)') */;
PDSCANR V1.1.1                                                                                               PAGE     3


MEMBER PDSCANR  (CONTINUED)

              IF PDSGET_RETURN_CODE = 8 THEN
                  PUT SKIP LIST(
     -P600_CLOSE_PDS:PROC;
          PDSGET_REQUEST = PDSGET_REQUEST_CLOSE;
          CALL P900_CALL_GETPDSP;
          IF PDSGET_RETURN_CODE = 4 THEN
              PUT SKIP LIST('CLOSE FAILED (RC=4)');
          IF PDSGET_RETURN_CODE = 8 THEN
              PUT SKIP LIST('CLOSE FAILED (RC=8); EXECUTION TERMINATED');
     -P900_CALL_GETPDSP:PROC;
          CALL GETPDSP (PDSGET_REQUEST_1,
                        PDSGET_MEMBER_1,
                        PDSGET_RECORD80_1,
                        PDSGET_RETURN_CODE_1);
      END P900_CALL_GETPDSP;
MEMBER PDSUNLDP
      PDSUNLD:PROCEDURE(EXEC_PARM) OPTIONS(MAIN);
          DECLARE CARD_FILE STREAM OUTPUT FILE;
      /*#INCLUDE GETPDSPA.PLI*/
        %INCLUDE GETPDSPA;
             PUT PAGE EDIT('PDSUNLDP V1.2.0','PAGE ',PAGE_NUM)
                   PUT SKIP EDIT(' WITH PARM=',EXEC_PARM) (A,A);
             PUT SKIP EDIT('MEMBER    USERID  CREATED    UPDATED      TIME',
             PUT SKIP;
          OPEN FILE(CARD_FILE) OUTPUT TITLE('CARDOUT');
          PUT SKIP EDIT('MEMBER PROCESSED=',WS_MEMBER_COUNT)(A,F(10));
          PUT SKIP(2) EDIT('PDSUNLDP V1.2.0 ENDED') (A);
     -P100_OPEN_PDS:PROC;
          PDSGET_REQUEST = PDSGET_REQUEST_OPEN;
          PDSGET_MEMBER  = 'PDSIN   ';
          CALL P900_CALL_GETPDSP;
          IF PDSGET_RETURN_CODE = 0 THEN
          IF PDSGET_RETURN_CODE = 4 THEN
              PUT SKIP LIST('OPEN FAILED (RC=4)');
          IF PDSGET_RETURN_CODE = 8 THEN
              PUT SKIP LIST('OPEN FAILED (RC=8); EXECUTION TERMINATED');
     -P200_START_DIR:PROC;
          PDSGET_REQUEST = PDSGET_REQUEST_START;
          CALL P900_CALL_GETPDSP;
          IF PDSGET_RETURN_CODE = 0 THEN
          IF PDSGET_RETURN_CODE = 4 THEN
              PUT SKIP LIST('START FAILED (RC=4)');
          IF PDSGET_RETURN_CODE = 8 THEN
              PUT SKIP LIST('START FAILED (RC=8); EXECUTION TERMINATED');
     -P300_NEXT_DIR:PROC;
          PDSGET_RETURN_CODE = 0;
          DO WHILE(PDSGET_RETURN_CODE = 0);
              PDSGET_REQUEST = PDSGET_REQUEST_NEXT;
              CALL P900_CALL_GETPDSP;
              IF PDSGET_RETURN_CODE = 0 THEN
                  PDSGET_RETURN_CODE = 0;
              IF PDSGET_RETURN_CODE = 4 THEN
                  PUT SKIP(2) LIST('END OF DIRECTORY (RC=4)');
              IF PDSGET_RETURN_CODE = 8 THEN
                  PUT SKIP LIST(
PDSCANR V1.1.1                                                                                               PAGE     4


MEMBER PDSUNLDP (CONTINUED)

     -P400_LOCATE_MEMBER:PROC;
          PDSGET_REQUEST = PDSGET_REQUEST_LOCATE;
          CALL P900_CALL_GETPDSP;
          IF PDSGET_RETURN_CODE = 0 THEN
          /*  PUT SKIP LIST('MEMBER NAME=',PDSGET_MEMBER);  */
              CALL P700_PROCESS_STATS;
          IF PDSGET_RETURN_CODE = 4 THEN
              PUT SKIP LIST('MEMBER NOT FOUND (RC=4)');
              IF PDSGET_RETURN_CODE = 8 THEN
                  PUT SKIP LIST(
     -P500_READ_MEMBER:PROC;
          PDSGET_REQUEST = PDSGET_REQUEST_READ;
          CALL P900_CALL_GETPDSP;
          IF PDSGET_RETURN_CODE = 0 THEN
              NAME_WORK=PDSGET_MEMBER;
              PUT FILE(CARD_FILE) EDIT('./  ADD NAME=',NAME_STR)
                 PUT FILE(CARD_FILE) EDIT(',',EXEC_PARM)
              DO WHILE (PDSGET_RETURN_CODE = 0);
                 PUT FILE(CARD_FILE) EDIT(PDSGET_RECORD80) (SKIP,A);
                 CALL P900_CALL_GETPDSP;
          IF PDSGET_RETURN_CODE = 4 THEN
              PUT EDIT('END OF MEMBER (RC=4)',REC_COUNT,' RECORDS READ')
              IF PDSGET_RETURN_CODE = 8 THEN
                  PUT SKIP LIST(
     -P600_CLOSE_PDS:PROC;
          PDSGET_REQUEST = PDSGET_REQUEST_CLOSE;
          CALL P900_CALL_GETPDSP;
          IF PDSGET_RETURN_CODE = 4 THEN
              PUT SKIP LIST('CLOSE FAILED (RC=4)');
          IF PDSGET_RETURN_CODE = 8 THEN
              PUT SKIP LIST('CLOSE FAILED (RC=8); EXECUTION TERMINATED');
     -P700_PROCESS_STATS:PROC;
          PDSGET_PTR = ADDR(PDSGET_RECORD80);
          PUT SKIP EDIT(PDSGET_MEMBER,PDS_USER_ID) (A,X(2),A);
          DC_INPUT_FORMAT =  'YYYYDDD ';
          DC_INPUT_DATE   =   DATE_CONV;
          DC_OUTPUT_FORMAT = 'YYYYMMDD';
          PUT EDIT(SUBSTR(DC_OUTPUT_DATE,1,4),'/') (A,A)
                  (SUBSTR(DC_OUTPUT_DATE,5,2),'/') (A,A)
                  (SUBSTR(DC_OUTPUT_DATE,7,2),' ') (A,A);
          DC_INPUT_FORMAT =  'YYYYDDD ';
          DC_INPUT_DATE   =   DATE_CONV;
          DC_OUTPUT_FORMAT = 'YYYYMMDD';
          PUT EDIT(SUBSTR(DC_OUTPUT_DATE,1,4),'/') (A,A)
                  (SUBSTR(DC_OUTPUT_DATE,5,2),'/') (A,A)
                  (SUBSTR(DC_OUTPUT_DATE,7,2),' ') (A,A);
          PUT EDIT(TIME_WORK) (X(2),A);
      END P700_PROCESS_STATS;
     -P900_CALL_GETPDSP:PROC;
          CALL GETPDSP (PDSGET_REQUEST_1,
                        PDSGET_MEMBER_1,
                        PDSGET_RECORD80_1,
                        PDSGET_RETURN_CODE_1);
      END P900_CALL_GETPDSP;
END OF DIRECTORY (RC=4)
PDSCANR V1.1.1                                                                                               PAGE     5


MEMBER PDSUNLDP (CONTINUED)

MEMBER PROCESSED=         4
PUT                     FOUND                           75
PROC                    FOUND                           23
GET                     FOUND                          120
PDSCANR CONCLUDED
                        TTTTTTTTTTTT  EEEEEEEEEEEE   SSSSSSSSSS   TTTTTTTTTTTT   IIIIIIIIII   TTTTTTTTTTTT   3333333333
                       TTTTTTTTTTTT  EEEEEEEEEEEE  SSSSSSSSSSSS  TTTTTTTTTTTT   IIIIIIIIII   TTTTTTTTTTTT  333333333333
                           TT       EE            SS        SS       TT            II            TT       33        33
                          TT       EE            SS                 TT            II            TT                 33
                         TT       EE            SSS                TT            II            TT                 33
                        TT       EEEEEEEE       SSSSSSSSS         TT            II            TT              3333
                       TT       EEEEEEEE        SSSSSSSSS        TT            II            TT              3333
                      TT       EE                     SSS       TT            II            TT                 33
                     TT       EE                      SS       TT            II            TT                 33
                    TT       EE            SS        SS       TT            II            TT       33        33
                   TT       EEEEEEEEEEEE  SSSSSSSSSSSS       TT        IIIIIIIIII        TT       333333333333
                  TT       EEEEEEEEEEEE   SSSSSSSSSS        TT        IIIIIIIIII        TT        3333333333



                    JJJJJJJJJJ        444     555555555555        444      8888888888                  AAAAAAAAAA
                    JJJJJJJJJJ       4444     555555555555       4444     888888888888                AAAAAAAAAAAA
                        JJ          44 44     55                44 44     88        88                AA        AA
                        JJ         44  44     55               44  44     88        88                AA        AA
                        JJ        44   44     55              44   44      88      88                 AA        AA
                        JJ       44444444444  555555555      44444444444    88888888                  AAAAAAAAAAAA
                        JJ      444444444444  5555555555    444444444444    88888888                  AAAAAAAAAAAA
                        JJ             44              55          44      88      88                 AA        AA
                  JJ    JJ             44               55         44     88        88                AA        AA
                  JJ    JJ             44               55         44     88        88                AA        AA
                  JJJJJJJJ             44     555555555555         44     888888888888                AA        AA
                   JJJJJJ              44     55555555555          44      8888888888                 AA        AA


****A   END   JOB 4548  TESTIT3                         ROOM        9.02.44 AM 06 APR 23  PRINTER1  SYS TK4-  JOB 4548   END   A****
****A   END   JOB 4548  TESTIT3                         ROOM        9.02.44 AM 06 APR 23  PRINTER1  SYS TK4-  JOB 4548   END   A****
****A   END   JOB 4548  TESTIT3                         ROOM        9.02.44 AM 06 APR 23  PRINTER1  SYS TK4-  JOB 4548   END   A****
****A   END   JOB 4548  TESTIT3                         ROOM        9.02.44 AM 06 APR 23  PRINTER1  SYS TK4-  JOB 4548   END   A****
